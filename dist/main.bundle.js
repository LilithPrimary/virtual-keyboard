(()=>{"use strict";var e,t,n,r,o,i,a,s={783:(e,t,n)=>{var r=n(618),o=Object.create(null),i="undefined"==typeof document,a=Array.prototype.forEach;function s(){}function c(e,t){if(!t){if(!e.href)return;t=e.href.split("?")[0]}if(d(t)&&!1!==e.isLoaded&&t&&t.indexOf(".css")>-1){e.visited=!0;var n=e.cloneNode();n.isLoaded=!1,n.addEventListener("load",(function(){n.isLoaded||(n.isLoaded=!0,e.parentNode.removeChild(e))})),n.addEventListener("error",(function(){n.isLoaded||(n.isLoaded=!0,e.parentNode.removeChild(e))})),n.href="".concat(t,"?").concat(Date.now()),e.nextSibling?e.parentNode.insertBefore(n,e.nextSibling):e.parentNode.appendChild(n)}}function l(){var e=document.querySelectorAll("link");a.call(e,(function(e){!0!==e.visited&&c(e)}))}function d(e){return!!/^[a-zA-Z][a-zA-Z\d+\-.]*:/.test(e)}e.exports=function(e,t){if(i)return console.log("no window.document found, will not HMR CSS"),s;var n,h,u=function(e){var t=o[e];if(!t){if(document.currentScript)t=document.currentScript.src;else{var n=document.getElementsByTagName("script"),i=n[n.length-1];i&&(t=i.src)}o[e]=t}return function(e){if(!t)return null;var n=t.split(/([^\\/]+)\.js$/),o=n&&n[1];return o&&e?e.split(",").map((function(e){var n=new RegExp("".concat(o,"\\.js$"),"g");return r(t.replace(n,"".concat(e.replace(/{fileName}/g,o),".css")))})):[t.replace(".js",".css")]}}(e);return n=function(){var e=u(t.filename),n=function(e){if(!e)return!1;var t=document.querySelectorAll("link"),n=!1;return a.call(t,(function(t){if(t.href){var o=function(e,t){var n;return e=r(e),t.some((function(r){e.indexOf(t)>-1&&(n=r)})),n}(t.href,e);d(o)&&!0!==t.visited&&o&&(c(t,o),n=!0)}})),n}(e);if(t.locals)return console.log("[HMR] Detected local css modules. Reload all css"),void l();n?console.log("[HMR] css reload %s",e.join(" ")):(console.log("[HMR] Reload all css"),l())},50,h=0,function(){var e=this,t=arguments,r=function(){return n.apply(e,t)};clearTimeout(h),h=setTimeout(r,50)}}},618:e=>{e.exports=function(e){if(e=e.trim(),/^data:/i.test(e))return e;var t=-1!==e.indexOf("//")?e.split("//")[0]+"//":"",n=e.replace(new RegExp(t,"i"),"").split("/"),r=n[0].toLowerCase().replace(/\.$/,"");return n[0]="",t+r+n.reduce((function(e,t){switch(t){case"..":e.pop();break;case".":break;default:e.push(t)}return e}),[]).join("/")}},663:(e,t,n)=>{var r=n(783)(e.id,{publicPath:"",locals:!1});e.hot.dispose(r),e.hot.accept(void 0,r)},131:(e,t,n)=>{n(663);const r=[{en:{low:"`",high:"~"},ru:{low:"ё",high:"Ё"},id:"Backquote"},{en:{low:"1",high:"!"},ru:{low:"1",high:"!"},id:"Digit1"},{en:{low:"2",high:"@"},ru:{low:"2",high:'"'},id:"Digit2"},{en:{low:"3",high:"#"},ru:{low:"3",high:"№"},id:"Digit3"},{en:{low:"4",high:"$"},ru:{low:"4",high:";"},id:"Digit4"},{en:{low:"5",high:"%"},ru:{low:"5",high:"%"},id:"Digit5"},{en:{low:"6",high:"^"},ru:{low:"6",high:":"},id:"Digit6"},{en:{low:"7",high:"&"},ru:{low:"7",high:"?"},id:"Digit7"},{en:{low:"8",high:"*"},ru:{low:"8",high:"*"},id:"Digit8"},{en:{low:"9",high:"("},ru:{low:"9",high:"("},id:"Digit9"},{en:{low:"0",high:")"},ru:{low:"0",high:")"},id:"Digit0"},{en:{low:"-",high:"_"},ru:{low:"-",high:"_"},id:"Minus"},{en:{low:"=",high:"+"},ru:{low:"=",high:"+"},id:"Equal"},{en:{low:"backspace",high:"backspace"},ru:{low:"backspace",high:"backspace"},id:"Backspace"},{en:{low:"Del",high:"Del"},ru:{low:"Del",high:"Del"},id:"Delete"},{en:{low:"keyboard_tab",high:"keyboard_tab"},ru:{low:"keyboard_tab",high:"keyboard_tab"},id:"Tab"},{en:{low:"q",high:"Q"},ru:{low:"й",high:"Й"},id:"KeyQ"},{en:{low:"w",high:"W"},ru:{low:"ц",high:"Ц"},id:"KeyW"},{en:{low:"e",high:"E"},ru:{low:"у",high:"У"},id:"KeyE"},{en:{low:"r",high:"R"},ru:{low:"к",high:"К"},id:"KeyR"},{en:{low:"t",high:"T"},ru:{low:"е",high:"Е"},id:"KeyT"},{en:{low:"y",high:"Y"},ru:{low:"н",high:"Н"},id:"KeyY"},{en:{low:"u",high:"U"},ru:{low:"г",high:"Г"},id:"KeyU"},{en:{low:"i",high:"I"},ru:{low:"ш",high:"Ш"},id:"KeyI"},{en:{low:"o",high:"O"},ru:{low:"щ",high:"Щ"},id:"KeyO"},{en:{low:"p",high:"P"},ru:{low:"з",high:"З"},id:"KeyP"},{en:{low:"[",high:"{"},ru:{low:"х",high:"Х"},id:"BracketLeft"},{en:{low:"]",high:"}"},ru:{low:"ъ",high:"Ъ"},id:"BracketRight"},{en:{low:"\\",high:"|"},ru:{low:"\\",high:"/"},id:"Backslash"},{en:{low:"capslock",high:"capslock"},ru:{low:"capslock",high:"capslock"},id:"CapsLock"},{en:{low:"a",high:"A"},ru:{low:"ф",high:"Ф"},id:"KeyA"},{en:{low:"s",high:"S"},ru:{low:"ы",high:"Ы"},id:"KeyS"},{en:{low:"d",high:"D"},ru:{low:"в",high:"В"},id:"KeyD"},{en:{low:"f",high:"F"},ru:{low:"а",high:"А"},id:"KeyF"},{en:{low:"g",high:"G"},ru:{low:"п",high:"П"},id:"KeyG"},{en:{low:"h",high:"H"},ru:{low:"р",high:"Р"},id:"KeyH"},{en:{low:"j",high:"J"},ru:{low:"о",high:"О"},id:"KeyJ"},{en:{low:"k",high:"K"},ru:{low:"л",high:"Л"},id:"KeyK"},{en:{low:"l",high:"L"},ru:{low:"д",high:"Д"},id:"KeyL"},{en:{low:";",high:":"},ru:{low:"ж",high:"Ж"},id:"Semicolon"},{en:{low:"'",high:'"'},ru:{low:"э",high:"Э"},id:"Quote"},{en:{low:"keyboard_return",high:"keyboard_return"},ru:{low:"keyboard_return",high:"keyboard_return"},id:"Enter"},{en:{low:"Shift",high:"Shift"},ru:{low:"Shift",high:"Shift"},id:"ShiftLeft"},{en:{low:"z",high:"Z"},ru:{low:"я",high:"Я"},id:"KeyZ"},{en:{low:"x",high:"X"},ru:{low:"ч",high:"Ч"},id:"KeyX"},{en:{low:"c",high:"C"},ru:{low:"с",high:"С"},id:"KeyC"},{en:{low:"v",high:"V"},ru:{low:"м",high:"М"},id:"KeyV"},{en:{low:"b",high:"B"},ru:{low:"и",high:"И"},id:"KeyB"},{en:{low:"n",high:"N"},ru:{low:"т",high:"Т"},id:"KeyN"},{en:{low:"m",high:"M"},ru:{low:"ь",high:"Ь"},id:"KeyM"},{en:{low:",",high:"<"},ru:{low:"б",high:"Б"},id:"Comma"},{en:{low:".",high:">"},ru:{low:"ю",high:"Ю"},id:"Period"},{en:{low:"/",high:"?"},ru:{low:".",high:","},id:"Slash"},{en:{low:"Shift",high:"Shift"},ru:{low:"Shift",high:"Shift"},id:"ShiftRight"},{en:{low:"Control",high:"Control"},ru:{low:"Control",high:"Control"},id:"ControlLeft"},{en:{low:"win",high:"win"},ru:{low:"win",high:"win"},id:"MetaLeft"},{en:{low:"Alt",high:"Alt"},ru:{low:"Alt",high:"Alt"},id:"AltLeft"},{en:{low:"space_bar",high:"space_bar"},ru:{low:"space_bar",high:"space_bar"},id:"Space"},{en:{low:"Alt",high:"Alt"},ru:{low:"Alt",high:"Alt"},id:"AltRight"},{en:{low:"Control",high:"Control"},ru:{low:"Control",high:"Control"},id:"ControlRight"}];let o,i,a,s="en",c="low",l=!1,d=!1,h=!1,u=[];function p(e){let t,n,r;if(e instanceof Event){if("Control"===e.key)return;t=e.code,u.forEach((e=>{e.name.id===t&&(n=e.buttonValue.textContent)}))}else t=e.name.id,n=e.buttonValue.textContent;if(u.some((e=>e.name.id===t))){switch(t){case"Backspace":return void(0===o.selectionStart&&0===o.selectionEnd||(o.selectionStart===o.selectionEnd?o.setRangeText("",o.selectionStart-1,o.selectionStart,"end"):o.setRangeText("",o.selectionStart,o.selectionEnd,"end")));case"Delete":return void(o.selectionStart===o.selectionEnd?o.setRangeText("",o.selectionStart,o.selectionStart+1,"end"):o.setRangeText("",o.selectionStart,o.selectionEnd,"end"));case"Enter":r="\n";break;case"Space":r=" ";break;case"Tab":r="    ";break;case"MetaLeft":case"AltRight":case"AltLeft":return;default:r=n}o.setRangeText(r,o.selectionStart,o.selectionEnd,"end")}}class f{button=document.createElement("button");buttonValue=document.createElement("span");value="";constructor(e){this.name=e}createButton(){switch(this.button.classList.add("key"),this.buttonValue.classList.add("key__value"),this.name.en.low){case"Control":this.button.classList.add("key__wide");break;case"backspace":this.button.classList.add("material-symbols-outlined");break;case"keyboard_tab":this.button.classList.add("key__wide","material-symbols-outlined");break;case"capslock":this.button.classList.add("key__wide","material-symbols-outlined","key__capslock");break;case"keyboard_return":this.button.classList.add("key__enter","material-symbols-outlined");break;case"Shift":this.button.classList.add("key__shift");break;case"space_bar":this.button.classList.add("key__space","material-symbols-outlined");break;default:this.button.classList.add("key")}this.setButtonSymbol(),this.button.append(this.buttonValue),this.pressButton(),this.synchronizeWithKeyboard(),document.body.append(this.button)}pressButton(){this.button.addEventListener("click",(()=>{switch(this.name.id){case"CapsLock":d&&this.shiftButton(),this.capsLock();break;case"ShiftLeft":case"ShiftRight":this.shiftButton();break;case"ControlRight":case"ControlLeft":d&&(this.shiftButton(),this.changeLanguage());break;default:p(this),d&&this.shiftButton()}}))}shiftButton(){d?u.forEach((e=>{"Shift"===e.name.en.low&&(e.button.classList.remove("active"),d=!1,l||(c="low",this.changeButtonsValue()))})):u.forEach((e=>{"Shift"===e.name.en.low&&(e.button.classList.add("active"),c="high",this.changeButtonsValue(),d=!0)})),d&&l&&(c="low",this.changeButtonsValue()),!d&&l&&(c="high",this.changeButtonsValue())}setButtonSymbol(){switch(this.buttonValue.textContent=this.name[s][c],this.name.en.low){case"Control":this.buttonValue.textContent="Ctrl";break;case"backspace":this.value=this.value.substring(0,this.value.length-1);break;case"keyboard_tab":this.value="    ";break;case"capslock":this.value=this.capsLock;break;case"keyboard_return":this.value="\n";break;case"shift":case"alt":break;case"space_bar":this.value=" ";break;default:this.value=this.name[s][c]}a.textContent=`Current language: ${s.toLocaleUpperCase()}`}capsLock(){l?(this.button.classList.remove("on"),c="low",l=!1,this.changeButtonsValue()):(this.button.classList.add("on"),c="high",l=!0,this.changeButtonsValue())}changeLanguage(){s="en"===s?"ru":"en",this.changeButtonsValue()}changeButtonsValue(){this.value=this.name.id,u.forEach((e=>e.setButtonSymbol()))}synchronizeWithKeyboard(){document.addEventListener("keydown",(e=>{e.code===this.name.id&&(e.preventDefault(),this.button.classList.add("active")),["ArrowUp","ArrowDown","ArrowLeft","ArrowRight"].includes(e.code)&&e.target.classList.add("active")})),document.addEventListener("keyup",(e=>{e.code===this.name.id&&this.button.classList.remove("active"),["ArrowUp","ArrowDown","ArrowLeft","ArrowRight"].includes(e.code)&&e.target.classList.remove("active")}))}}window.addEventListener("DOMContentLoaded",(function(){s=localStorage.getItem("lang")?localStorage.getItem("lang"):"en",function(){const e=document.createElement("div");e.classList.add("wrapper");const t=document.createElement("main");t.classList.add("main");const n=document.createElement("section");n.classList.add("section","text");const c=document.createElement("div");c.classList.add("text__wrapper"),o=document.createElement("textarea"),o.classList.add("text__input","text-input"),o.addEventListener("blur",(()=>o.focus())),o.autofocus=!0,c.append(o),n.append(c);const l=document.createElement("section");l.classList.add("section","keyboard"),i=document.createElement("div"),i.classList.add("keyboard__wrapper"),l.append(i),t.append(n,l);const g=document.createElement("footer");g.classList.add("footer");const m=document.createElement("a");m.classList.add("link","link__gh"),m.textContent="© Lilith Primary",m.href="https://github.com/LilithPrimary",a=document.createElement("span"),a.classList.add("text"),a.textContent=`Current language: ${s.toLocaleUpperCase()}`;const w=document.createElement("span");w.classList.add("text"),w.textContent="Switch: Shift + Ctrl";const v=document.createElement("a");v.classList.add("link","link__rss"),v.textContent="RSS",v.href="https://rs.school/js/",g.append(m,a,w,v),e.append(t,g),document.body.append(e);const y=document.createElement("button");y.classList.add("key","key__slim");const b=document.createElement("span");b.classList.add("key__value","material-symbols-outlined"),b.textContent="keyboard_arrow_left",y.append(b);const k=document.createElement("button");k.classList.add("key","key__slim");const _=document.createElement("span");_.classList.add("key__value","material-symbols-outlined"),_.textContent="keyboard_arrow_up",k.append(_);const E=document.createElement("button");E.classList.add("key","key__slim");const L=document.createElement("span");L.classList.add("key__value","material-symbols-outlined"),L.textContent="keyboard_arrow_down",E.append(L);const S=document.createElement("button");S.classList.add("key","key__slim");const C=document.createElement("span");C.classList.add("key__value","material-symbols-outlined"),C.textContent="keyboard_arrow_right",S.append(C),document.addEventListener("keydown",(e=>{if(document.body.style.pointerEvents="none","ShiftLeft"!==e.code&&"ShiftRight"!==e.code)if("Control"===e.key&&(h=!0),"CapsLock"!==e.code)switch(p(e),e.code){case"ArrowUp":k.classList.add("active");break;case"ArrowDown":E.classList.add("active");break;case"ArrowLeft":y.classList.add("active");break;case"ArrowRight":S.classList.add("active")}else u[29].capsLock();else{if(e.repeat)return;u[0].shiftButton()}})),document.addEventListener("keyup",(e=>{switch(document.body.style.pointerEvents="inherit",d&&h&&u[0].changeLanguage(),"ShiftLeft"!==e.code&&"ShiftRight"!==e.code||u[0].shiftButton(),"Control"===e.key&&(h=!1),e.code){case"ArrowUp":k.classList.remove("active");break;case"ArrowDown":E.classList.remove("active");break;case"ArrowLeft":y.classList.remove("active");break;case"ArrowRight":S.classList.remove("active")}}));const A=document.createDocumentFragment();u=r.map((e=>{const t=new f(e);return t.createButton(),A.append(t.button),t}));const D=document.createElement("div");function x(e,t){return e.reduce(((e,n)=>{if(n.length>t)for(let r=0;r<n.length;r+=t)e.push(n.slice(r,r+t-1));else e.push(n);return e}),[])}D.classList.add("central-btns-wrapper"),D.append(k,E),i.append(A,y,D,S),y.addEventListener("click",(()=>{o.selectionStart-=1,o.selectionEnd=o.selectionStart-1})),S.addEventListener("click",(()=>{o.selectionStart+=1,o.selectionEnd=o.selectionStart+1})),k.addEventListener("click",(()=>{let e=0;const t=Math.round((o.clientWidth-40)/8.783);let n=o.value.slice(0,o.selectionStart).split("\n");if(n=x(n,t),1===n.length&&n[0].length===t&&(n.push(""),e=1),n.length<2)return;const r=n[n.length-1].length,i=n[n.length-2].length;o.selectionStart=r<i?o.selectionStart-i-1+e:o.selectionStart-r-1+e,o.selectionEnd=o.selectionStart})),E.addEventListener("click",(()=>{const e=Math.round((o.clientWidth-40)/8.783);let t=o.value.slice(0,o.selectionStart).split("\n");t=x(t,e);const n=t[t.length-1].length;t=o.value.slice(o.selectionStart,o.value.length).split("\n");let r=0;if(t[0].length>e-n){const o=t[0].slice(0,e-n);t[0]=t[0].slice(e-n,t[0].length),t.unshift(o),r=-1}if(t=x(t,e),t.length<2)return;const i=t[0].length,a=t[1].length;o.selectionStart=n>a?o.selectionStart+(a+i)+1+r:o.selectionStart+(i+n)+1+r,o.selectionEnd=o.selectionStart}))}()})),window.addEventListener("beforeunload",(function(){localStorage.setItem("lang",s)}))}},c={};function l(e){var t=c[e];if(void 0!==t){if(void 0!==t.error)throw t.error;return t.exports}var n=c[e]={id:e,exports:{}};try{var r={id:e,module:n,factory:s[e],require:l};l.i.forEach((function(e){e(r)})),n=r.module,r.factory.call(n.exports,n,n.exports,r.require)}catch(e){throw n.error=e,e}return n.exports}l.m=s,l.c=c,l.i=[],l.hu=e=>e+"."+l.h()+".hot-update.js",l.miniCssF=e=>{},l.hmrF=()=>"main."+l.h()+".hot-update.json",l.h=()=>"af76440057ba5ca2218d",l.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),l.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),e={},t="virtual-keyboard:",l.l=(n,r,o,i)=>{if(e[n])e[n].push(r);else{var a,s;if(void 0!==o)for(var c=document.getElementsByTagName("script"),d=0;d<c.length;d++){var h=c[d];if(h.getAttribute("src")==n||h.getAttribute("data-webpack")==t+o){a=h;break}}a||(s=!0,(a=document.createElement("script")).charset="utf-8",a.timeout=120,l.nc&&a.setAttribute("nonce",l.nc),a.setAttribute("data-webpack",t+o),a.src=n),e[n]=[r];var u=(t,r)=>{a.onerror=a.onload=null,clearTimeout(p);var o=e[n];if(delete e[n],a.parentNode&&a.parentNode.removeChild(a),o&&o.forEach((e=>e(r))),t)return t(r)},p=setTimeout(u.bind(null,void 0,{type:"timeout",target:a}),12e4);a.onerror=u.bind(null,a.onerror),a.onload=u.bind(null,a.onload),s&&document.head.appendChild(a)}},(()=>{var e,t,n,r={},o=l.c,i=[],a=[],s="idle",c=0,d=[];function h(e){s=e;for(var t=[],n=0;n<a.length;n++)t[n]=a[n].call(null,e);return Promise.all(t)}function u(){0==--c&&h("ready").then((function(){if(0===c){var e=d;d=[];for(var t=0;t<e.length;t++)e[t]()}}))}function p(e){if("idle"!==s)throw new Error("check() is only allowed in idle status");return h("check").then(l.hmrM).then((function(n){return n?h("prepare").then((function(){var r=[];return t=[],Promise.all(Object.keys(l.hmrC).reduce((function(e,o){return l.hmrC[o](n.c,n.r,n.m,e,t,r),e}),[])).then((function(){return t=function(){return e?g(e):h("ready").then((function(){return r}))},0===c?t():new Promise((function(e){d.push((function(){e(t())}))}));var t}))})):h(m()?"ready":"idle").then((function(){return null}))}))}function f(e){return"ready"!==s?Promise.resolve().then((function(){throw new Error("apply() is only allowed in ready status (state: "+s+")")})):g(e)}function g(e){e=e||{},m();var r=t.map((function(t){return t(e)}));t=void 0;var o=r.map((function(e){return e.error})).filter(Boolean);if(o.length>0)return h("abort").then((function(){throw o[0]}));var i=h("dispose");r.forEach((function(e){e.dispose&&e.dispose()}));var a,s=h("apply"),c=function(e){a||(a=e)},l=[];return r.forEach((function(e){if(e.apply){var t=e.apply(c);if(t)for(var n=0;n<t.length;n++)l.push(t[n])}})),Promise.all([i,s]).then((function(){return a?h("fail").then((function(){throw a})):n?g(e).then((function(e){return l.forEach((function(t){e.indexOf(t)<0&&e.push(t)})),e})):h("idle").then((function(){return l}))}))}function m(){if(n)return t||(t=[]),Object.keys(l.hmrI).forEach((function(e){n.forEach((function(n){l.hmrI[e](n,t)}))})),n=void 0,!0}l.hmrD=r,l.i.push((function(d){var g,m,w,v,y=d.module,b=function(t,n){var r=o[n];if(!r)return t;var a=function(a){if(r.hot.active){if(o[a]){var s=o[a].parents;-1===s.indexOf(n)&&s.push(n)}else i=[n],e=a;-1===r.children.indexOf(a)&&r.children.push(a)}else console.warn("[HMR] unexpected require("+a+") from disposed module "+n),i=[];return t(a)},l=function(e){return{configurable:!0,enumerable:!0,get:function(){return t[e]},set:function(n){t[e]=n}}};for(var d in t)Object.prototype.hasOwnProperty.call(t,d)&&"e"!==d&&Object.defineProperty(a,d,l(d));return a.e=function(e){return function(e){switch(s){case"ready":h("prepare");case"prepare":return c++,e.then(u,u),e;default:return e}}(t.e(e))},a}(d.require,d.id);y.hot=(g=d.id,m=y,v={_acceptedDependencies:{},_acceptedErrorHandlers:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_selfInvalidated:!1,_disposeHandlers:[],_main:w=e!==g,_requireSelf:function(){i=m.parents.slice(),e=w?void 0:g,l(g)},active:!0,accept:function(e,t,n){if(void 0===e)v._selfAccepted=!0;else if("function"==typeof e)v._selfAccepted=e;else if("object"==typeof e&&null!==e)for(var r=0;r<e.length;r++)v._acceptedDependencies[e[r]]=t||function(){},v._acceptedErrorHandlers[e[r]]=n;else v._acceptedDependencies[e]=t||function(){},v._acceptedErrorHandlers[e]=n},decline:function(e){if(void 0===e)v._selfDeclined=!0;else if("object"==typeof e&&null!==e)for(var t=0;t<e.length;t++)v._declinedDependencies[e[t]]=!0;else v._declinedDependencies[e]=!0},dispose:function(e){v._disposeHandlers.push(e)},addDisposeHandler:function(e){v._disposeHandlers.push(e)},removeDisposeHandler:function(e){var t=v._disposeHandlers.indexOf(e);t>=0&&v._disposeHandlers.splice(t,1)},invalidate:function(){switch(this._selfInvalidated=!0,s){case"idle":t=[],Object.keys(l.hmrI).forEach((function(e){l.hmrI[e](g,t)})),h("ready");break;case"ready":Object.keys(l.hmrI).forEach((function(e){l.hmrI[e](g,t)}));break;case"prepare":case"check":case"dispose":case"apply":(n=n||[]).push(g)}},check:p,apply:f,status:function(e){if(!e)return s;a.push(e)},addStatusHandler:function(e){a.push(e)},removeStatusHandler:function(e){var t=a.indexOf(e);t>=0&&a.splice(t,1)},data:r[g]},e=void 0,v),y.parents=i,y.children=[],i=[],d.require=b})),l.hmrC={},l.hmrI={}})(),(()=>{var e;l.g.importScripts&&(e=l.g.location+"");var t=l.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var n=t.getElementsByTagName("script");n.length&&(e=n[n.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),l.p=e})(),n=(e,t,n,r)=>{var o=document.createElement("link");return o.rel="stylesheet",o.type="text/css",o.onerror=o.onload=i=>{if(o.onerror=o.onload=null,"load"===i.type)n();else{var a=i&&("load"===i.type?"missing":i.type),s=i&&i.target&&i.target.href||t,c=new Error("Loading CSS chunk "+e+" failed.\n("+s+")");c.code="CSS_CHUNK_LOAD_FAILED",c.type=a,c.request=s,o.parentNode.removeChild(o),r(c)}},o.href=t,document.head.appendChild(o),o},r=(e,t)=>{for(var n=document.getElementsByTagName("link"),r=0;r<n.length;r++){var o=(a=n[r]).getAttribute("data-href")||a.getAttribute("href");if("stylesheet"===a.rel&&(o===e||o===t))return a}var i=document.getElementsByTagName("style");for(r=0;r<i.length;r++){var a;if((o=(a=i[r]).getAttribute("data-href"))===e||o===t)return a}},o=[],i=[],a=e=>({dispose:()=>{for(var e=0;e<o.length;e++){var t=o[e];t.parentNode&&t.parentNode.removeChild(t)}o.length=0},apply:()=>{for(var e=0;e<i.length;e++)i[e].rel="stylesheet";i.length=0}}),l.hmrC.miniCss=(e,t,s,c,d,h)=>{d.push(a),e.forEach((e=>{var t=l.miniCssF(e),a=l.p+t,s=r(t,a);s&&c.push(new Promise(((t,r)=>{var c=n(e,a,(()=>{c.as="style",c.rel="preload",t()}),r);o.push(s),i.push(c)})))}))},(()=>{var e,t,n,r,o,i=l.hmrS_jsonp=l.hmrS_jsonp||{179:0},a={};function s(t,n){return e=n,new Promise(((e,n)=>{a[t]=e;var r=l.p+l.hu(t),o=new Error;l.l(r,(e=>{if(a[t]){a[t]=void 0;var r=e&&("load"===e.type?"missing":e.type),i=e&&e.target&&e.target.src;o.message="Loading hot update chunk "+t+" failed.\n("+r+": "+i+")",o.name="ChunkLoadError",o.type=r,o.request=i,n(o)}}))}))}function c(e){function a(e){for(var t=[e],n={},r=t.map((function(e){return{chain:[e],id:e}}));r.length>0;){var o=r.pop(),i=o.id,a=o.chain,c=l.c[i];if(c&&(!c.hot._selfAccepted||c.hot._selfInvalidated)){if(c.hot._selfDeclined)return{type:"self-declined",chain:a,moduleId:i};if(c.hot._main)return{type:"unaccepted",chain:a,moduleId:i};for(var d=0;d<c.parents.length;d++){var h=c.parents[d],u=l.c[h];if(u){if(u.hot._declinedDependencies[i])return{type:"declined",chain:a.concat([h]),moduleId:i,parentId:h};-1===t.indexOf(h)&&(u.hot._acceptedDependencies[i]?(n[h]||(n[h]=[]),s(n[h],[i])):(delete n[h],t.push(h),r.push({chain:a.concat([h]),id:h})))}}}}return{type:"accepted",moduleId:e,outdatedModules:t,outdatedDependencies:n}}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];-1===e.indexOf(r)&&e.push(r)}}l.f&&delete l.f.jsonpHmr,t=void 0;var c={},d=[],h={},u=function(e){console.warn("[HMR] unexpected require("+e.id+") to disposed module")};for(var p in n)if(l.o(n,p)){var f,g=n[p],m=!1,w=!1,v=!1,y="";switch((f=g?a(p):{type:"disposed",moduleId:p}).chain&&(y="\nUpdate propagation: "+f.chain.join(" -> ")),f.type){case"self-declined":e.onDeclined&&e.onDeclined(f),e.ignoreDeclined||(m=new Error("Aborted because of self decline: "+f.moduleId+y));break;case"declined":e.onDeclined&&e.onDeclined(f),e.ignoreDeclined||(m=new Error("Aborted because of declined dependency: "+f.moduleId+" in "+f.parentId+y));break;case"unaccepted":e.onUnaccepted&&e.onUnaccepted(f),e.ignoreUnaccepted||(m=new Error("Aborted because "+p+" is not accepted"+y));break;case"accepted":e.onAccepted&&e.onAccepted(f),w=!0;break;case"disposed":e.onDisposed&&e.onDisposed(f),v=!0;break;default:throw new Error("Unexception type "+f.type)}if(m)return{error:m};if(w)for(p in h[p]=g,s(d,f.outdatedModules),f.outdatedDependencies)l.o(f.outdatedDependencies,p)&&(c[p]||(c[p]=[]),s(c[p],f.outdatedDependencies[p]));v&&(s(d,[f.moduleId]),h[p]=u)}n=void 0;for(var b,k=[],_=0;_<d.length;_++){var E=d[_],L=l.c[E];L&&(L.hot._selfAccepted||L.hot._main)&&h[E]!==u&&!L.hot._selfInvalidated&&k.push({module:E,require:L.hot._requireSelf,errorHandler:L.hot._selfAccepted})}return{dispose:function(){var e;r.forEach((function(e){delete i[e]})),r=void 0;for(var t,n=d.slice();n.length>0;){var o=n.pop(),a=l.c[o];if(a){var s={},h=a.hot._disposeHandlers;for(_=0;_<h.length;_++)h[_].call(null,s);for(l.hmrD[o]=s,a.hot.active=!1,delete l.c[o],delete c[o],_=0;_<a.children.length;_++){var u=l.c[a.children[_]];u&&(e=u.parents.indexOf(o))>=0&&u.parents.splice(e,1)}}}for(var p in c)if(l.o(c,p)&&(a=l.c[p]))for(b=c[p],_=0;_<b.length;_++)t=b[_],(e=a.children.indexOf(t))>=0&&a.children.splice(e,1)},apply:function(t){for(var n in h)l.o(h,n)&&(l.m[n]=h[n]);for(var r=0;r<o.length;r++)o[r](l);for(var i in c)if(l.o(c,i)){var a=l.c[i];if(a){b=c[i];for(var s=[],u=[],p=[],f=0;f<b.length;f++){var g=b[f],m=a.hot._acceptedDependencies[g],w=a.hot._acceptedErrorHandlers[g];if(m){if(-1!==s.indexOf(m))continue;s.push(m),u.push(w),p.push(g)}}for(var v=0;v<s.length;v++)try{s[v].call(null,b)}catch(n){if("function"==typeof u[v])try{u[v](n,{moduleId:i,dependencyId:p[v]})}catch(r){e.onErrored&&e.onErrored({type:"accept-error-handler-errored",moduleId:i,dependencyId:p[v],error:r,originalError:n}),e.ignoreErrored||(t(r),t(n))}else e.onErrored&&e.onErrored({type:"accept-errored",moduleId:i,dependencyId:p[v],error:n}),e.ignoreErrored||t(n)}}}for(var y=0;y<k.length;y++){var _=k[y],E=_.module;try{_.require(E)}catch(n){if("function"==typeof _.errorHandler)try{_.errorHandler(n,{moduleId:E,module:l.c[E]})}catch(r){e.onErrored&&e.onErrored({type:"self-accept-error-handler-errored",moduleId:E,error:r,originalError:n}),e.ignoreErrored||(t(r),t(n))}else e.onErrored&&e.onErrored({type:"self-accept-errored",moduleId:E,error:n}),e.ignoreErrored||t(n)}}return d}}}self.webpackHotUpdatevirtual_keyboard=(t,r,i)=>{for(var s in r)l.o(r,s)&&(n[s]=r[s],e&&e.push(s));i&&o.push(i),a[t]&&(a[t](),a[t]=void 0)},l.hmrI.jsonp=function(e,t){n||(n={},o=[],r=[],t.push(c)),l.o(n,e)||(n[e]=l.m[e])},l.hmrC.jsonp=function(e,a,d,h,u,p){u.push(c),t={},r=a,n=d.reduce((function(e,t){return e[t]=!1,e}),{}),o=[],e.forEach((function(e){l.o(i,e)&&void 0!==i[e]?(h.push(s(e,p)),t[e]=!0):t[e]=!1})),l.f&&(l.f.jsonpHmr=function(e,n){t&&l.o(t,e)&&!t[e]&&(n.push(s(e)),t[e]=!0)})},l.hmrM=()=>{if("undefined"==typeof fetch)throw new Error("No browser support: need fetch API");return fetch(l.p+l.hmrF()).then((e=>{if(404!==e.status){if(!e.ok)throw new Error("Failed to fetch update manifest "+e.statusText);return e.json()}}))}})(),l(131)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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YSxHQUFHLFFBQVMsSUFDNUlwRCxFQUFPcUQsSUFBSUMsUUFBUUgsR0FDbkJuRCxFQUFPcUQsSUFBSUUsWUFBT0MsRUFBV0wsSSxxQkNObkMsTUFzcEJBLEVBdHBCZ0IsQ0FDWixDQUNJTSxHQUFJLENBQ0FDLElBQUssSUFDTEMsS0FBTSxLQUVWQyxHQUFJLENBQ0FGLElBQUssSUFDTEMsS0FBTSxLQUVWUCxHQUFJLGFBRVIsQ0FDSUssR0FBSSxDQUNBQyxJQUFLLElBQ0xDLEtBQU0sS0FFVkMsR0FBSSxDQUNBRixJQUFLLElBQ0xDLEtBQU0sS0FFVlAsR0FBSSxVQUVSLENBQ0lLLEdBQUksQ0FDQUMsSUFBSyxJQUNMQyxLQUFNLEtBRVZDLEdBQUksQ0FDQUYsSUFBSyxJQUNMQyxLQUFNLEtBRVZQLEdBQUksVUFFUixDQUNJSyxHQUFJLENBQ0FDLElBQUssSUFDTEMsS0FBTSxLQUVWQyxHQUFJLENBQ0FGLElBQUssSUFDTEMsS0FBTSxLQUVWUCxHQUFJLFVBRVIsQ0FDSUssR0FBSSxDQUNBQyxJQUFLLElBQ0xDLEtBQU0sS0FFVkMsR0FBSSxDQUNBRixJQUFLLElBQ0xDLEtBQU0sS0FFVlAsR0FBSSxVQUVSLENBQ0lLLEdBQUksQ0FDQUMsSUFBSyxJQUNMQyxLQUFNLEtBRVZDLEdBQUksQ0FDQUYsSUFBSyxJQUNMQyxLQUFNLEtBRVZQLEdBQUksVUFFUixDQUNJSyxHQUFJLENBQ0FDLElBQUssSUFDTEMsS0FBTSxLQUVWQyxHQUFJLENBQ0FGLElBQUssSUFDTEMsS0FBTSxLQUVWUCxHQUFJLFVBRVIsQ0FDSUssR0FBSSxDQUNBQyxJQUFLLElBQ0xDLEtBQU0sS0FFVkMsR0FBSSxDQUNBRixJQUFLLElBQ0xDLEtBQU0sS0FFVlAsR0FBSSxVQUVSLENBQ0lLLEdBQUksQ0FDQUMsSUFBSyxJQUNMQyxLQUFNLEtBRVZDLEdBQUksQ0FDQUYsSUFBSyxJQUNMQyxLQUFNLEtBRVZQLEdBQUksVUFFUixDQUNJSyxHQUFJLENBQ0FDLElBQUssSUFDTEMsS0FBTSxLQUVWQyxHQUFJLENBQ0FGLElBQUssSUFDTEMsS0FBTSxLQUVWUCxHQUFJLFVBRVIsQ0FDSUssR0FBSSxDQUNBQyxJQUFLLElBQ0xDLEtBQU0sS0FFVkMsR0FBSSxDQUNBRixJQUFLLElBQ0xDLEtBQU0sS0FFVlAsR0FBSSxVQUVSLENBQ0lLLEdBQUksQ0FDQUMsSUFBSyxJQUNMQyxLQUFNLEtBRVZDLEdBQUksQ0FDQUYsSUFBSyxJQUNMQyxLQUFNLEtBRVZQLEdBQUksU0FFUixDQUNJSyxHQUFJLENBQ0FDLElBQUssSUFDTEMsS0FBTSxLQUVWQyxHQUFJLENBQ0FGLElBQUssSUFDTEMsS0FBTSxLQUVWUCxHQUFJLFNBRVIsQ0FDSUssR0FBSSxDQUNBQyxJQUFLLFlBQ0xDLEtBQU0sYUFFVkMsR0FBSSxDQUNBRixJQUFLLFlBQ0xDLEtBQU0sYUFFVlAsR0FBSSxhQUVSLENBQ0lLLEdBQUksQ0FDQUMsSUFBSyxNQUNMQyxLQUFNLE9BRVZDLEdBQUksQ0FDQUYsSUFBSyxNQUNMQyxLQUFNLE9BRVZQLEdBQUksVUFFUixDQUNJSyxHQUFJLENBQ0FDLElBQUssZUFDTEMsS0FBTSxnQkFFVkMsR0FBSSxDQUNBRixJQUFLLGVBQ0xDLEtBQU0sZ0JBRVZQLEdBQUksT0FFUixDQUNJSyxHQUFJLENBQ0FDLElBQUssSUFDTEMsS0FBTSxLQUVWQyxHQUFJLENBQ0FGLElBQUssSUFDTEMsS0FBTSxLQUVWUCxHQUFJLFFBRVIsQ0FDSUssR0FBSSxDQUNBQyxJQUFLLElBQ0xDLEtBQU0sS0FFVkMsR0FBSSxDQUNBRixJQUFLLElBQ0xDLEtBQU0sS0FFVlAsR0FBSSxRQUVSLENBQ0lLLEdBQUksQ0FDQUMsSUFBSyxJQUNMQyxLQUFNLEtBRVZDLEdBQUksQ0FDQUYsSUFBSyxJQUNMQyxLQUFNLEtBRVZQLEdBQUksUUFFUixDQUNJSyxHQUFJLENBQ0FDLElBQUssSUFDTEMsS0FBTSxLQUVWQyxHQUFJLENBQ0FGLElBQUssSUFDTEMsS0FBTSxLQUVWUCxHQUFJLFFBRVIsQ0FDSUssR0FBSSxDQUNBQyxJQUFLLElBQ0xDLEtBQU0sS0FFVkMsR0FBSSxDQUNBRixJQUFLLElBQ0xDLEtBQU0sS0FFVlAsR0FBSSxRQUVSLENBQ0lLLEdBQUksQ0FDQUMsSUFBSyxJQUNMQyxLQUFNLEtBRVZDLEdBQUksQ0FDQUYsSUFBSyxJQUNMQyxLQUFNLEtBRVZQLEdBQUksUUFFUixDQUNJSyxHQUFJLENBQ0FDLElBQUssSUFDTEMsS0FBTSxLQUVWQyxHQUFJLENBQ0FGLElBQUssSUFDTEMsS0FBTSxLQUVWUCxHQUFJLFFBRVIsQ0FDSUssR0FBSSxDQUNBQyxJQUFLLElBQ0xDLEtBQU0sS0FFVkMsR0FBSSxDQUNBRixJQUFLLElBQ0xDLEtBQU0sS0FFVlAsR0FBSSxRQUVSLENBQ0lLLEdBQUksQ0FDQUMsSUFBSyxJQUNMQyxLQUFNLEtBRVZDLEdBQUksQ0FDQUYsSUFBSyxJQUNMQyxLQUFNLEtBRVZQLEdBQUksUUFFUixDQUNJSyxHQUFJLENBQ0FDLElBQUssSUFDTEMsS0FBTSxLQUVWQyxHQUFJLENBQ0FGLElBQUssSUFDTEMsS0FBTSxLQUVWUCxHQUFJLFFBRVIsQ0FDSUssR0FBSSxDQUNBQyxJQUFLLElBQ0xDLEtBQU0sS0FFVkMsR0FBSSxDQUNBRixJQUFLLElBQ0xDLEtBQU0sS0FFVlAsR0FBSSxlQUVSLENBQ0lLLEdBQUksQ0FDQUMsSUFBSyxJQUNMQyxLQUFNLEtBRVZDLEdBQUksQ0FDQUYsSUFBSyxJQUNMQyxLQUFNLEtBRVZQLEdBQUksZ0JBRVIsQ0FDSUssR0FBSSxDQUNBQyxJQUFLLEtBQ0xDLEtBQU0sS0FFVkMsR0FBSSxDQUNBRixJQUFLLEtBQ0xDLEtBQU0sS0FFVlAsR0FBSSxhQUVSLENBQ0lLLEdBQUksQ0FDQUMsSUFBSyxXQUNMQyxLQUFNLFlBRVZDLEdBQUksQ0FDQUYsSUFBSyxXQUNMQyxLQUFNLFlBRVZQLEdBQUksWUFFUixDQUNJSyxHQUFJLENBQ0FDLElBQUssSUFDTEMsS0FBTSxLQUVWQyxHQUFJLENBQ0FGLElBQUssSUFDTEMsS0FBTSxLQUVWUCxHQUFJLFFBRVIsQ0FDSUssR0FBSSxDQUNBQyxJQUFLLElBQ0xDLEtBQU0sS0FFVkMsR0FBSSxDQUNBRixJQUFLLElBQ0xDLEtBQU0sS0FFVlAsR0FBSSxRQUVSLENBQ0lLLEdBQUksQ0FDQUMsSUFBSyxJQUNMQyxLQUFNLEtBRVZDLEdBQUksQ0FDQUYsSUFBSyxJQUNMQyxLQUFNLEtBRVZQLEdBQUksUUFFUixDQUNJSyxHQUFJLENBQ0FDLElBQUssSUFDTEMsS0FBTSxLQUVWQyxHQUFJLENBQ0FGLElBQUssSUFDTEMsS0FBTSxLQUVWUCxHQUFJLFFBRVIsQ0FDSUssR0FBSSxDQUNBQyxJQUFLLElBQ0xDLEtBQU0sS0FFVkMsR0FBSSxDQUNBRixJQUFLLElBQ0xDLEtBQU0sS0FFVlAsR0FBSSxRQUVSLENBQ0lLLEdBQUksQ0FDQUMsSUFBSyxJQUNMQyxLQUFNLEtBRVZDLEdBQUksQ0FDQUYsSUFBSyxJQUNMQyxLQUFNLEtBRVZQLEdBQUksUUFFUixDQUNJSyxHQUFJLENBQ0FDLElBQUssSUFDTEMsS0FBTSxLQUVWQyxHQUFJLENBQ0FGLElBQUssSUFDTEMsS0FBTSxLQUVWUCxHQUFJLFFBRVIsQ0FDSUssR0FBSSxDQUNBQyxJQUFLLElBQ0xDLEtBQU0sS0FFVkMsR0FBSSxDQUNBRixJQUFLLElBQ0xDLEtBQU0sS0FFVlAsR0FBSSxRQUVSLENBQ0lLLEdBQUksQ0FDQUMsSUFBSyxJQUNMQyxLQUFNLEtBRVZDLEdBQUksQ0FDQUYsSUFBSyxJQUNMQyxLQUFNLEtBRVZQLEdBQUksUUFFUixDQUNJSyxHQUFJLENBQ0FDLElBQUssSUFDTEMsS0FBTSxLQUVWQyxHQUFJLENBQ0FGLElBQUssSUFDTEMsS0FBTSxLQUVWUCxHQUFJLGFBRVIsQ0FDSUssR0FBSSxDQUNBQyxJQUFLLElBQ0xDLEtBQU0sS0FFVkMsR0FBSSxDQUNBRixJQUFLLElBQ0xDLEtBQU0sS0FFVlAsR0FBSSxTQUVSLENBQ0lLLEdBQUksQ0FDQUMsSUFBSyxrQkFDTEMsS0FBTSxtQkFFVkMsR0FBSSxDQUNBRixJQUFLLGtCQUNMQyxLQUFNLG1CQUVWUCxHQUFJLFNBRVIsQ0FDSUssR0FBSSxDQUNBQyxJQUFLLFFBQ0xDLEtBQU0sU0FFVkMsR0FBSSxDQUNBRixJQUFLLFFBQ0xDLEtBQU0sU0FFVlAsR0FBSSxhQUVSLENBQ0lLLEdBQUksQ0FDQUMsSUFBSyxJQUNMQyxLQUFNLEtBRVZDLEdBQUksQ0FDQUYsSUFBSyxJQUNMQyxLQUFNLEtBRVZQLEdBQUksUUFFUixDQUNJSyxHQUFJLENBQ0FDLElBQUssSUFDTEMsS0FBTSxLQUVWQyxHQUFJLENBQ0FGLElBQUssSUFDTEMsS0FBTSxLQUVWUCxHQUFJLFFBRVIsQ0FDSUssR0FBSSxDQUNBQyxJQUFLLElBQ0xDLEtBQU0sS0FFVkMsR0FBSSxDQUNBRixJQUFLLElBQ0xDLEtBQU0sS0FFVlAsR0FBSSxRQUVSLENBQ0lLLEdBQUksQ0FDQUMsSUFBSyxJQUNMQyxLQUFNLEtBRVZDLEdBQUksQ0FDQUYsSUFBSyxJQUNMQyxLQUFNLEtBRVZQLEdBQUksUUFFUixDQUNJSyxHQUFJLENBQ0FDLElBQUssSUFDTEMsS0FBTSxLQUVWQyxHQUFJLENBQ0FGLElBQUssSUFDTEMsS0FBTSxLQUVWUCxHQUFJLFFBRVIsQ0FDSUssR0FBSSxDQUNBQyxJQUFLLElBQ0xDLEtBQU0sS0FFVkMsR0FBSSxDQUNBRixJQUFLLElBQ0xDLEtBQU0sS0FFVlAsR0FBSSxRQUVSLENBQ0lLLEdBQUksQ0FDQUMsSUFBSyxJQUNMQyxLQUFNLEtBRVZDLEdBQUksQ0FDQUYsSUFBSyxJQUNMQyxLQUFNLEtBRVZQLEdBQUksUUFFUixDQUNJSyxHQUFJLENBQ0FDLElBQUssSUFDTEMsS0FBTSxLQUVWQyxHQUFJLENBQ0FGLElBQUssSUFDTEMsS0FBTSxLQUVWUCxHQUFJLFNBRVIsQ0FDSUssR0FBSSxDQUNBQyxJQUFLLElBQ0xDLEtBQU0sS0FFVkMsR0FBSSxDQUNBRixJQUFLLElBQ0xDLEtBQU0sS0FFVlAsR0FBSSxVQUVSLENBQ0lLLEdBQUksQ0FDQUMsSUFBSyxJQUNMQyxLQUFNLEtBRVZDLEdBQUksQ0FDQUYsSUFBSyxJQUNMQyxLQUFNLEtBRVZQLEdBQUksU0FFUixDQUNJSyxHQUFJLENBQ0FDLElBQUssUUFDTEMsS0FBTSxTQUVWQyxHQUFJLENB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L0ksTUFBTSxtQ0FBcUM4SSxFQUFTRSxZQUMvRSxPQUFPRixFQUFTRyxhLEdDcmZRNU0sRUFBb0IsTSIsInNvdXJjZXMiOlsid2VicGFjazovL3ZpcnR1YWwta2V5Ym9hcmQvd2VicGFjay9ydW50aW1lL2xvYWQgc2NyaXB0Iiwid2VicGFjazovL3ZpcnR1YWwta2V5Ym9hcmQvd2VicGFjay9ydW50aW1lL2NzcyBsb2FkaW5nIiwid2VicGFjazovL3ZpcnR1YWwta2V5Ym9hcmQvLi9ub2RlX21vZHVsZXMvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vZGlzdC9obXIvaG90TW9kdWxlUmVwbGFjZW1lbnQuanMiLCJ3ZWJwYWNrOi8vdmlydHVhbC1rZXlib2FyZC8uL25vZGVfbW9kdWxlcy9taW5pLWNzcy1leHRyYWN0LXBsdWdpbi9kaXN0L2htci9ub3JtYWxpemUtdXJsLmpzIiwid2VicGFjazovL3ZpcnR1YWwta2V5Ym9hcmQvLi9zcmMvc3R5bGVzL21haW4uc2Nzcz8wZGQ5Iiwid2VicGFjazovL3ZpcnR1YWwta2V5Ym9hcmQvLi9zcmMvc2NyaXB0L2J1dHRvbnMuanMiLCJ3ZWJwYWNrOi8vdmlydHVhbC1rZXlib2FyZC8uL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly92aXJ0dWFsLWtleWJvYXJkL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL3ZpcnR1YWwta2V5Ym9hcmQvd2VicGFjay9ydW50aW1lL2dldCBqYXZhc2NyaXB0IHVwZGF0ZSBjaHVuayBmaWxlbmFtZSIsIndlYnBhY2s6Ly92aXJ0dWFsLWtleWJvYXJkL3dlYnBhY2svcnVudGltZS9nZXQgbWluaS1jc3MgY2h1bmsgZmlsZW5hbWUiLCJ3ZWJwYWNrOi8vdmlydHVhbC1rZXlib2FyZC93ZWJwYWNrL3J1bnRpbWUvZ2V0IHVwZGF0ZSBtYW5pZmVzdCBmaWxlbmFtZSIsIndlYnBhY2s6Ly92aXJ0dWFsLWtleWJvYXJkL3dlYnBhY2svcnVudGltZS9nZXRGdWxsSGFzaCIsIndlYnBhY2s6Ly92aXJ0dWFsLWtleWJvYXJkL3dlYnBhY2svcnVudGltZS9nbG9iYWwiLCJ3ZWJwYWNrOi8vdmlydHVhbC1rZXlib2FyZC93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL3ZpcnR1YWwta2V5Ym9hcmQvd2VicGFjay9ydW50aW1lL2hvdCBtb2R1bGUgcmVwbGFjZW1lbnQiLCJ3ZWJwYWNrOi8vdmlydHVhbC1rZXlib2FyZC93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly92aXJ0dWFsLWtleWJvYXJkL3dlYnBhY2svcnVudGltZS9qc29ucCBjaHVuayBsb2FkaW5nIiwid2VicGFjazovL3ZpcnR1YWwta2V5Ym9hcmQvd2VicGFjay9zdGFydHVwIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBpblByb2dyZXNzID0ge307XG52YXIgZGF0YVdlYnBhY2tQcmVmaXggPSBcInZpcnR1YWwta2V5Ym9hcmQ6XCI7XG4vLyBsb2FkU2NyaXB0IGZ1bmN0aW9uIHRvIGxvYWQgYSBzY3JpcHQgdmlhIHNjcmlwdCB0YWdcbl9fd2VicGFja19yZXF1aXJlX18ubCA9ICh1cmwsIGRvbmUsIGtleSwgY2h1bmtJZCkgPT4ge1xuXHRpZihpblByb2dyZXNzW3VybF0pIHsgaW5Qcm9ncmVzc1t1cmxdLnB1c2goZG9uZSk7IHJldHVybjsgfVxuXHR2YXIgc2NyaXB0LCBuZWVkQXR0YWNoO1xuXHRpZihrZXkgIT09IHVuZGVmaW5lZCkge1xuXHRcdHZhciBzY3JpcHRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJzY3JpcHRcIik7XG5cdFx0Zm9yKHZhciBpID0gMDsgaSA8IHNjcmlwdHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBzID0gc2NyaXB0c1tpXTtcblx0XHRcdGlmKHMuZ2V0QXR0cmlidXRlKFwic3JjXCIpID09IHVybCB8fCBzLmdldEF0dHJpYnV0ZShcImRhdGEtd2VicGFja1wiKSA9PSBkYXRhV2VicGFja1ByZWZpeCArIGtleSkgeyBzY3JpcHQgPSBzOyBicmVhazsgfVxuXHRcdH1cblx0fVxuXHRpZighc2NyaXB0KSB7XG5cdFx0bmVlZEF0dGFjaCA9IHRydWU7XG5cdFx0c2NyaXB0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7XG5cblx0XHRzY3JpcHQuY2hhcnNldCA9ICd1dGYtOCc7XG5cdFx0c2NyaXB0LnRpbWVvdXQgPSAxMjA7XG5cdFx0aWYgKF9fd2VicGFja19yZXF1aXJlX18ubmMpIHtcblx0XHRcdHNjcmlwdC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBfX3dlYnBhY2tfcmVxdWlyZV9fLm5jKTtcblx0XHR9XG5cdFx0c2NyaXB0LnNldEF0dHJpYnV0ZShcImRhdGEtd2VicGFja1wiLCBkYXRhV2VicGFja1ByZWZpeCArIGtleSk7XG5cdFx0c2NyaXB0LnNyYyA9IHVybDtcblx0fVxuXHRpblByb2dyZXNzW3VybF0gPSBbZG9uZV07XG5cdHZhciBvblNjcmlwdENvbXBsZXRlID0gKHByZXYsIGV2ZW50KSA9PiB7XG5cdFx0Ly8gYXZvaWQgbWVtIGxlYWtzIGluIElFLlxuXHRcdHNjcmlwdC5vbmVycm9yID0gc2NyaXB0Lm9ubG9hZCA9IG51bGw7XG5cdFx0Y2xlYXJUaW1lb3V0KHRpbWVvdXQpO1xuXHRcdHZhciBkb25lRm5zID0gaW5Qcm9ncmVzc1t1cmxdO1xuXHRcdGRlbGV0ZSBpblByb2dyZXNzW3VybF07XG5cdFx0c2NyaXB0LnBhcmVudE5vZGUgJiYgc2NyaXB0LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc2NyaXB0KTtcblx0XHRkb25lRm5zICYmIGRvbmVGbnMuZm9yRWFjaCgoZm4pID0+IChmbihldmVudCkpKTtcblx0XHRpZihwcmV2KSByZXR1cm4gcHJldihldmVudCk7XG5cdH1cblx0O1xuXHR2YXIgdGltZW91dCA9IHNldFRpbWVvdXQob25TY3JpcHRDb21wbGV0ZS5iaW5kKG51bGwsIHVuZGVmaW5lZCwgeyB0eXBlOiAndGltZW91dCcsIHRhcmdldDogc2NyaXB0IH0pLCAxMjAwMDApO1xuXHRzY3JpcHQub25lcnJvciA9IG9uU2NyaXB0Q29tcGxldGUuYmluZChudWxsLCBzY3JpcHQub25lcnJvcik7XG5cdHNjcmlwdC5vbmxvYWQgPSBvblNjcmlwdENvbXBsZXRlLmJpbmQobnVsbCwgc2NyaXB0Lm9ubG9hZCk7XG5cdG5lZWRBdHRhY2ggJiYgZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChzY3JpcHQpO1xufTsiLCJ2YXIgY3JlYXRlU3R5bGVzaGVldCA9IChjaHVua0lkLCBmdWxsaHJlZiwgcmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG5cdHZhciBsaW5rVGFnID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxpbmtcIik7XG5cblx0bGlua1RhZy5yZWwgPSBcInN0eWxlc2hlZXRcIjtcblx0bGlua1RhZy50eXBlID0gXCJ0ZXh0L2Nzc1wiO1xuXHR2YXIgb25MaW5rQ29tcGxldGUgPSAoZXZlbnQpID0+IHtcblx0XHQvLyBhdm9pZCBtZW0gbGVha3MuXG5cdFx0bGlua1RhZy5vbmVycm9yID0gbGlua1RhZy5vbmxvYWQgPSBudWxsO1xuXHRcdGlmIChldmVudC50eXBlID09PSAnbG9hZCcpIHtcblx0XHRcdHJlc29sdmUoKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0dmFyIGVycm9yVHlwZSA9IGV2ZW50ICYmIChldmVudC50eXBlID09PSAnbG9hZCcgPyAnbWlzc2luZycgOiBldmVudC50eXBlKTtcblx0XHRcdHZhciByZWFsSHJlZiA9IGV2ZW50ICYmIGV2ZW50LnRhcmdldCAmJiBldmVudC50YXJnZXQuaHJlZiB8fCBmdWxsaHJlZjtcblx0XHRcdHZhciBlcnIgPSBuZXcgRXJyb3IoXCJMb2FkaW5nIENTUyBjaHVuayBcIiArIGNodW5rSWQgKyBcIiBmYWlsZWQuXFxuKFwiICsgcmVhbEhyZWYgKyBcIilcIik7XG5cdFx0XHRlcnIuY29kZSA9IFwiQ1NTX0NIVU5LX0xPQURfRkFJTEVEXCI7XG5cdFx0XHRlcnIudHlwZSA9IGVycm9yVHlwZTtcblx0XHRcdGVyci5yZXF1ZXN0ID0gcmVhbEhyZWY7XG5cdFx0XHRsaW5rVGFnLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQobGlua1RhZylcblx0XHRcdHJlamVjdChlcnIpO1xuXHRcdH1cblx0fVxuXHRsaW5rVGFnLm9uZXJyb3IgPSBsaW5rVGFnLm9ubG9hZCA9IG9uTGlua0NvbXBsZXRlO1xuXHRsaW5rVGFnLmhyZWYgPSBmdWxsaHJlZjtcblxuXHRkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKGxpbmtUYWcpO1xuXHRyZXR1cm4gbGlua1RhZztcbn07XG52YXIgZmluZFN0eWxlc2hlZXQgPSAoaHJlZiwgZnVsbGhyZWYpID0+IHtcblx0dmFyIGV4aXN0aW5nTGlua1RhZ3MgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcImxpbmtcIik7XG5cdGZvcih2YXIgaSA9IDA7IGkgPCBleGlzdGluZ0xpbmtUYWdzLmxlbmd0aDsgaSsrKSB7XG5cdFx0dmFyIHRhZyA9IGV4aXN0aW5nTGlua1RhZ3NbaV07XG5cdFx0dmFyIGRhdGFIcmVmID0gdGFnLmdldEF0dHJpYnV0ZShcImRhdGEtaHJlZlwiKSB8fCB0YWcuZ2V0QXR0cmlidXRlKFwiaHJlZlwiKTtcblx0XHRpZih0YWcucmVsID09PSBcInN0eWxlc2hlZXRcIiAmJiAoZGF0YUhyZWYgPT09IGhyZWYgfHwgZGF0YUhyZWYgPT09IGZ1bGxocmVmKSkgcmV0dXJuIHRhZztcblx0fVxuXHR2YXIgZXhpc3RpbmdTdHlsZVRhZ3MgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInN0eWxlXCIpO1xuXHRmb3IodmFyIGkgPSAwOyBpIDwgZXhpc3RpbmdTdHlsZVRhZ3MubGVuZ3RoOyBpKyspIHtcblx0XHR2YXIgdGFnID0gZXhpc3RpbmdTdHlsZVRhZ3NbaV07XG5cdFx0dmFyIGRhdGFIcmVmID0gdGFnLmdldEF0dHJpYnV0ZShcImRhdGEtaHJlZlwiKTtcblx0XHRpZihkYXRhSHJlZiA9PT0gaHJlZiB8fCBkYXRhSHJlZiA9PT0gZnVsbGhyZWYpIHJldHVybiB0YWc7XG5cdH1cbn07XG52YXIgbG9hZFN0eWxlc2hlZXQgPSAoY2h1bmtJZCkgPT4ge1xuXHRyZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuXHRcdHZhciBocmVmID0gX193ZWJwYWNrX3JlcXVpcmVfXy5taW5pQ3NzRihjaHVua0lkKTtcblx0XHR2YXIgZnVsbGhyZWYgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLnAgKyBocmVmO1xuXHRcdGlmKGZpbmRTdHlsZXNoZWV0KGhyZWYsIGZ1bGxocmVmKSkgcmV0dXJuIHJlc29sdmUoKTtcblx0XHRjcmVhdGVTdHlsZXNoZWV0KGNodW5rSWQsIGZ1bGxocmVmLCByZXNvbHZlLCByZWplY3QpO1xuXHR9KTtcbn1cbi8vIG5vIGNodW5rIGxvYWRpbmdcblxudmFyIG9sZFRhZ3MgPSBbXTtcbnZhciBuZXdUYWdzID0gW107XG52YXIgYXBwbHlIYW5kbGVyID0gKG9wdGlvbnMpID0+IHtcblx0cmV0dXJuIHsgZGlzcG9zZTogKCkgPT4ge1xuXHRcdGZvcih2YXIgaSA9IDA7IGkgPCBvbGRUYWdzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgb2xkVGFnID0gb2xkVGFnc1tpXTtcblx0XHRcdGlmKG9sZFRhZy5wYXJlbnROb2RlKSBvbGRUYWcucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChvbGRUYWcpO1xuXHRcdH1cblx0XHRvbGRUYWdzLmxlbmd0aCA9IDA7XG5cdH0sIGFwcGx5OiAoKSA9PiB7XG5cdFx0Zm9yKHZhciBpID0gMDsgaSA8IG5ld1RhZ3MubGVuZ3RoOyBpKyspIG5ld1RhZ3NbaV0ucmVsID0gXCJzdHlsZXNoZWV0XCI7XG5cdFx0bmV3VGFncy5sZW5ndGggPSAwO1xuXHR9IH07XG59XG5fX3dlYnBhY2tfcmVxdWlyZV9fLmhtckMubWluaUNzcyA9IChjaHVua0lkcywgcmVtb3ZlZENodW5rcywgcmVtb3ZlZE1vZHVsZXMsIHByb21pc2VzLCBhcHBseUhhbmRsZXJzLCB1cGRhdGVkTW9kdWxlc0xpc3QpID0+IHtcblx0YXBwbHlIYW5kbGVycy5wdXNoKGFwcGx5SGFuZGxlcik7XG5cdGNodW5rSWRzLmZvckVhY2goKGNodW5rSWQpID0+IHtcblx0XHR2YXIgaHJlZiA9IF9fd2VicGFja19yZXF1aXJlX18ubWluaUNzc0YoY2h1bmtJZCk7XG5cdFx0dmFyIGZ1bGxocmVmID0gX193ZWJwYWNrX3JlcXVpcmVfXy5wICsgaHJlZjtcblx0XHR2YXIgb2xkVGFnID0gZmluZFN0eWxlc2hlZXQoaHJlZiwgZnVsbGhyZWYpO1xuXHRcdGlmKCFvbGRUYWcpIHJldHVybjtcblx0XHRwcm9taXNlcy5wdXNoKG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcblx0XHRcdHZhciB0YWcgPSBjcmVhdGVTdHlsZXNoZWV0KGNodW5rSWQsIGZ1bGxocmVmLCAoKSA9PiB7XG5cdFx0XHRcdHRhZy5hcyA9IFwic3R5bGVcIjtcblx0XHRcdFx0dGFnLnJlbCA9IFwicHJlbG9hZFwiO1xuXHRcdFx0XHRyZXNvbHZlKCk7XG5cdFx0XHR9LCByZWplY3QpO1xuXHRcdFx0b2xkVGFncy5wdXNoKG9sZFRhZyk7XG5cdFx0XHRuZXdUYWdzLnB1c2godGFnKTtcblx0XHR9KSk7XG5cdH0pO1xufSIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBlc2xpbnQtZW52IGJyb3dzZXIgKi9cblxuLypcbiAgZXNsaW50LWRpc2FibGVcbiAgbm8tY29uc29sZSxcbiAgZnVuYy1uYW1lc1xuKi9cblxuLyoqIEB0eXBlZGVmIHthbnl9IFRPRE8gKi9cbnZhciBub3JtYWxpemVVcmwgPSByZXF1aXJlKFwiLi9ub3JtYWxpemUtdXJsXCIpO1xuXG52YXIgc3JjQnlNb2R1bGVJZCA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG52YXIgbm9Eb2N1bWVudCA9IHR5cGVvZiBkb2N1bWVudCA9PT0gXCJ1bmRlZmluZWRcIjtcbnZhciBmb3JFYWNoID0gQXJyYXkucHJvdG90eXBlLmZvckVhY2g7XG4vKipcbiAqIEBwYXJhbSB7ZnVuY3Rpb259IGZuXG4gKiBAcGFyYW0ge251bWJlcn0gdGltZVxuICogQHJldHVybnMgeyhmdW5jdGlvbigpOiB2b2lkKXwqfVxuICovXG5cbmZ1bmN0aW9uIGRlYm91bmNlKGZuLCB0aW1lKSB7XG4gIHZhciB0aW1lb3V0ID0gMDtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIHNlbGYgPSB0aGlzOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLXJlc3QtcGFyYW1zXG5cbiAgICB2YXIgYXJncyA9IGFyZ3VtZW50cztcblxuICAgIHZhciBmdW5jdGlvbkNhbGwgPSBmdW5jdGlvbiBmdW5jdGlvbkNhbGwoKSB7XG4gICAgICByZXR1cm4gZm4uYXBwbHkoc2VsZiwgYXJncyk7XG4gICAgfTtcblxuICAgIGNsZWFyVGltZW91dCh0aW1lb3V0KTsgLy8gQHRzLWlnbm9yZVxuXG4gICAgdGltZW91dCA9IHNldFRpbWVvdXQoZnVuY3Rpb25DYWxsLCB0aW1lKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gbm9vcCgpIHt9XG4vKipcbiAqIEBwYXJhbSB7VE9ET30gbW9kdWxlSWRcbiAqIEByZXR1cm5zIHtUT0RPfVxuICovXG5cblxuZnVuY3Rpb24gZ2V0Q3VycmVudFNjcmlwdFVybChtb2R1bGVJZCkge1xuICB2YXIgc3JjID0gc3JjQnlNb2R1bGVJZFttb2R1bGVJZF07XG5cbiAgaWYgKCFzcmMpIHtcbiAgICBpZiAoZG9jdW1lbnQuY3VycmVudFNjcmlwdCkge1xuICAgICAgc3JjID1cbiAgICAgIC8qKiBAdHlwZSB7SFRNTFNjcmlwdEVsZW1lbnR9ICovXG4gICAgICBkb2N1bWVudC5jdXJyZW50U2NyaXB0LnNyYztcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHNjcmlwdHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTtcbiAgICAgIHZhciBsYXN0U2NyaXB0VGFnID0gc2NyaXB0c1tzY3JpcHRzLmxlbmd0aCAtIDFdO1xuXG4gICAgICBpZiAobGFzdFNjcmlwdFRhZykge1xuICAgICAgICBzcmMgPSBsYXN0U2NyaXB0VGFnLnNyYztcbiAgICAgIH1cbiAgICB9XG5cbiAgICBzcmNCeU1vZHVsZUlkW21vZHVsZUlkXSA9IHNyYztcbiAgfVxuICAvKipcbiAgICogQHBhcmFtIHtzdHJpbmd9IGZpbGVNYXBcbiAgICogQHJldHVybnMge251bGwgfCBzdHJpbmdbXX1cbiAgICovXG5cblxuICByZXR1cm4gZnVuY3Rpb24gKGZpbGVNYXApIHtcbiAgICBpZiAoIXNyYykge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgdmFyIHNwbGl0UmVzdWx0ID0gc3JjLnNwbGl0KC8oW15cXFxcL10rKVxcLmpzJC8pO1xuICAgIHZhciBmaWxlbmFtZSA9IHNwbGl0UmVzdWx0ICYmIHNwbGl0UmVzdWx0WzFdO1xuXG4gICAgaWYgKCFmaWxlbmFtZSkge1xuICAgICAgcmV0dXJuIFtzcmMucmVwbGFjZShcIi5qc1wiLCBcIi5jc3NcIildO1xuICAgIH1cblxuICAgIGlmICghZmlsZU1hcCkge1xuICAgICAgcmV0dXJuIFtzcmMucmVwbGFjZShcIi5qc1wiLCBcIi5jc3NcIildO1xuICAgIH1cblxuICAgIHJldHVybiBmaWxlTWFwLnNwbGl0KFwiLFwiKS5tYXAoZnVuY3Rpb24gKG1hcFJ1bGUpIHtcbiAgICAgIHZhciByZWcgPSBuZXcgUmVnRXhwKFwiXCIuY29uY2F0KGZpbGVuYW1lLCBcIlxcXFwuanMkXCIpLCBcImdcIik7XG4gICAgICByZXR1cm4gbm9ybWFsaXplVXJsKHNyYy5yZXBsYWNlKHJlZywgXCJcIi5jb25jYXQobWFwUnVsZS5yZXBsYWNlKC97ZmlsZU5hbWV9L2csIGZpbGVuYW1lKSwgXCIuY3NzXCIpKSk7XG4gICAgfSk7XG4gIH07XG59XG4vKipcbiAqIEBwYXJhbSB7VE9ET30gZWxcbiAqIEBwYXJhbSB7c3RyaW5nfSBbdXJsXVxuICovXG5cblxuZnVuY3Rpb24gdXBkYXRlQ3NzKGVsLCB1cmwpIHtcbiAgaWYgKCF1cmwpIHtcbiAgICBpZiAoIWVsLmhyZWYpIHtcbiAgICAgIHJldHVybjtcbiAgICB9IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxuXG5cbiAgICB1cmwgPSBlbC5ocmVmLnNwbGl0KFwiP1wiKVswXTtcbiAgfVxuXG4gIGlmICghaXNVcmxSZXF1ZXN0KFxuICAvKiogQHR5cGUge3N0cmluZ30gKi9cbiAgdXJsKSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmIChlbC5pc0xvYWRlZCA9PT0gZmFsc2UpIHtcbiAgICAvLyBXZSBzZWVtIHRvIGJlIGFib3V0IHRvIHJlcGxhY2UgYSBjc3MgbGluayB0aGF0IGhhc24ndCBsb2FkZWQgeWV0LlxuICAgIC8vIFdlJ3JlIHByb2JhYmx5IGNoYW5naW5nIHRoZSBzYW1lIGZpbGUgbW9yZSB0aGFuIG9uY2UuXG4gICAgcmV0dXJuO1xuICB9XG5cbiAgaWYgKCF1cmwgfHwgISh1cmwuaW5kZXhPZihcIi5jc3NcIikgPiAtMSkpIHtcbiAgICByZXR1cm47XG4gIH0gLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG5cblxuICBlbC52aXNpdGVkID0gdHJ1ZTtcbiAgdmFyIG5ld0VsID0gZWwuY2xvbmVOb2RlKCk7XG4gIG5ld0VsLmlzTG9hZGVkID0gZmFsc2U7XG4gIG5ld0VsLmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsIGZ1bmN0aW9uICgpIHtcbiAgICBpZiAobmV3RWwuaXNMb2FkZWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBuZXdFbC5pc0xvYWRlZCA9IHRydWU7XG4gICAgZWwucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChlbCk7XG4gIH0pO1xuICBuZXdFbC5hZGRFdmVudExpc3RlbmVyKFwiZXJyb3JcIiwgZnVuY3Rpb24gKCkge1xuICAgIGlmIChuZXdFbC5pc0xvYWRlZCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIG5ld0VsLmlzTG9hZGVkID0gdHJ1ZTtcbiAgICBlbC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGVsKTtcbiAgfSk7XG4gIG5ld0VsLmhyZWYgPSBcIlwiLmNvbmNhdCh1cmwsIFwiP1wiKS5jb25jYXQoRGF0ZS5ub3coKSk7XG5cbiAgaWYgKGVsLm5leHRTaWJsaW5nKSB7XG4gICAgZWwucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUobmV3RWwsIGVsLm5leHRTaWJsaW5nKTtcbiAgfSBlbHNlIHtcbiAgICBlbC5wYXJlbnROb2RlLmFwcGVuZENoaWxkKG5ld0VsKTtcbiAgfVxufVxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gaHJlZlxuICogQHBhcmFtIHtUT0RPfSBzcmNcbiAqIEByZXR1cm5zIHtUT0RPfVxuICovXG5cblxuZnVuY3Rpb24gZ2V0UmVsb2FkVXJsKGhyZWYsIHNyYykge1xuICB2YXIgcmV0OyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cblxuICBocmVmID0gbm9ybWFsaXplVXJsKGhyZWYpO1xuICBzcmMuc29tZShcbiAgLyoqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSB1cmxcbiAgICovXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBhcnJheS1jYWxsYmFjay1yZXR1cm5cbiAgZnVuY3Rpb24gKHVybCkge1xuICAgIGlmIChocmVmLmluZGV4T2Yoc3JjKSA+IC0xKSB7XG4gICAgICByZXQgPSB1cmw7XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIHJldDtcbn1cbi8qKlxuICogQHBhcmFtIHtzdHJpbmd9IFtzcmNdXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAqL1xuXG5cbmZ1bmN0aW9uIHJlbG9hZFN0eWxlKHNyYykge1xuICBpZiAoIXNyYykge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHZhciBlbGVtZW50cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJsaW5rXCIpO1xuICB2YXIgbG9hZGVkID0gZmFsc2U7XG4gIGZvckVhY2guY2FsbChlbGVtZW50cywgZnVuY3Rpb24gKGVsKSB7XG4gICAgaWYgKCFlbC5ocmVmKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdmFyIHVybCA9IGdldFJlbG9hZFVybChlbC5ocmVmLCBzcmMpO1xuXG4gICAgaWYgKCFpc1VybFJlcXVlc3QodXJsKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmIChlbC52aXNpdGVkID09PSB0cnVlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKHVybCkge1xuICAgICAgdXBkYXRlQ3NzKGVsLCB1cmwpO1xuICAgICAgbG9hZGVkID0gdHJ1ZTtcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gbG9hZGVkO1xufVxuXG5mdW5jdGlvbiByZWxvYWRBbGwoKSB7XG4gIHZhciBlbGVtZW50cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJsaW5rXCIpO1xuICBmb3JFYWNoLmNhbGwoZWxlbWVudHMsIGZ1bmN0aW9uIChlbCkge1xuICAgIGlmIChlbC52aXNpdGVkID09PSB0cnVlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdXBkYXRlQ3NzKGVsKTtcbiAgfSk7XG59XG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nfSB1cmxcbiAqIEByZXR1cm5zIHtib29sZWFufVxuICovXG5cblxuZnVuY3Rpb24gaXNVcmxSZXF1ZXN0KHVybCkge1xuICAvLyBBbiBVUkwgaXMgbm90IGFuIHJlcXVlc3QgaWZcbiAgLy8gSXQgaXMgbm90IGh0dHAgb3IgaHR0cHNcbiAgaWYgKCEvXlthLXpBLVpdW2EtekEtWlxcZCtcXC0uXSo6Ly50ZXN0KHVybCkpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICByZXR1cm4gdHJ1ZTtcbn1cbi8qKlxuICogQHBhcmFtIHtUT0RPfSBtb2R1bGVJZFxuICogQHBhcmFtIHtUT0RPfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VE9ET31cbiAqL1xuXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG1vZHVsZUlkLCBvcHRpb25zKSB7XG4gIGlmIChub0RvY3VtZW50KSB7XG4gICAgY29uc29sZS5sb2coXCJubyB3aW5kb3cuZG9jdW1lbnQgZm91bmQsIHdpbGwgbm90IEhNUiBDU1NcIik7XG4gICAgcmV0dXJuIG5vb3A7XG4gIH1cblxuICB2YXIgZ2V0U2NyaXB0U3JjID0gZ2V0Q3VycmVudFNjcmlwdFVybChtb2R1bGVJZCk7XG5cbiAgZnVuY3Rpb24gdXBkYXRlKCkge1xuICAgIHZhciBzcmMgPSBnZXRTY3JpcHRTcmMob3B0aW9ucy5maWxlbmFtZSk7XG4gICAgdmFyIHJlbG9hZGVkID0gcmVsb2FkU3R5bGUoc3JjKTtcblxuICAgIGlmIChvcHRpb25zLmxvY2Fscykge1xuICAgICAgY29uc29sZS5sb2coXCJbSE1SXSBEZXRlY3RlZCBsb2NhbCBjc3MgbW9kdWxlcy4gUmVsb2FkIGFsbCBjc3NcIik7XG4gICAgICByZWxvYWRBbGwoKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAocmVsb2FkZWQpIHtcbiAgICAgIGNvbnNvbGUubG9nKFwiW0hNUl0gY3NzIHJlbG9hZCAlc1wiLCBzcmMuam9pbihcIiBcIikpO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zb2xlLmxvZyhcIltITVJdIFJlbG9hZCBhbGwgY3NzXCIpO1xuICAgICAgcmVsb2FkQWxsKCk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGRlYm91bmNlKHVwZGF0ZSwgNTApO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogZXNsaW50LWRpc2FibGUgKi9cblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ1tdfSBwYXRoQ29tcG9uZW50c1xuICogQHJldHVybnMge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gbm9ybWFsaXplVXJsKHBhdGhDb21wb25lbnRzKSB7XG4gIHJldHVybiBwYXRoQ29tcG9uZW50cy5yZWR1Y2UoZnVuY3Rpb24gKGFjY3VtdWxhdG9yLCBpdGVtKSB7XG4gICAgc3dpdGNoIChpdGVtKSB7XG4gICAgICBjYXNlIFwiLi5cIjpcbiAgICAgICAgYWNjdW11bGF0b3IucG9wKCk7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIFwiLlwiOlxuICAgICAgICBicmVhaztcblxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgYWNjdW11bGF0b3IucHVzaChpdGVtKTtcbiAgICB9XG5cbiAgICByZXR1cm4gYWNjdW11bGF0b3I7XG4gIH0sXG4gIC8qKiBAdHlwZSB7c3RyaW5nW119ICovXG4gIFtdKS5qb2luKFwiL1wiKTtcbn1cbi8qKlxuICogQHBhcmFtIHtzdHJpbmd9IHVybFN0cmluZ1xuICogQHJldHVybnMge3N0cmluZ31cbiAqL1xuXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHVybFN0cmluZykge1xuICB1cmxTdHJpbmcgPSB1cmxTdHJpbmcudHJpbSgpO1xuXG4gIGlmICgvXmRhdGE6L2kudGVzdCh1cmxTdHJpbmcpKSB7XG4gICAgcmV0dXJuIHVybFN0cmluZztcbiAgfVxuXG4gIHZhciBwcm90b2NvbCA9IHVybFN0cmluZy5pbmRleE9mKFwiLy9cIikgIT09IC0xID8gdXJsU3RyaW5nLnNwbGl0KFwiLy9cIilbMF0gKyBcIi8vXCIgOiBcIlwiO1xuICB2YXIgY29tcG9uZW50cyA9IHVybFN0cmluZy5yZXBsYWNlKG5ldyBSZWdFeHAocHJvdG9jb2wsIFwiaVwiKSwgXCJcIikuc3BsaXQoXCIvXCIpO1xuICB2YXIgaG9zdCA9IGNvbXBvbmVudHNbMF0udG9Mb3dlckNhc2UoKS5yZXBsYWNlKC9cXC4kLywgXCJcIik7XG4gIGNvbXBvbmVudHNbMF0gPSBcIlwiO1xuICB2YXIgcGF0aCA9IG5vcm1hbGl6ZVVybChjb21wb25lbnRzKTtcbiAgcmV0dXJuIHByb3RvY29sICsgaG9zdCArIHBhdGg7XG59OyIsIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9O1xuICAgIGlmKG1vZHVsZS5ob3QpIHtcbiAgICAgIC8vIDE2NTIxMTgzOTEwNjNcbiAgICAgIHZhciBjc3NSZWxvYWQgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2Rpc3QvaG1yL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzXCIpKG1vZHVsZS5pZCwge1wicHVibGljUGF0aFwiOlwiXCIsXCJsb2NhbHNcIjpmYWxzZX0pO1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGNzc1JlbG9hZCk7XG4gICAgICBtb2R1bGUuaG90LmFjY2VwdCh1bmRlZmluZWQsIGNzc1JlbG9hZCk7XG4gICAgfVxuICAiLCJjb25zdCBidXR0b25zID0gW1xyXG4gICAge1xyXG4gICAgICAgIGVuOiB7XHJcbiAgICAgICAgICAgIGxvdzogXCJgXCIsXHJcbiAgICAgICAgICAgIGhpZ2g6IFwiflwiXHJcbiAgICAgICAgfSxcclxuICAgICAgICBydToge1xyXG4gICAgICAgICAgICBsb3c6IFwi0ZFcIixcclxuICAgICAgICAgICAgaGlnaDogXCLQgVwiXHJcbiAgICAgICAgfSwgIFxyXG4gICAgICAgIGlkOiBcIkJhY2txdW90ZVwiLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICBlbjoge1xyXG4gICAgICAgICAgICBsb3c6IFwiMVwiLFxyXG4gICAgICAgICAgICBoaWdoOiBcIiFcIlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgcnU6IHtcclxuICAgICAgICAgICAgbG93OiBcIjFcIixcclxuICAgICAgICAgICAgaGlnaDogXCIhXCJcclxuICAgICAgICB9LCAgXHJcbiAgICAgICAgaWQ6IFwiRGlnaXQxXCIsXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAgIGVuOiB7XHJcbiAgICAgICAgICAgIGxvdzogXCIyXCIsXHJcbiAgICAgICAgICAgIGhpZ2g6ICdAJ1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgcnU6IHtcclxuICAgICAgICAgICAgbG93OiBcIjJcIixcclxuICAgICAgICAgICAgaGlnaDogJ1wiJ1xyXG4gICAgICAgIH0sICBcclxuICAgICAgICBpZDogXCJEaWdpdDJcIixcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgZW46IHtcclxuICAgICAgICAgICAgbG93OiBcIjNcIixcclxuICAgICAgICAgICAgaGlnaDogXCIjXCJcclxuICAgICAgICB9LFxyXG4gICAgICAgIHJ1OiB7XHJcbiAgICAgICAgICAgIGxvdzogXCIzXCIsXHJcbiAgICAgICAgICAgIGhpZ2g6IFwi4oSWXCJcclxuICAgICAgICB9LCAgXHJcbiAgICAgICAgaWQ6IFwiRGlnaXQzXCIsXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAgIGVuOiB7XHJcbiAgICAgICAgICAgIGxvdzogXCI0XCIsXHJcbiAgICAgICAgICAgIGhpZ2g6IFwiJFwiXHJcbiAgICAgICAgfSxcclxuICAgICAgICBydToge1xyXG4gICAgICAgICAgICBsb3c6IFwiNFwiLFxyXG4gICAgICAgICAgICBoaWdoOiBcIjtcIlxyXG4gICAgICAgIH0sICBcclxuICAgICAgICBpZDogXCJEaWdpdDRcIixcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgZW46IHtcclxuICAgICAgICAgICAgbG93OiBcIjVcIixcclxuICAgICAgICAgICAgaGlnaDogXCIlXCJcclxuICAgICAgICB9LFxyXG4gICAgICAgIHJ1OiB7XHJcbiAgICAgICAgICAgIGxvdzogXCI1XCIsXHJcbiAgICAgICAgICAgIGhpZ2g6IFwiJVwiXHJcbiAgICAgICAgfSwgIFxyXG4gICAgICAgIGlkOiBcIkRpZ2l0NVwiLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICBlbjoge1xyXG4gICAgICAgICAgICBsb3c6IFwiNlwiLFxyXG4gICAgICAgICAgICBoaWdoOiBcIl5cIlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgcnU6IHtcclxuICAgICAgICAgICAgbG93OiBcIjZcIixcclxuICAgICAgICAgICAgaGlnaDogXCI6XCJcclxuICAgICAgICB9LCAgXHJcbiAgICAgICAgaWQ6IFwiRGlnaXQ2XCIsXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAgIGVuOiB7XHJcbiAgICAgICAgICAgIGxvdzogXCI3XCIsXHJcbiAgICAgICAgICAgIGhpZ2g6IFwiJlwiXHJcbiAgICAgICAgfSxcclxuICAgICAgICBydToge1xyXG4gICAgICAgICAgICBsb3c6IFwiN1wiLFxyXG4gICAgICAgICAgICBoaWdoOiBcIj9cIlxyXG4gICAgICAgIH0sICBcclxuICAgICAgICBpZDogXCJEaWdpdDdcIixcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgZW46IHtcclxuICAgICAgICAgICAgbG93OiBcIjhcIixcclxuICAgICAgICAgICAgaGlnaDogXCIqXCJcclxuICAgICAgICB9LFxyXG4gICAgICAgIHJ1OiB7XHJcbiAgICAgICAgICAgIGxvdzogXCI4XCIsXHJcbiAgICAgICAgICAgIGhpZ2g6IFwiKlwiXHJcbiAgICAgICAgfSwgIFxyXG4gICAgICAgIGlkOiBcIkRpZ2l0OFwiLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICBlbjoge1xyXG4gICAgICAgICAgICBsb3c6IFwiOVwiLFxyXG4gICAgICAgICAgICBoaWdoOiBcIihcIlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgcnU6IHtcclxuICAgICAgICAgICAgbG93OiBcIjlcIixcclxuICAgICAgICAgICAgaGlnaDogXCIoXCJcclxuICAgICAgICB9LCAgXHJcbiAgICAgICAgaWQ6IFwiRGlnaXQ5XCIsXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAgIGVuOiB7XHJcbiAgICAgICAgICAgIGxvdzogXCIwXCIsXHJcbiAgICAgICAgICAgIGhpZ2g6IFwiKVwiXHJcbiAgICAgICAgfSxcclxuICAgICAgICBydToge1xyXG4gICAgICAgICAgICBsb3c6IFwiMFwiLFxyXG4gICAgICAgICAgICBoaWdoOiBcIilcIlxyXG4gICAgICAgIH0sICBcclxuICAgICAgICBpZDogXCJEaWdpdDBcIixcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgZW46IHtcclxuICAgICAgICAgICAgbG93OiBcIi1cIixcclxuICAgICAgICAgICAgaGlnaDogXCJfXCJcclxuICAgICAgICB9LFxyXG4gICAgICAgIHJ1OiB7XHJcbiAgICAgICAgICAgIGxvdzogXCItXCIsXHJcbiAgICAgICAgICAgIGhpZ2g6IFwiX1wiXHJcbiAgICAgICAgfSwgIFxyXG4gICAgICAgIGlkOiBcIk1pbnVzXCIsXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAgIGVuOiB7XHJcbiAgICAgICAgICAgIGxvdzogXCI9XCIsXHJcbiAgICAgICAgICAgIGhpZ2g6IFwiK1wiXHJcbiAgICAgICAgfSxcclxuICAgICAgICBydToge1xyXG4gICAgICAgICAgICBsb3c6IFwiPVwiLFxyXG4gICAgICAgICAgICBoaWdoOiBcIitcIlxyXG4gICAgICAgIH0sICBcclxuICAgICAgICBpZDogXCJFcXVhbFwiLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICBlbjoge1xyXG4gICAgICAgICAgICBsb3c6IFwiYmFja3NwYWNlXCIsXHJcbiAgICAgICAgICAgIGhpZ2g6IFwiYmFja3NwYWNlXCJcclxuICAgICAgICB9LFxyXG4gICAgICAgIHJ1OiB7XHJcbiAgICAgICAgICAgIGxvdzogXCJiYWNrc3BhY2VcIixcclxuICAgICAgICAgICAgaGlnaDogXCJiYWNrc3BhY2VcIlxyXG4gICAgICAgIH0sICBcclxuICAgICAgICBpZDogXCJCYWNrc3BhY2VcIixcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgZW46IHtcclxuICAgICAgICAgICAgbG93OiBcIkRlbFwiLFxyXG4gICAgICAgICAgICBoaWdoOiBcIkRlbFwiXHJcbiAgICAgICAgfSxcclxuICAgICAgICBydToge1xyXG4gICAgICAgICAgICBsb3c6IFwiRGVsXCIsXHJcbiAgICAgICAgICAgIGhpZ2g6IFwiRGVsXCJcclxuICAgICAgICB9LCAgXHJcbiAgICAgICAgaWQ6IFwiRGVsZXRlXCIsXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAgIGVuOiB7XHJcbiAgICAgICAgICAgIGxvdzogXCJrZXlib2FyZF90YWJcIixcclxuICAgICAgICAgICAgaGlnaDogXCJrZXlib2FyZF90YWJcIlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgcnU6IHtcclxuICAgICAgICAgICAgbG93OiBcImtleWJvYXJkX3RhYlwiLFxyXG4gICAgICAgICAgICBoaWdoOiBcImtleWJvYXJkX3RhYlwiXHJcbiAgICAgICAgfSwgIFxyXG4gICAgICAgIGlkOiBcIlRhYlwiLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICBlbjoge1xyXG4gICAgICAgICAgICBsb3c6IFwicVwiLFxyXG4gICAgICAgICAgICBoaWdoOiBcIlFcIlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgcnU6IHtcclxuICAgICAgICAgICAgbG93OiBcItC5XCIsXHJcbiAgICAgICAgICAgIGhpZ2g6IFwi0JlcIlxyXG4gICAgICAgIH0sICBcclxuICAgICAgICBpZDogXCJLZXlRXCIsXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAgIGVuOiB7XHJcbiAgICAgICAgICAgIGxvdzogXCJ3XCIsXHJcbiAgICAgICAgICAgIGhpZ2g6IFwiV1wiXHJcbiAgICAgICAgfSxcclxuICAgICAgICBydToge1xyXG4gICAgICAgICAgICBsb3c6IFwi0YZcIixcclxuICAgICAgICAgICAgaGlnaDogXCLQplwiXHJcbiAgICAgICAgfSwgIFxyXG4gICAgICAgIGlkOiBcIktleVdcIixcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgZW46IHtcclxuICAgICAgICAgICAgbG93OiBcImVcIixcclxuICAgICAgICAgICAgaGlnaDogXCJFXCJcclxuICAgICAgICB9LFxyXG4gICAgICAgIHJ1OiB7XHJcbiAgICAgICAgICAgIGxvdzogXCLRg1wiLFxyXG4gICAgICAgICAgICBoaWdoOiBcItCjXCJcclxuICAgICAgICB9LCAgXHJcbiAgICAgICAgaWQ6IFwiS2V5RVwiLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICBlbjoge1xyXG4gICAgICAgICAgICBsb3c6IFwiclwiLFxyXG4gICAgICAgICAgICBoaWdoOiBcIlJcIlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgcnU6IHtcclxuICAgICAgICAgICAgbG93OiBcItC6XCIsXHJcbiAgICAgICAgICAgIGhpZ2g6IFwi0JpcIlxyXG4gICAgICAgIH0sICBcclxuICAgICAgICBpZDogXCJLZXlSXCIsXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAgIGVuOiB7XHJcbiAgICAgICAgICAgIGxvdzogXCJ0XCIsXHJcbiAgICAgICAgICAgIGhpZ2g6IFwiVFwiXHJcbiAgICAgICAgfSxcclxuICAgICAgICBydToge1xyXG4gICAgICAgICAgICBsb3c6IFwi0LVcIixcclxuICAgICAgICAgICAgaGlnaDogXCLQlVwiXHJcbiAgICAgICAgfSwgIFxyXG4gICAgICAgIGlkOiBcIktleVRcIixcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgZW46IHtcclxuICAgICAgICAgICAgbG93OiBcInlcIixcclxuICAgICAgICAgICAgaGlnaDogXCJZXCJcclxuICAgICAgICB9LFxyXG4gICAgICAgIHJ1OiB7XHJcbiAgICAgICAgICAgIGxvdzogXCLQvVwiLFxyXG4gICAgICAgICAgICBoaWdoOiBcItCdXCJcclxuICAgICAgICB9LCAgXHJcbiAgICAgICAgaWQ6IFwiS2V5WVwiLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICBlbjoge1xyXG4gICAgICAgICAgICBsb3c6IFwidVwiLFxyXG4gICAgICAgICAgICBoaWdoOiBcIlVcIlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgcnU6IHtcclxuICAgICAgICAgICAgbG93OiBcItCzXCIsXHJcbiAgICAgICAgICAgIGhpZ2g6IFwi0JNcIlxyXG4gICAgICAgIH0sICBcclxuICAgICAgICBpZDogXCJLZXlVXCIsXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAgIGVuOiB7XHJcbiAgICAgICAgICAgIGxvdzogXCJpXCIsXHJcbiAgICAgICAgICAgIGhpZ2g6IFwiSVwiXHJcbiAgICAgICAgfSxcclxuICAgICAgICBydToge1xyXG4gICAgICAgICAgICBsb3c6IFwi0YhcIixcclxuICAgICAgICAgICAgaGlnaDogXCLQqFwiXHJcbiAgICAgICAgfSwgIFxyXG4gICAgICAgIGlkOiBcIktleUlcIixcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgZW46IHtcclxuICAgICAgICAgICAgbG93OiBcIm9cIixcclxuICAgICAgICAgICAgaGlnaDogXCJPXCJcclxuICAgICAgICB9LFxyXG4gICAgICAgIHJ1OiB7XHJcbiAgICAgICAgICAgIGxvdzogXCLRiVwiLFxyXG4gICAgICAgICAgICBoaWdoOiBcItCpXCJcclxuICAgICAgICB9LCAgXHJcbiAgICAgICAgaWQ6IFwiS2V5T1wiLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICBlbjoge1xyXG4gICAgICAgICAgICBsb3c6IFwicFwiLFxyXG4gICAgICAgICAgICBoaWdoOiBcIlBcIlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgcnU6IHtcclxuICAgICAgICAgICAgbG93OiBcItC3XCIsXHJcbiAgICAgICAgICAgIGhpZ2g6IFwi0JdcIlxyXG4gICAgICAgIH0sICBcclxuICAgICAgICBpZDogXCJLZXlQXCIsXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAgIGVuOiB7XHJcbiAgICAgICAgICAgIGxvdzogXCJbXCIsXHJcbiAgICAgICAgICAgIGhpZ2g6IFwie1wiXHJcbiAgICAgICAgfSxcclxuICAgICAgICBydToge1xyXG4gICAgICAgICAgICBsb3c6IFwi0YVcIixcclxuICAgICAgICAgICAgaGlnaDogXCLQpVwiXHJcbiAgICAgICAgfSwgIFxyXG4gICAgICAgIGlkOiBcIkJyYWNrZXRMZWZ0XCIsXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAgIGVuOiB7XHJcbiAgICAgICAgICAgIGxvdzogXCJdXCIsXHJcbiAgICAgICAgICAgIGhpZ2g6IFwifVwiXHJcbiAgICAgICAgfSxcclxuICAgICAgICBydToge1xyXG4gICAgICAgICAgICBsb3c6IFwi0YpcIixcclxuICAgICAgICAgICAgaGlnaDogXCLQqlwiXHJcbiAgICAgICAgfSwgIFxyXG4gICAgICAgIGlkOiBcIkJyYWNrZXRSaWdodFwiLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICBlbjoge1xyXG4gICAgICAgICAgICBsb3c6IFwiXFxcXFwiLFxyXG4gICAgICAgICAgICBoaWdoOiBcInxcIlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgcnU6IHtcclxuICAgICAgICAgICAgbG93OiBcIlxcXFxcIixcclxuICAgICAgICAgICAgaGlnaDogXCIvXCJcclxuICAgICAgICB9LCAgXHJcbiAgICAgICAgaWQ6IFwiQmFja3NsYXNoXCIsXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAgIGVuOiB7XHJcbiAgICAgICAgICAgIGxvdzogXCJjYXBzbG9ja1wiLFxyXG4gICAgICAgICAgICBoaWdoOiBcImNhcHNsb2NrXCJcclxuICAgICAgICB9LFxyXG4gICAgICAgIHJ1OiB7XHJcbiAgICAgICAgICAgIGxvdzogXCJjYXBzbG9ja1wiLFxyXG4gICAgICAgICAgICBoaWdoOiBcImNhcHNsb2NrXCJcclxuICAgICAgICB9LCAgICAgXHJcbiAgICAgICAgaWQ6IFwiQ2Fwc0xvY2tcIiwgICAgIFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICBlbjoge1xyXG4gICAgICAgICAgICBsb3c6IFwiYVwiLFxyXG4gICAgICAgICAgICBoaWdoOiBcIkFcIlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgcnU6IHtcclxuICAgICAgICAgICAgbG93OiBcItGEXCIsXHJcbiAgICAgICAgICAgIGhpZ2g6IFwi0KRcIlxyXG4gICAgICAgIH0sICAgXHJcbiAgICAgICAgaWQ6IFwiS2V5QVwiLCAgICAgICBcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgZW46IHtcclxuICAgICAgICAgICAgbG93OiBcInNcIixcclxuICAgICAgICAgICAgaGlnaDogXCJTXCJcclxuICAgICAgICB9LFxyXG4gICAgICAgIHJ1OiB7XHJcbiAgICAgICAgICAgIGxvdzogXCLRi1wiLFxyXG4gICAgICAgICAgICBoaWdoOiBcItCrXCJcclxuICAgICAgICB9LCAgICBcclxuICAgICAgICBpZDogXCJLZXlTXCIsICAgICAgXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAgIGVuOiB7XHJcbiAgICAgICAgICAgIGxvdzogXCJkXCIsXHJcbiAgICAgICAgICAgIGhpZ2g6IFwiRFwiXHJcbiAgICAgICAgfSxcclxuICAgICAgICBydToge1xyXG4gICAgICAgICAgICBsb3c6IFwi0LJcIixcclxuICAgICAgICAgICAgaGlnaDogXCLQklwiXHJcbiAgICAgICAgfSwgICAgXHJcbiAgICAgICAgaWQ6IFwiS2V5RFwiLCAgICAgIFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICBlbjoge1xyXG4gICAgICAgICAgICBsb3c6IFwiZlwiLFxyXG4gICAgICAgICAgICBoaWdoOiBcIkZcIlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgcnU6IHtcclxuICAgICAgICAgICAgbG93OiBcItCwXCIsXHJcbiAgICAgICAgICAgIGhpZ2g6IFwi0JBcIlxyXG4gICAgICAgIH0sICAgXHJcbiAgICAgICAgaWQ6IFwiS2V5RlwiLCAgICAgICBcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgZW46IHtcclxuICAgICAgICAgICAgbG93OiBcImdcIixcclxuICAgICAgICAgICAgaGlnaDogXCJHXCJcclxuICAgICAgICB9LFxyXG4gICAgICAgIHJ1OiB7XHJcbiAgICAgICAgICAgIGxvdzogXCLQv1wiLFxyXG4gICAgICAgICAgICBoaWdoOiBcItCfXCJcclxuICAgICAgICB9LCAgICBcclxuICAgICAgICBpZDogXCJLZXlHXCIsICAgICAgXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAgIGVuOiB7XHJcbiAgICAgICAgICAgIGxvdzogXCJoXCIsXHJcbiAgICAgICAgICAgIGhpZ2g6IFwiSFwiXHJcbiAgICAgICAgfSxcclxuICAgICAgICBydToge1xyXG4gICAgICAgICAgICBsb3c6IFwi0YBcIixcclxuICAgICAgICAgICAgaGlnaDogXCLQoFwiXHJcbiAgICAgICAgfSwgICAgXHJcbiAgICAgICAgaWQ6IFwiS2V5SFwiLCAgICAgIFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICBlbjoge1xyXG4gICAgICAgICAgICBsb3c6IFwialwiLFxyXG4gICAgICAgICAgICBoaWdoOiBcIkpcIlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgcnU6IHtcclxuICAgICAgICAgICAgbG93OiBcItC+XCIsXHJcbiAgICAgICAgICAgIGhpZ2g6IFwi0J5cIlxyXG4gICAgICAgIH0sICAgICBcclxuICAgICAgICBpZDogXCJLZXlKXCIsICAgICBcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgZW46IHtcclxuICAgICAgICAgICAgbG93OiBcImtcIixcclxuICAgICAgICAgICAgaGlnaDogXCJLXCJcclxuICAgICAgICB9LFxyXG4gICAgICAgIHJ1OiB7XHJcbiAgICAgICAgICAgIGxvdzogXCLQu1wiLFxyXG4gICAgICAgICAgICBoaWdoOiBcItCbXCJcclxuICAgICAgICB9LCAgIFxyXG4gICAgICAgIGlkOiBcIktleUtcIiwgICAgICAgXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAgIGVuOiB7XHJcbiAgICAgICAgICAgIGxvdzogXCJsXCIsXHJcbiAgICAgICAgICAgIGhpZ2g6IFwiTFwiXHJcbiAgICAgICAgfSxcclxuICAgICAgICBydToge1xyXG4gICAgICAgICAgICBsb3c6IFwi0LRcIixcclxuICAgICAgICAgICAgaGlnaDogXCLQlFwiXHJcbiAgICAgICAgfSwgIFxyXG4gICAgICAgIGlkOiBcIktleUxcIiwgICAgICAgIFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICBlbjoge1xyXG4gICAgICAgICAgICBsb3c6IFwiO1wiLFxyXG4gICAgICAgICAgICBoaWdoOiBcIjpcIlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgcnU6IHtcclxuICAgICAgICAgICAgbG93OiBcItC2XCIsXHJcbiAgICAgICAgICAgIGhpZ2g6IFwi0JZcIlxyXG4gICAgICAgIH0sIFxyXG4gICAgICAgIGlkOiBcIlNlbWljb2xvblwiLCAgICAgICAgIFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICBlbjoge1xyXG4gICAgICAgICAgICBsb3c6IFwiJ1wiLFxyXG4gICAgICAgICAgICBoaWdoOiAnXCInXHJcbiAgICAgICAgfSxcclxuICAgICAgICBydToge1xyXG4gICAgICAgICAgICBsb3c6IFwi0Y1cIixcclxuICAgICAgICAgICAgaGlnaDogXCLQrVwiXHJcbiAgICAgICAgfSxcclxuICAgICAgICBpZDogXCJRdW90ZVwiLCAgICAgICAgICAgXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAgIGVuOiB7XHJcbiAgICAgICAgICAgIGxvdzogXCJrZXlib2FyZF9yZXR1cm5cIixcclxuICAgICAgICAgICAgaGlnaDogXCJrZXlib2FyZF9yZXR1cm5cIlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgcnU6IHtcclxuICAgICAgICAgICAgbG93OiBcImtleWJvYXJkX3JldHVyblwiLFxyXG4gICAgICAgICAgICBoaWdoOiBcImtleWJvYXJkX3JldHVyblwiXHJcbiAgICAgICAgfSwgIFxyXG4gICAgICAgIGlkOiBcIkVudGVyXCIsICAgICAgICAgXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAgIGVuOiB7XHJcbiAgICAgICAgICAgIGxvdzogXCJTaGlmdFwiLFxyXG4gICAgICAgICAgICBoaWdoOiBcIlNoaWZ0XCJcclxuICAgICAgICB9LFxyXG4gICAgICAgIHJ1OiB7XHJcbiAgICAgICAgICAgIGxvdzogXCJTaGlmdFwiLFxyXG4gICAgICAgICAgICBoaWdoOiBcIlNoaWZ0XCJcclxuICAgICAgICB9LCAgIFxyXG4gICAgICAgIGlkOiBcIlNoaWZ0TGVmdFwiLCAgICAgIFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICBlbjoge1xyXG4gICAgICAgICAgICBsb3c6IFwielwiLFxyXG4gICAgICAgICAgICBoaWdoOiBcIlpcIlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgcnU6IHtcclxuICAgICAgICAgICAgbG93OiBcItGPXCIsXHJcbiAgICAgICAgICAgIGhpZ2g6IFwi0K9cIlxyXG4gICAgICAgIH0sIFxyXG4gICAgICAgIGlkOiBcIktleVpcIiwgICAgICAgIFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICBlbjoge1xyXG4gICAgICAgICAgICBsb3c6IFwieFwiLFxyXG4gICAgICAgICAgICBoaWdoOiBcIlhcIlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgcnU6IHtcclxuICAgICAgICAgICAgbG93OiBcItGHXCIsXHJcbiAgICAgICAgICAgIGhpZ2g6IFwi0KdcIlxyXG4gICAgICAgIH0sIFxyXG4gICAgICAgIGlkOiBcIktleVhcIiwgICAgICAgIFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICBlbjoge1xyXG4gICAgICAgICAgICBsb3c6IFwiY1wiLFxyXG4gICAgICAgICAgICBoaWdoOiBcIkNcIlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgcnU6IHtcclxuICAgICAgICAgICAgbG93OiBcItGBXCIsXHJcbiAgICAgICAgICAgIGhpZ2g6IFwi0KFcIlxyXG4gICAgICAgIH0sICAgXHJcbiAgICAgICAgaWQ6IFwiS2V5Q1wiLCAgICAgIFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICBlbjoge1xyXG4gICAgICAgICAgICBsb3c6IFwidlwiLFxyXG4gICAgICAgICAgICBoaWdoOiBcIlZcIlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgcnU6IHtcclxuICAgICAgICAgICAgbG93OiBcItC8XCIsXHJcbiAgICAgICAgICAgIGhpZ2g6IFwi0JxcIlxyXG4gICAgICAgIH0sIFxyXG4gICAgICAgIGlkOiBcIktleVZcIiwgICAgICAgIFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICBlbjoge1xyXG4gICAgICAgICAgICBsb3c6IFwiYlwiLFxyXG4gICAgICAgICAgICBoaWdoOiBcIkJcIlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgcnU6IHtcclxuICAgICAgICAgICAgbG93OiBcItC4XCIsXHJcbiAgICAgICAgICAgIGhpZ2g6IFwi0JhcIlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgaWQ6IFwiS2V5QlwiLCAgICAgICAgIFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICBlbjoge1xyXG4gICAgICAgICAgICBsb3c6IFwiblwiLFxyXG4gICAgICAgICAgICBoaWdoOiBcIk5cIlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgcnU6IHtcclxuICAgICAgICAgICAgbG93OiBcItGCXCIsXHJcbiAgICAgICAgICAgIGhpZ2g6IFwi0KJcIlxyXG4gICAgICAgIH0sIFxyXG4gICAgICAgIGlkOiBcIktleU5cIiwgICAgICAgIFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICBlbjoge1xyXG4gICAgICAgICAgICBsb3c6IFwibVwiLFxyXG4gICAgICAgICAgICBoaWdoOiBcIk1cIlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgcnU6IHtcclxuICAgICAgICAgICAgbG93OiBcItGMXCIsXHJcbiAgICAgICAgICAgIGhpZ2g6IFwi0KxcIlxyXG4gICAgICAgIH0sICBcclxuICAgICAgICBpZDogXCJLZXlNXCIsICAgICAgIFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICBlbjoge1xyXG4gICAgICAgICAgICBsb3c6IFwiLFwiLFxyXG4gICAgICAgICAgICBoaWdoOiBcIjxcIlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgcnU6IHtcclxuICAgICAgICAgICAgbG93OiBcItCxXCIsXHJcbiAgICAgICAgICAgIGhpZ2g6IFwi0JFcIlxyXG4gICAgICAgIH0sIFxyXG4gICAgICAgIGlkOiBcIkNvbW1hXCIsICAgICAgICBcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgZW46IHtcclxuICAgICAgICAgICAgbG93OiBcIi5cIixcclxuICAgICAgICAgICAgaGlnaDogXCI+XCJcclxuICAgICAgICB9LFxyXG4gICAgICAgIHJ1OiB7XHJcbiAgICAgICAgICAgIGxvdzogXCLRjlwiLFxyXG4gICAgICAgICAgICBoaWdoOiBcItCuXCJcclxuICAgICAgICB9LFxyXG4gICAgICAgIGlkOiBcIlBlcmlvZFwiLCAgICAgICAgIFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICBlbjoge1xyXG4gICAgICAgICAgICBsb3c6IFwiL1wiLFxyXG4gICAgICAgICAgICBoaWdoOiBcIj9cIlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgcnU6IHtcclxuICAgICAgICAgICAgbG93OiBcIi5cIixcclxuICAgICAgICAgICAgaGlnaDogXCIsXCJcclxuICAgICAgICB9LCAgXHJcbiAgICAgICAgaWQ6IFwiU2xhc2hcIiwgICAgXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAgIGVuOiB7XHJcbiAgICAgICAgICAgIGxvdzogXCJTaGlmdFwiLFxyXG4gICAgICAgICAgICBoaWdoOiBcIlNoaWZ0XCJcclxuICAgICAgICB9LFxyXG4gICAgICAgIHJ1OiB7XHJcbiAgICAgICAgICAgIGxvdzogXCJTaGlmdFwiLFxyXG4gICAgICAgICAgICBoaWdoOiBcIlNoaWZ0XCJcclxuICAgICAgICB9LCAgXHJcbiAgICAgICAgaWQ6IFwiU2hpZnRSaWdodFwiLCAgICAgXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAgIGVuOiB7XHJcbiAgICAgICAgICAgIGxvdzogXCJDb250cm9sXCIsXHJcbiAgICAgICAgICAgIGhpZ2g6IFwiQ29udHJvbFwiXHJcbiAgICAgICAgfSxcclxuICAgICAgICBydToge1xyXG4gICAgICAgICAgICBsb3c6IFwiQ29udHJvbFwiLFxyXG4gICAgICAgICAgICBoaWdoOiBcIkNvbnRyb2xcIlxyXG4gICAgICAgIH0sICBcclxuICAgICAgICBpZDogXCJDb250cm9sTGVmdFwiLCAgICAgXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAgIGVuOiB7XHJcbiAgICAgICAgICAgIGxvdzogXCJ3aW5cIixcclxuICAgICAgICAgICAgaGlnaDogXCJ3aW5cIlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgcnU6IHtcclxuICAgICAgICAgICAgbG93OiBcIndpblwiLFxyXG4gICAgICAgICAgICBoaWdoOiBcIndpblwiXHJcbiAgICAgICAgfSwgXHJcbiAgICAgICAgaWQ6IFwiTWV0YUxlZnRcIiwgICAgICBcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgZW46IHtcclxuICAgICAgICAgICAgbG93OiBcIkFsdFwiLFxyXG4gICAgICAgICAgICBoaWdoOiBcIkFsdFwiXHJcbiAgICAgICAgfSxcclxuICAgICAgICBydToge1xyXG4gICAgICAgICAgICBsb3c6IFwiQWx0XCIsXHJcbiAgICAgICAgICAgIGhpZ2g6IFwiQWx0XCJcclxuICAgICAgICB9LCAgXHJcbiAgICAgICAgaWQ6IFwiQWx0TGVmdFwiLCAgICAgXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAgIGVuOiB7XHJcbiAgICAgICAgICAgIGxvdzogXCJzcGFjZV9iYXJcIixcclxuICAgICAgICAgICAgaGlnaDogXCJzcGFjZV9iYXJcIlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgcnU6IHtcclxuICAgICAgICAgICAgbG93OiBcInNwYWNlX2JhclwiLFxyXG4gICAgICAgICAgICBoaWdoOiBcInNwYWNlX2JhclwiXHJcbiAgICAgICAgfSwgICBcclxuICAgICAgICBpZDogXCJTcGFjZVwiLCAgICBcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgZW46IHtcclxuICAgICAgICAgICAgbG93OiBcIkFsdFwiLFxyXG4gICAgICAgICAgICBoaWdoOiBcIkFsdFwiXHJcbiAgICAgICAgfSxcclxuICAgICAgICBydToge1xyXG4gICAgICAgICAgICBsb3c6IFwiQWx0XCIsXHJcbiAgICAgICAgICAgIGhpZ2g6IFwiQWx0XCJcclxuICAgICAgICB9LCAgXHJcbiAgICAgICAgaWQ6IFwiQWx0UmlnaHRcIiwgICAgIFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICBlbjoge1xyXG4gICAgICAgICAgICBsb3c6IFwiQ29udHJvbFwiLFxyXG4gICAgICAgICAgICBoaWdoOiBcIkNvbnRyb2xcIlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgcnU6IHtcclxuICAgICAgICAgICAgbG93OiBcIkNvbnRyb2xcIixcclxuICAgICAgICAgICAgaGlnaDogXCJDb250cm9sXCJcclxuICAgICAgICB9LCAgICAgIFxyXG4gICAgICAgIGlkOiBcIkNvbnRyb2xSaWdodFwiLCBcclxuICAgIH0sXHJcbl1cclxuZXhwb3J0IGRlZmF1bHQgYnV0dG9uczsiLCJpbXBvcnQgJy4vc3R5bGVzL21haW4uc2Nzcyc7XG5pbXBvcnQgYnV0dG9ucyBmcm9tICcuL3NjcmlwdC9idXR0b25zJztcblxubGV0IGxhbmcgPSAnZW4nO1xubGV0IHJlZ2lzdHIgPSAnbG93JztcbmxldCBpc0NhcHMgPSBmYWxzZTtcbmxldCBpc1NoaWZ0ID0gZmFsc2U7XG5sZXQgaXNDdHJsID0gZmFsc2U7XG5sZXQgdGV4dGFyZWE7XG5sZXQgYnV0dG9uc0FycmF5ID0gW107XG5sZXQga2V5Ym9hcmRXcmFwcGVyO1xubGV0IGN1ckxhbmc7XG5cbmZ1bmN0aW9uIGRlbFN5bWJvbCgpIHtcbiAgaWYgKHRleHRhcmVhLnNlbGVjdGlvblN0YXJ0ID09PSB0ZXh0YXJlYS5zZWxlY3Rpb25FbmQpIHtcbiAgICB0ZXh0YXJlYS5zZXRSYW5nZVRleHQoJycsIHRleHRhcmVhLnNlbGVjdGlvblN0YXJ0LCB0ZXh0YXJlYS5zZWxlY3Rpb25TdGFydCArIDEsICdlbmQnKTtcbiAgfSBlbHNlIHsgdGV4dGFyZWEuc2V0UmFuZ2VUZXh0KCcnLCB0ZXh0YXJlYS5zZWxlY3Rpb25TdGFydCwgdGV4dGFyZWEuc2VsZWN0aW9uRW5kLCAnZW5kJyk7IH1cbn1cblxuZnVuY3Rpb24gYmFja3NwYWNlKCkge1xuICBpZiAodGV4dGFyZWEuc2VsZWN0aW9uU3RhcnQgPT09IDAgJiYgdGV4dGFyZWEuc2VsZWN0aW9uRW5kID09PSAwKSByZXR1cm47XG4gIGlmICh0ZXh0YXJlYS5zZWxlY3Rpb25TdGFydCA9PT0gdGV4dGFyZWEuc2VsZWN0aW9uRW5kKSB7XG4gICAgdGV4dGFyZWEuc2V0UmFuZ2VUZXh0KCcnLCB0ZXh0YXJlYS5zZWxlY3Rpb25TdGFydCAtIDEsIHRleHRhcmVhLnNlbGVjdGlvblN0YXJ0LCAnZW5kJyk7XG4gIH0gZWxzZSB7IHRleHRhcmVhLnNldFJhbmdlVGV4dCgnJywgdGV4dGFyZWEuc2VsZWN0aW9uU3RhcnQsIHRleHRhcmVhLnNlbGVjdGlvbkVuZCwgJ2VuZCcpOyB9XG59XG5cbmZ1bmN0aW9uIHdvcmtXaXRoVGV4dGFyZWEoaW5zdCkge1xuICBsZXQgYnV0dG9uQ29kZTtcbiAgbGV0IHN5bWJvbDtcblxuICBpZiAoaW5zdCBpbnN0YW5jZW9mIEV2ZW50KSB7XG4gICAgaWYgKGluc3Qua2V5ID09PSAnQ29udHJvbCcpIHJldHVybjtcbiAgICBidXR0b25Db2RlID0gaW5zdC5jb2RlO1xuICAgIGJ1dHRvbnNBcnJheS5mb3JFYWNoKChlbCkgPT4ge1xuICAgICAgaWYgKGVsLm5hbWUuaWQgPT09IGJ1dHRvbkNvZGUpIHtcbiAgICAgICAgc3ltYm9sID0gZWwuYnV0dG9uVmFsdWUudGV4dENvbnRlbnQ7XG4gICAgICB9XG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgYnV0dG9uQ29kZSA9IGluc3QubmFtZS5pZDtcbiAgICBzeW1ib2wgPSBpbnN0LmJ1dHRvblZhbHVlLnRleHRDb250ZW50O1xuICB9XG5cbiAgaWYgKCFidXR0b25zQXJyYXkuc29tZSgoZWwpID0+IGVsLm5hbWUuaWQgPT09IGJ1dHRvbkNvZGUpKSByZXR1cm47XG4gIGxldCBsZXR0ZXI7XG4gIHN3aXRjaCAoYnV0dG9uQ29kZSkge1xuICAgIGNhc2UgJ0JhY2tzcGFjZSc6XG4gICAgICBiYWNrc3BhY2UoKTtcbiAgICAgIHJldHVybjtcbiAgICBjYXNlICdEZWxldGUnOlxuICAgICAgZGVsU3ltYm9sKCk7XG4gICAgICByZXR1cm47XG4gICAgY2FzZSAnRW50ZXInOlxuICAgICAgbGV0dGVyID0gJ1xcbic7XG4gICAgICBicmVhaztcbiAgICBjYXNlICdTcGFjZSc6XG4gICAgICBsZXR0ZXIgPSAnICc7XG4gICAgICBicmVhaztcbiAgICBjYXNlICdUYWInOlxuICAgICAgbGV0dGVyID0gJyAgICAnO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnTWV0YUxlZnQnOlxuICAgIGNhc2UgJ0FsdFJpZ2h0JzpcbiAgICBjYXNlICdBbHRMZWZ0JzpcbiAgICAgIHJldHVybjtcbiAgICBkZWZhdWx0OlxuICAgICAgbGV0dGVyID0gc3ltYm9sO1xuICB9XG4gIHRleHRhcmVhLnNldFJhbmdlVGV4dChsZXR0ZXIsIHRleHRhcmVhLnNlbGVjdGlvblN0YXJ0LCB0ZXh0YXJlYS5zZWxlY3Rpb25FbmQsICdlbmQnKTtcbn1cblxuY2xhc3MgS2V5Ym9hcmRCdXR0b24ge1xuICBidXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcblxuICBidXR0b25WYWx1ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcblxuICB2YWx1ZSA9ICcnO1xuXG4gIGNvbnN0cnVjdG9yKG5hbWUpIHtcbiAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICB9XG5cbiAgY3JlYXRlQnV0dG9uKCkge1xuICAgIHRoaXMuYnV0dG9uLmNsYXNzTGlzdC5hZGQoJ2tleScpO1xuICAgIHRoaXMuYnV0dG9uVmFsdWUuY2xhc3NMaXN0LmFkZCgna2V5X192YWx1ZScpO1xuICAgIHN3aXRjaCAodGhpcy5uYW1lLmVuLmxvdykge1xuICAgICAgY2FzZSAnQ29udHJvbCc6XG4gICAgICAgIHRoaXMuYnV0dG9uLmNsYXNzTGlzdC5hZGQoJ2tleV9fd2lkZScpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ2JhY2tzcGFjZSc6XG4gICAgICAgIHRoaXMuYnV0dG9uLmNsYXNzTGlzdC5hZGQoJ21hdGVyaWFsLXN5bWJvbHMtb3V0bGluZWQnKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdrZXlib2FyZF90YWInOlxuICAgICAgICB0aGlzLmJ1dHRvbi5jbGFzc0xpc3QuYWRkKCdrZXlfX3dpZGUnLCAnbWF0ZXJpYWwtc3ltYm9scy1vdXRsaW5lZCcpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ2NhcHNsb2NrJzpcbiAgICAgICAgdGhpcy5idXR0b24uY2xhc3NMaXN0LmFkZCgna2V5X193aWRlJywgJ21hdGVyaWFsLXN5bWJvbHMtb3V0bGluZWQnLCAna2V5X19jYXBzbG9jaycpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ2tleWJvYXJkX3JldHVybic6XG4gICAgICAgIHRoaXMuYnV0dG9uLmNsYXNzTGlzdC5hZGQoJ2tleV9fZW50ZXInLCAnbWF0ZXJpYWwtc3ltYm9scy1vdXRsaW5lZCcpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ1NoaWZ0JzpcbiAgICAgICAgdGhpcy5idXR0b24uY2xhc3NMaXN0LmFkZCgna2V5X19zaGlmdCcpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ3NwYWNlX2Jhcic6XG4gICAgICAgIHRoaXMuYnV0dG9uLmNsYXNzTGlzdC5hZGQoJ2tleV9fc3BhY2UnLCAnbWF0ZXJpYWwtc3ltYm9scy1vdXRsaW5lZCcpO1xuICAgICAgICBicmVhaztcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHRoaXMuYnV0dG9uLmNsYXNzTGlzdC5hZGQoJ2tleScpO1xuICAgIH1cbiAgICB0aGlzLnNldEJ1dHRvblN5bWJvbCgpO1xuICAgIHRoaXMuYnV0dG9uLmFwcGVuZCh0aGlzLmJ1dHRvblZhbHVlKTtcbiAgICB0aGlzLnByZXNzQnV0dG9uKCk7XG4gICAgdGhpcy5zeW5jaHJvbml6ZVdpdGhLZXlib2FyZCgpO1xuICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kKHRoaXMuYnV0dG9uKTtcbiAgfVxuXG4gIHByZXNzQnV0dG9uKCkge1xuICAgIHRoaXMuYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgc3dpdGNoICh0aGlzLm5hbWUuaWQpIHtcbiAgICAgICAgY2FzZSAnQ2Fwc0xvY2snOlxuICAgICAgICAgIGlmIChpc1NoaWZ0KSB7XG4gICAgICAgICAgICB0aGlzLnNoaWZ0QnV0dG9uKCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHRoaXMuY2Fwc0xvY2soKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnU2hpZnRMZWZ0JzpcbiAgICAgICAgY2FzZSAnU2hpZnRSaWdodCc6IHRoaXMuc2hpZnRCdXR0b24oKTsgYnJlYWs7XG4gICAgICAgIGNhc2UgJ0NvbnRyb2xSaWdodCc6XG4gICAgICAgIGNhc2UgJ0NvbnRyb2xMZWZ0JzpcbiAgICAgICAgICBpZiAoaXNTaGlmdCkge1xuICAgICAgICAgICAgdGhpcy5zaGlmdEJ1dHRvbigpO1xuICAgICAgICAgICAgdGhpcy5jaGFuZ2VMYW5ndWFnZSgpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBicmVhaztcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICB3b3JrV2l0aFRleHRhcmVhKHRoaXMpO1xuICAgICAgICAgIGlmIChpc1NoaWZ0KSB7XG4gICAgICAgICAgICB0aGlzLnNoaWZ0QnV0dG9uKCk7XG4gICAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgc2hpZnRCdXR0b24oKSB7XG4gICAgaWYgKGlzU2hpZnQpIHtcbiAgICAgIGJ1dHRvbnNBcnJheS5mb3JFYWNoKChlbCkgPT4ge1xuICAgICAgICBpZiAoZWwubmFtZS5lbi5sb3cgPT09ICdTaGlmdCcpIHtcbiAgICAgICAgICBlbC5idXR0b24uY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7XG4gICAgICAgICAgaXNTaGlmdCA9IGZhbHNlO1xuICAgICAgICAgIGlmICghaXNDYXBzKSB7XG4gICAgICAgICAgICByZWdpc3RyID0gJ2xvdyc7XG4gICAgICAgICAgICB0aGlzLmNoYW5nZUJ1dHRvbnNWYWx1ZSgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGJ1dHRvbnNBcnJheS5mb3JFYWNoKChlbCkgPT4ge1xuICAgICAgICBpZiAoZWwubmFtZS5lbi5sb3cgPT09ICdTaGlmdCcpIHtcbiAgICAgICAgICBlbC5idXR0b24uY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XG4gICAgICAgICAgcmVnaXN0ciA9ICdoaWdoJztcbiAgICAgICAgICB0aGlzLmNoYW5nZUJ1dHRvbnNWYWx1ZSgpO1xuICAgICAgICAgIGlzU2hpZnQgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gICAgaWYgKGlzU2hpZnQgJiYgaXNDYXBzKSB7XG4gICAgICByZWdpc3RyID0gJ2xvdyc7XG4gICAgICB0aGlzLmNoYW5nZUJ1dHRvbnNWYWx1ZSgpO1xuICAgIH1cbiAgICBpZiAoIWlzU2hpZnQgJiYgaXNDYXBzKSB7XG4gICAgICByZWdpc3RyID0gJ2hpZ2gnO1xuICAgICAgdGhpcy5jaGFuZ2VCdXR0b25zVmFsdWUoKTtcbiAgICB9XG4gIH1cblxuICBzZXRCdXR0b25TeW1ib2woKSB7XG4gICAgdGhpcy5idXR0b25WYWx1ZS50ZXh0Q29udGVudCA9IHRoaXMubmFtZVtsYW5nXVtyZWdpc3RyXTtcbiAgICBzd2l0Y2ggKHRoaXMubmFtZS5lbi5sb3cpIHtcbiAgICAgIGNhc2UgJ0NvbnRyb2wnOlxuICAgICAgICB0aGlzLmJ1dHRvblZhbHVlLnRleHRDb250ZW50ID0gJ0N0cmwnO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ2JhY2tzcGFjZSc6XG4gICAgICAgIHRoaXMudmFsdWUgPSB0aGlzLnZhbHVlLnN1YnN0cmluZygwLCB0aGlzLnZhbHVlLmxlbmd0aCAtIDEpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ2tleWJvYXJkX3RhYic6XG4gICAgICAgIHRoaXMudmFsdWUgPSAnICAgICc7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnY2Fwc2xvY2snOlxuICAgICAgICB0aGlzLnZhbHVlID0gdGhpcy5jYXBzTG9jaztcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdrZXlib2FyZF9yZXR1cm4nOlxuICAgICAgICB0aGlzLnZhbHVlID0gJ1xcbic7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnc2hpZnQnOlxuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ3NwYWNlX2Jhcic6XG4gICAgICAgIHRoaXMudmFsdWUgPSAnICc7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnYWx0JzpcbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICB0aGlzLnZhbHVlID0gdGhpcy5uYW1lW2xhbmddW3JlZ2lzdHJdO1xuICAgIH1cbiAgICBjdXJMYW5nLnRleHRDb250ZW50ID0gYEN1cnJlbnQgbGFuZ3VhZ2U6ICR7bGFuZy50b0xvY2FsZVVwcGVyQ2FzZSgpfWA7XG4gIH1cblxuICBjYXBzTG9jaygpIHtcbiAgICBpZiAoaXNDYXBzKSB7XG4gICAgICB0aGlzLmJ1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKCdvbicpO1xuICAgICAgcmVnaXN0ciA9ICdsb3cnO1xuICAgICAgaXNDYXBzID0gZmFsc2U7XG4gICAgICB0aGlzLmNoYW5nZUJ1dHRvbnNWYWx1ZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmJ1dHRvbi5jbGFzc0xpc3QuYWRkKCdvbicpO1xuICAgICAgcmVnaXN0ciA9ICdoaWdoJztcbiAgICAgIGlzQ2FwcyA9IHRydWU7XG4gICAgICB0aGlzLmNoYW5nZUJ1dHRvbnNWYWx1ZSgpO1xuICAgIH1cbiAgfVxuXG4gIGNoYW5nZUxhbmd1YWdlKCkge1xuICAgIGxhbmcgPSBsYW5nID09PSAnZW4nID8gJ3J1JyA6ICdlbic7XG4gICAgdGhpcy5jaGFuZ2VCdXR0b25zVmFsdWUoKTtcbiAgfVxuXG4gIGNoYW5nZUJ1dHRvbnNWYWx1ZSgpIHtcbiAgICB0aGlzLnZhbHVlID0gdGhpcy5uYW1lLmlkO1xuICAgIGJ1dHRvbnNBcnJheS5mb3JFYWNoKChlbCkgPT4gZWwuc2V0QnV0dG9uU3ltYm9sKCkpO1xuICB9XG5cbiAgc3luY2hyb25pemVXaXRoS2V5Ym9hcmQoKSB7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIChlKSA9PiB7XG4gICAgICBpZiAoZS5jb2RlID09PSB0aGlzLm5hbWUuaWQpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB0aGlzLmJ1dHRvbi5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKTtcbiAgICAgIH1cbiAgICAgIGlmIChbJ0Fycm93VXAnLCAnQXJyb3dEb3duJywgJ0Fycm93TGVmdCcsICdBcnJvd1JpZ2h0J10uaW5jbHVkZXMoZS5jb2RlKSkge1xuICAgICAgICBlLnRhcmdldC5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXl1cCcsIChlKSA9PiB7XG4gICAgICBpZiAoZS5jb2RlID09PSB0aGlzLm5hbWUuaWQpIHtcbiAgICAgICAgdGhpcy5idXR0b24uY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7XG4gICAgICB9XG4gICAgICBpZiAoWydBcnJvd1VwJywgJ0Fycm93RG93bicsICdBcnJvd0xlZnQnLCAnQXJyb3dSaWdodCddLmluY2x1ZGVzKGUuY29kZSkpIHtcbiAgICAgICAgZS50YXJnZXQuY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gY3JlYXRlS2V5Ym9hcmQoKSB7XG4gIGNvbnN0IHdyYXBwZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgd3JhcHBlci5jbGFzc0xpc3QuYWRkKCd3cmFwcGVyJyk7XG4gIGNvbnN0IG1haW4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdtYWluJyk7XG4gIG1haW4uY2xhc3NMaXN0LmFkZCgnbWFpbicpO1xuXG4gIGNvbnN0IHNlY3Rpb25UZXh0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2VjdGlvbicpO1xuICBzZWN0aW9uVGV4dC5jbGFzc0xpc3QuYWRkKCdzZWN0aW9uJywgJ3RleHQnKTtcbiAgY29uc3QgdGV4dFdyYXBwZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgdGV4dFdyYXBwZXIuY2xhc3NMaXN0LmFkZCgndGV4dF9fd3JhcHBlcicpO1xuICB0ZXh0YXJlYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RleHRhcmVhJyk7XG4gIHRleHRhcmVhLmNsYXNzTGlzdC5hZGQoJ3RleHRfX2lucHV0JywgJ3RleHQtaW5wdXQnKTtcbiAgdGV4dGFyZWEuYWRkRXZlbnRMaXN0ZW5lcignYmx1cicsICgpID0+IHRleHRhcmVhLmZvY3VzKCkpO1xuICB0ZXh0YXJlYS5hdXRvZm9jdXMgPSB0cnVlO1xuICB0ZXh0V3JhcHBlci5hcHBlbmQodGV4dGFyZWEpO1xuICBzZWN0aW9uVGV4dC5hcHBlbmQodGV4dFdyYXBwZXIpO1xuXG4gIGNvbnN0IHNlY3Rpb25LZXlib2FyZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NlY3Rpb24nKTtcbiAgc2VjdGlvbktleWJvYXJkLmNsYXNzTGlzdC5hZGQoJ3NlY3Rpb24nLCAna2V5Ym9hcmQnKTtcbiAga2V5Ym9hcmRXcmFwcGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGtleWJvYXJkV3JhcHBlci5jbGFzc0xpc3QuYWRkKCdrZXlib2FyZF9fd3JhcHBlcicpO1xuICBzZWN0aW9uS2V5Ym9hcmQuYXBwZW5kKGtleWJvYXJkV3JhcHBlcik7XG4gIG1haW4uYXBwZW5kKHNlY3Rpb25UZXh0LCBzZWN0aW9uS2V5Ym9hcmQpO1xuXG4gIGNvbnN0IGZvb3RlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2Zvb3RlcicpO1xuICBmb290ZXIuY2xhc3NMaXN0LmFkZCgnZm9vdGVyJyk7XG4gIGNvbnN0IGdpdGh1YiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTtcbiAgZ2l0aHViLmNsYXNzTGlzdC5hZGQoJ2xpbmsnLCAnbGlua19fZ2gnKTtcbiAgZ2l0aHViLnRleHRDb250ZW50ID0gJ8KpIExpbGl0aCBQcmltYXJ5JztcbiAgZ2l0aHViLmhyZWYgPSAnaHR0cHM6Ly9naXRodWIuY29tL0xpbGl0aFByaW1hcnknO1xuICBjdXJMYW5nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuICBjdXJMYW5nLmNsYXNzTGlzdC5hZGQoJ3RleHQnKTtcbiAgY3VyTGFuZy50ZXh0Q29udGVudCA9IGBDdXJyZW50IGxhbmd1YWdlOiAke2xhbmcudG9Mb2NhbGVVcHBlckNhc2UoKX1gO1xuICBjb25zdCBsYW5nU3dpdGNoID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuICBsYW5nU3dpdGNoLmNsYXNzTGlzdC5hZGQoJ3RleHQnKTtcbiAgbGFuZ1N3aXRjaC50ZXh0Q29udGVudCA9ICdTd2l0Y2g6IFNoaWZ0ICsgQ3RybCc7XG4gIGNvbnN0IFJTUyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTtcbiAgUlNTLmNsYXNzTGlzdC5hZGQoJ2xpbmsnLCAnbGlua19fcnNzJyk7XG4gIFJTUy50ZXh0Q29udGVudCA9ICdSU1MnO1xuICBSU1MuaHJlZiA9ICdodHRwczovL3JzLnNjaG9vbC9qcy8nO1xuICBmb290ZXIuYXBwZW5kKGdpdGh1YiwgY3VyTGFuZywgbGFuZ1N3aXRjaCwgUlNTKTtcblxuICB3cmFwcGVyLmFwcGVuZChtYWluLCBmb290ZXIpO1xuICBkb2N1bWVudC5ib2R5LmFwcGVuZCh3cmFwcGVyKTtcblxuICBjb25zdCBidG5MZWZ0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG4gIGJ0bkxlZnQuY2xhc3NMaXN0LmFkZCgna2V5JywgJ2tleV9fc2xpbScpO1xuICBjb25zdCBzcGFuTGVmdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcbiAgc3BhbkxlZnQuY2xhc3NMaXN0LmFkZCgna2V5X192YWx1ZScsICdtYXRlcmlhbC1zeW1ib2xzLW91dGxpbmVkJyk7XG4gIHNwYW5MZWZ0LnRleHRDb250ZW50ID0gJ2tleWJvYXJkX2Fycm93X2xlZnQnO1xuICBidG5MZWZ0LmFwcGVuZChzcGFuTGVmdCk7XG5cbiAgY29uc3QgYnRuVXAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgYnRuVXAuY2xhc3NMaXN0LmFkZCgna2V5JywgJ2tleV9fc2xpbScpO1xuICBjb25zdCBzcGFuVXAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gIHNwYW5VcC5jbGFzc0xpc3QuYWRkKCdrZXlfX3ZhbHVlJywgJ21hdGVyaWFsLXN5bWJvbHMtb3V0bGluZWQnKTtcbiAgc3BhblVwLnRleHRDb250ZW50ID0gJ2tleWJvYXJkX2Fycm93X3VwJztcbiAgYnRuVXAuYXBwZW5kKHNwYW5VcCk7XG5cbiAgY29uc3QgYnRuRG93biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICBidG5Eb3duLmNsYXNzTGlzdC5hZGQoJ2tleScsICdrZXlfX3NsaW0nKTtcbiAgY29uc3Qgc3BhbkRvd24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gIHNwYW5Eb3duLmNsYXNzTGlzdC5hZGQoJ2tleV9fdmFsdWUnLCAnbWF0ZXJpYWwtc3ltYm9scy1vdXRsaW5lZCcpO1xuICBzcGFuRG93bi50ZXh0Q29udGVudCA9ICdrZXlib2FyZF9hcnJvd19kb3duJztcbiAgYnRuRG93bi5hcHBlbmQoc3BhbkRvd24pO1xuXG4gIGNvbnN0IGJ0blJpZ2h0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG4gIGJ0blJpZ2h0LmNsYXNzTGlzdC5hZGQoJ2tleScsICdrZXlfX3NsaW0nKTtcbiAgY29uc3Qgc3BhblJpZ2h0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuICBzcGFuUmlnaHQuY2xhc3NMaXN0LmFkZCgna2V5X192YWx1ZScsICdtYXRlcmlhbC1zeW1ib2xzLW91dGxpbmVkJyk7XG4gIHNwYW5SaWdodC50ZXh0Q29udGVudCA9ICdrZXlib2FyZF9hcnJvd19yaWdodCc7XG4gIGJ0blJpZ2h0LmFwcGVuZChzcGFuUmlnaHQpO1xuXG4gIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCAoZSkgPT4ge1xuICAgIGRvY3VtZW50LmJvZHkuc3R5bGUucG9pbnRlckV2ZW50cyA9ICdub25lJztcbiAgICBpZiAoZS5jb2RlID09PSAnU2hpZnRMZWZ0JyB8fCBlLmNvZGUgPT09ICdTaGlmdFJpZ2h0Jykge1xuICAgICAgaWYgKGUucmVwZWF0KSByZXR1cm47XG4gICAgICBidXR0b25zQXJyYXlbMF0uc2hpZnRCdXR0b24oKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKGUua2V5ID09PSAnQ29udHJvbCcpIHtcbiAgICAgIGlzQ3RybCA9IHRydWU7XG4gICAgfVxuICAgIGlmIChlLmNvZGUgPT09ICdDYXBzTG9jaycpIHtcbiAgICAgIGJ1dHRvbnNBcnJheVsyOV0uY2Fwc0xvY2soKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgd29ya1dpdGhUZXh0YXJlYShlKTtcbiAgICBzd2l0Y2ggKGUuY29kZSkge1xuICAgICAgY2FzZSAnQXJyb3dVcCc6IGJ0blVwLmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZScpOyBicmVhaztcbiAgICAgIGNhc2UgJ0Fycm93RG93bic6IGJ0bkRvd24uY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7IGJyZWFrO1xuICAgICAgY2FzZSAnQXJyb3dMZWZ0JzogYnRuTGVmdC5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKTsgYnJlYWs7XG4gICAgICBjYXNlICdBcnJvd1JpZ2h0JzogYnRuUmlnaHQuY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7IGJyZWFrO1xuICAgICAgZGVmYXVsdDpcbiAgICB9XG4gIH0pO1xuXG4gIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwJywgKGUpID0+IHtcbiAgICBkb2N1bWVudC5ib2R5LnN0eWxlLnBvaW50ZXJFdmVudHMgPSAnaW5oZXJpdCc7XG5cbiAgICBpZiAoaXNTaGlmdCAmJiBpc0N0cmwpIGJ1dHRvbnNBcnJheVswXS5jaGFuZ2VMYW5ndWFnZSgpO1xuXG4gICAgaWYgKGUuY29kZSA9PT0gJ1NoaWZ0TGVmdCcgfHwgZS5jb2RlID09PSAnU2hpZnRSaWdodCcpIHtcbiAgICAgIGJ1dHRvbnNBcnJheVswXS5zaGlmdEJ1dHRvbigpO1xuICAgIH1cbiAgICBpZiAoZS5rZXkgPT09ICdDb250cm9sJykge1xuICAgICAgaXNDdHJsID0gZmFsc2U7XG4gICAgfVxuICAgIHN3aXRjaCAoZS5jb2RlKSB7XG4gICAgICBjYXNlICdBcnJvd1VwJzogYnRuVXAuY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7IGJyZWFrO1xuICAgICAgY2FzZSAnQXJyb3dEb3duJzogYnRuRG93bi5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKTsgYnJlYWs7XG4gICAgICBjYXNlICdBcnJvd0xlZnQnOiBidG5MZWZ0LmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpOyBicmVhaztcbiAgICAgIGNhc2UgJ0Fycm93UmlnaHQnOiBidG5SaWdodC5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKTsgYnJlYWs7XG4gICAgICBkZWZhdWx0OlxuICAgIH1cbiAgfSk7XG5cbiAgY29uc3QgZnJhZ21lbnQgPSBkb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCk7XG4gIGJ1dHRvbnNBcnJheSA9IGJ1dHRvbnMubWFwKChlbCkgPT4ge1xuICAgIGNvbnN0IGJ1dHRvbiA9IG5ldyBLZXlib2FyZEJ1dHRvbihlbCk7XG4gICAgYnV0dG9uLmNyZWF0ZUJ1dHRvbigpO1xuICAgIGZyYWdtZW50LmFwcGVuZChidXR0b24uYnV0dG9uKTtcbiAgICByZXR1cm4gYnV0dG9uO1xuICB9KTtcblxuICBjb25zdCBjZW50cmFsQnRuc1dyYXBwZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgY2VudHJhbEJ0bnNXcmFwcGVyLmNsYXNzTGlzdC5hZGQoJ2NlbnRyYWwtYnRucy13cmFwcGVyJyk7XG4gIGNlbnRyYWxCdG5zV3JhcHBlci5hcHBlbmQoYnRuVXAsIGJ0bkRvd24pO1xuXG4gIGtleWJvYXJkV3JhcHBlci5hcHBlbmQoZnJhZ21lbnQsIGJ0bkxlZnQsIGNlbnRyYWxCdG5zV3JhcHBlciwgYnRuUmlnaHQpO1xuXG4gIGJ0bkxlZnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgdGV4dGFyZWEuc2VsZWN0aW9uU3RhcnQgLT0gMTtcbiAgICB0ZXh0YXJlYS5zZWxlY3Rpb25FbmQgPSB0ZXh0YXJlYS5zZWxlY3Rpb25TdGFydCAtIDE7XG4gIH0pO1xuXG4gIGJ0blJpZ2h0LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgIHRleHRhcmVhLnNlbGVjdGlvblN0YXJ0ICs9IDE7XG4gICAgdGV4dGFyZWEuc2VsZWN0aW9uRW5kID0gdGV4dGFyZWEuc2VsZWN0aW9uU3RhcnQgKyAxO1xuICB9KTtcblxuICBmdW5jdGlvbiBzcGxpdFJvd3Mocm93cywgc3ltYk51bSkge1xuICAgIGNvbnN0IG5ld1Jvd3MgPSByb3dzLnJlZHVjZSgoYWNjLCBlbCkgPT4ge1xuICAgICAgaWYgKGVsLmxlbmd0aCA+IHN5bWJOdW0pIHtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBlbC5sZW5ndGg7IGkgKz0gc3ltYk51bSkge1xuICAgICAgICAgIGFjYy5wdXNoKGVsLnNsaWNlKGksIGkgKyBzeW1iTnVtIC0gMSkpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgYWNjLnB1c2goZWwpO1xuICAgICAgcmV0dXJuIGFjYztcbiAgICB9LCBbXSk7XG4gICAgcmV0dXJuIG5ld1Jvd3M7XG4gIH1cblxuICBidG5VcC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICBsZXQgYyA9IDA7XG4gICAgY29uc3Qgc3ltYk51bSA9IE1hdGgucm91bmQoKHRleHRhcmVhLmNsaWVudFdpZHRoIC0gNDApIC8gOC43ODMpO1xuICAgIGxldCByb3dzID0gdGV4dGFyZWEudmFsdWUuc2xpY2UoMCwgdGV4dGFyZWEuc2VsZWN0aW9uU3RhcnQpLnNwbGl0KCdcXG4nKTtcbiAgICByb3dzID0gc3BsaXRSb3dzKHJvd3MsIHN5bWJOdW0pO1xuICAgIGlmIChyb3dzLmxlbmd0aCA9PT0gMSAmJiByb3dzWzBdLmxlbmd0aCA9PT0gc3ltYk51bSkge1xuICAgICAgcm93cy5wdXNoKCcnKTtcbiAgICAgIGMgPSAxO1xuICAgIH1cbiAgICBpZiAocm93cy5sZW5ndGggPCAyKSByZXR1cm47XG4gICAgY29uc3QgY3VycmVudFJvd0xlbmd0aCA9IHJvd3Nbcm93cy5sZW5ndGggLSAxXS5sZW5ndGg7XG4gICAgY29uc3QgdGFyZ2V0Um93TGVuZ3RoID0gcm93c1tyb3dzLmxlbmd0aCAtIDJdLmxlbmd0aDtcblxuICAgIHRleHRhcmVhLnNlbGVjdGlvblN0YXJ0ID0gY3VycmVudFJvd0xlbmd0aCA8IHRhcmdldFJvd0xlbmd0aFxuICAgICAgPyB0ZXh0YXJlYS5zZWxlY3Rpb25TdGFydCAtICh0YXJnZXRSb3dMZW5ndGgpIC0gMSArIGNcbiAgICAgIDogdGV4dGFyZWEuc2VsZWN0aW9uU3RhcnQgLSAoY3VycmVudFJvd0xlbmd0aCkgLSAxICsgYztcbiAgICB0ZXh0YXJlYS5zZWxlY3Rpb25FbmQgPSB0ZXh0YXJlYS5zZWxlY3Rpb25TdGFydDtcbiAgfSk7XG5cbiAgYnRuRG93bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICBjb25zdCBzeW1iTnVtID0gTWF0aC5yb3VuZCgodGV4dGFyZWEuY2xpZW50V2lkdGggLSA0MCkgLyA4Ljc4Myk7XG4gICAgbGV0IHJvd3MgPSB0ZXh0YXJlYS52YWx1ZS5zbGljZSgwLCB0ZXh0YXJlYS5zZWxlY3Rpb25TdGFydCkuc3BsaXQoJ1xcbicpO1xuICAgIHJvd3MgPSBzcGxpdFJvd3Mocm93cywgc3ltYk51bSk7XG4gICAgY29uc3QgY3VycmVudFJvd0xlbmd0aCA9IHJvd3Nbcm93cy5sZW5ndGggLSAxXS5sZW5ndGg7XG5cbiAgICByb3dzID0gdGV4dGFyZWEudmFsdWUuc2xpY2UodGV4dGFyZWEuc2VsZWN0aW9uU3RhcnQsIHRleHRhcmVhLnZhbHVlLmxlbmd0aCkuc3BsaXQoJ1xcbicpO1xuICAgIGxldCBjID0gMDtcbiAgICBpZiAocm93c1swXS5sZW5ndGggPiBzeW1iTnVtIC0gY3VycmVudFJvd0xlbmd0aCkge1xuICAgICAgY29uc3QgZmlyc3RSb3cgPSByb3dzWzBdLnNsaWNlKDAsIHN5bWJOdW0gLSBjdXJyZW50Um93TGVuZ3RoKTtcbiAgICAgIHJvd3NbMF0gPSByb3dzWzBdLnNsaWNlKHN5bWJOdW0gLSBjdXJyZW50Um93TGVuZ3RoLCByb3dzWzBdLmxlbmd0aCk7XG4gICAgICByb3dzLnVuc2hpZnQoZmlyc3RSb3cpO1xuICAgICAgYyA9IC0xO1xuICAgIH1cblxuICAgIHJvd3MgPSBzcGxpdFJvd3Mocm93cywgc3ltYk51bSk7XG4gICAgaWYgKHJvd3MubGVuZ3RoIDwgMikgcmV0dXJuO1xuICAgIGNvbnN0IHJlc3RDdXJSb3dMZW5ndGggPSByb3dzWzBdLmxlbmd0aDtcbiAgICBjb25zdCB0YXJnZXRSb3dMZW5ndGggPSByb3dzWzFdLmxlbmd0aDtcblxuICAgIHRleHRhcmVhLnNlbGVjdGlvblN0YXJ0ID0gY3VycmVudFJvd0xlbmd0aCA+IHRhcmdldFJvd0xlbmd0aFxuICAgICAgPyB0ZXh0YXJlYS5zZWxlY3Rpb25TdGFydCArICh0YXJnZXRSb3dMZW5ndGggKyByZXN0Q3VyUm93TGVuZ3RoKSArIDEgKyBjXG4gICAgICA6IHRleHRhcmVhLnNlbGVjdGlvblN0YXJ0ICsgKHJlc3RDdXJSb3dMZW5ndGggKyBjdXJyZW50Um93TGVuZ3RoKSArIDEgKyBjO1xuICAgIHRleHRhcmVhLnNlbGVjdGlvbkVuZCA9IHRleHRhcmVhLnNlbGVjdGlvblN0YXJ0O1xuICB9KTtcbn1cblxuLy8gTE9DQUwgU1RPUkFHRVxuXG5mdW5jdGlvbiBnZXRMb2NhbFN0b3JhZ2UoKSB7XG4gIGlmIChsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnbGFuZycpKSB7XG4gICAgbGFuZyA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdsYW5nJyk7XG4gIH0gZWxzZSBsYW5nID0gJ2VuJztcbiAgY3JlYXRlS2V5Ym9hcmQoKTtcbn1cblxud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCBnZXRMb2NhbFN0b3JhZ2UpO1xuXG5mdW5jdGlvbiBzZXRMb2NhbFN0b3JhZ2UoKSB7XG4gIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdsYW5nJywgbGFuZyk7XG59XG5cbndpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdiZWZvcmV1bmxvYWQnLCBzZXRMb2NhbFN0b3JhZ2UpO1xuIiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdGlmIChjYWNoZWRNb2R1bGUuZXJyb3IgIT09IHVuZGVmaW5lZCkgdGhyb3cgY2FjaGVkTW9kdWxlLmVycm9yO1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHR0cnkge1xuXHRcdHZhciBleGVjT3B0aW9ucyA9IHsgaWQ6IG1vZHVsZUlkLCBtb2R1bGU6IG1vZHVsZSwgZmFjdG9yeTogX193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0sIHJlcXVpcmU6IF9fd2VicGFja19yZXF1aXJlX18gfTtcblx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmkuZm9yRWFjaChmdW5jdGlvbihoYW5kbGVyKSB7IGhhbmRsZXIoZXhlY09wdGlvbnMpOyB9KTtcblx0XHRtb2R1bGUgPSBleGVjT3B0aW9ucy5tb2R1bGU7XG5cdFx0ZXhlY09wdGlvbnMuZmFjdG9yeS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBleGVjT3B0aW9ucy5yZXF1aXJlKTtcblx0fSBjYXRjaChlKSB7XG5cdFx0bW9kdWxlLmVycm9yID0gZTtcblx0XHR0aHJvdyBlO1xuXHR9XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4vLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuX193ZWJwYWNrX3JlcXVpcmVfXy5tID0gX193ZWJwYWNrX21vZHVsZXNfXztcblxuLy8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbl9fd2VicGFja19yZXF1aXJlX18uYyA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfXztcblxuLy8gZXhwb3NlIHRoZSBtb2R1bGUgZXhlY3V0aW9uIGludGVyY2VwdG9yXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmkgPSBbXTtcblxuIiwiLy8gVGhpcyBmdW5jdGlvbiBhbGxvdyB0byByZWZlcmVuY2UgYWxsIGNodW5rc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5odSA9IChjaHVua0lkKSA9PiB7XG5cdC8vIHJldHVybiB1cmwgZm9yIGZpbGVuYW1lcyBiYXNlZCBvbiB0ZW1wbGF0ZVxuXHRyZXR1cm4gXCJcIiArIGNodW5rSWQgKyBcIi5cIiArIF9fd2VicGFja19yZXF1aXJlX18uaCgpICsgXCIuaG90LXVwZGF0ZS5qc1wiO1xufTsiLCIvLyBUaGlzIGZ1bmN0aW9uIGFsbG93IHRvIHJlZmVyZW5jZSBhc3luYyBjaHVua3Ncbl9fd2VicGFja19yZXF1aXJlX18ubWluaUNzc0YgPSAoY2h1bmtJZCkgPT4ge1xuXHQvLyByZXR1cm4gdXJsIGZvciBmaWxlbmFtZXMgYmFzZWQgb24gdGVtcGxhdGVcblx0cmV0dXJuIHVuZGVmaW5lZDtcbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5obXJGID0gKCkgPT4gKFwibWFpbi5cIiArIF9fd2VicGFja19yZXF1aXJlX18uaCgpICsgXCIuaG90LXVwZGF0ZS5qc29uXCIpOyIsIl9fd2VicGFja19yZXF1aXJlX18uaCA9ICgpID0+IChcImFmNzY0NDAwNTdiYTVjYTIyMThkXCIpIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5nID0gKGZ1bmN0aW9uKCkge1xuXHRpZiAodHlwZW9mIGdsb2JhbFRoaXMgPT09ICdvYmplY3QnKSByZXR1cm4gZ2xvYmFsVGhpcztcblx0dHJ5IHtcblx0XHRyZXR1cm4gdGhpcyB8fCBuZXcgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdGlmICh0eXBlb2Ygd2luZG93ID09PSAnb2JqZWN0JykgcmV0dXJuIHdpbmRvdztcblx0fVxufSkoKTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwidmFyIGN1cnJlbnRNb2R1bGVEYXRhID0ge307XG52YXIgaW5zdGFsbGVkTW9kdWxlcyA9IF9fd2VicGFja19yZXF1aXJlX18uYztcblxuLy8gbW9kdWxlIGFuZCByZXF1aXJlIGNyZWF0aW9uXG52YXIgY3VycmVudENoaWxkTW9kdWxlO1xudmFyIGN1cnJlbnRQYXJlbnRzID0gW107XG5cbi8vIHN0YXR1c1xudmFyIHJlZ2lzdGVyZWRTdGF0dXNIYW5kbGVycyA9IFtdO1xudmFyIGN1cnJlbnRTdGF0dXMgPSBcImlkbGVcIjtcblxuLy8gd2hpbGUgZG93bmxvYWRpbmdcbnZhciBibG9ja2luZ1Byb21pc2VzID0gMDtcbnZhciBibG9ja2luZ1Byb21pc2VzV2FpdGluZyA9IFtdO1xuXG4vLyBUaGUgdXBkYXRlIGluZm9cbnZhciBjdXJyZW50VXBkYXRlQXBwbHlIYW5kbGVycztcbnZhciBxdWV1ZWRJbnZhbGlkYXRlZE1vZHVsZXM7XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFyc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5obXJEID0gY3VycmVudE1vZHVsZURhdGE7XG5cbl9fd2VicGFja19yZXF1aXJlX18uaS5wdXNoKGZ1bmN0aW9uIChvcHRpb25zKSB7XG5cdHZhciBtb2R1bGUgPSBvcHRpb25zLm1vZHVsZTtcblx0dmFyIHJlcXVpcmUgPSBjcmVhdGVSZXF1aXJlKG9wdGlvbnMucmVxdWlyZSwgb3B0aW9ucy5pZCk7XG5cdG1vZHVsZS5ob3QgPSBjcmVhdGVNb2R1bGVIb3RPYmplY3Qob3B0aW9ucy5pZCwgbW9kdWxlKTtcblx0bW9kdWxlLnBhcmVudHMgPSBjdXJyZW50UGFyZW50cztcblx0bW9kdWxlLmNoaWxkcmVuID0gW107XG5cdGN1cnJlbnRQYXJlbnRzID0gW107XG5cdG9wdGlvbnMucmVxdWlyZSA9IHJlcXVpcmU7XG59KTtcblxuX193ZWJwYWNrX3JlcXVpcmVfXy5obXJDID0ge307XG5fX3dlYnBhY2tfcmVxdWlyZV9fLmhtckkgPSB7fTtcblxuZnVuY3Rpb24gY3JlYXRlUmVxdWlyZShyZXF1aXJlLCBtb2R1bGVJZCkge1xuXHR2YXIgbWUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXTtcblx0aWYgKCFtZSkgcmV0dXJuIHJlcXVpcmU7XG5cdHZhciBmbiA9IGZ1bmN0aW9uIChyZXF1ZXN0KSB7XG5cdFx0aWYgKG1lLmhvdC5hY3RpdmUpIHtcblx0XHRcdGlmIChpbnN0YWxsZWRNb2R1bGVzW3JlcXVlc3RdKSB7XG5cdFx0XHRcdHZhciBwYXJlbnRzID0gaW5zdGFsbGVkTW9kdWxlc1tyZXF1ZXN0XS5wYXJlbnRzO1xuXHRcdFx0XHRpZiAocGFyZW50cy5pbmRleE9mKG1vZHVsZUlkKSA9PT0gLTEpIHtcblx0XHRcdFx0XHRwYXJlbnRzLnB1c2gobW9kdWxlSWQpO1xuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRjdXJyZW50UGFyZW50cyA9IFttb2R1bGVJZF07XG5cdFx0XHRcdGN1cnJlbnRDaGlsZE1vZHVsZSA9IHJlcXVlc3Q7XG5cdFx0XHR9XG5cdFx0XHRpZiAobWUuY2hpbGRyZW4uaW5kZXhPZihyZXF1ZXN0KSA9PT0gLTEpIHtcblx0XHRcdFx0bWUuY2hpbGRyZW4ucHVzaChyZXF1ZXN0KTtcblx0XHRcdH1cblx0XHR9IGVsc2Uge1xuXHRcdFx0Y29uc29sZS53YXJuKFxuXHRcdFx0XHRcIltITVJdIHVuZXhwZWN0ZWQgcmVxdWlyZShcIiArXG5cdFx0XHRcdFx0cmVxdWVzdCArXG5cdFx0XHRcdFx0XCIpIGZyb20gZGlzcG9zZWQgbW9kdWxlIFwiICtcblx0XHRcdFx0XHRtb2R1bGVJZFxuXHRcdFx0KTtcblx0XHRcdGN1cnJlbnRQYXJlbnRzID0gW107XG5cdFx0fVxuXHRcdHJldHVybiByZXF1aXJlKHJlcXVlc3QpO1xuXHR9O1xuXHR2YXIgY3JlYXRlUHJvcGVydHlEZXNjcmlwdG9yID0gZnVuY3Rpb24gKG5hbWUpIHtcblx0XHRyZXR1cm4ge1xuXHRcdFx0Y29uZmlndXJhYmxlOiB0cnVlLFxuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcblx0XHRcdGdldDogZnVuY3Rpb24gKCkge1xuXHRcdFx0XHRyZXR1cm4gcmVxdWlyZVtuYW1lXTtcblx0XHRcdH0sXG5cdFx0XHRzZXQ6IGZ1bmN0aW9uICh2YWx1ZSkge1xuXHRcdFx0XHRyZXF1aXJlW25hbWVdID0gdmFsdWU7XG5cdFx0XHR9XG5cdFx0fTtcblx0fTtcblx0Zm9yICh2YXIgbmFtZSBpbiByZXF1aXJlKSB7XG5cdFx0aWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChyZXF1aXJlLCBuYW1lKSAmJiBuYW1lICE9PSBcImVcIikge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGZuLCBuYW1lLCBjcmVhdGVQcm9wZXJ0eURlc2NyaXB0b3IobmFtZSkpO1xuXHRcdH1cblx0fVxuXHRmbi5lID0gZnVuY3Rpb24gKGNodW5rSWQpIHtcblx0XHRyZXR1cm4gdHJhY2tCbG9ja2luZ1Byb21pc2UocmVxdWlyZS5lKGNodW5rSWQpKTtcblx0fTtcblx0cmV0dXJuIGZuO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVNb2R1bGVIb3RPYmplY3QobW9kdWxlSWQsIG1lKSB7XG5cdHZhciBfbWFpbiA9IGN1cnJlbnRDaGlsZE1vZHVsZSAhPT0gbW9kdWxlSWQ7XG5cdHZhciBob3QgPSB7XG5cdFx0Ly8gcHJpdmF0ZSBzdHVmZlxuXHRcdF9hY2NlcHRlZERlcGVuZGVuY2llczoge30sXG5cdFx0X2FjY2VwdGVkRXJyb3JIYW5kbGVyczoge30sXG5cdFx0X2RlY2xpbmVkRGVwZW5kZW5jaWVzOiB7fSxcblx0XHRfc2VsZkFjY2VwdGVkOiBmYWxzZSxcblx0XHRfc2VsZkRlY2xpbmVkOiBmYWxzZSxcblx0XHRfc2VsZkludmFsaWRhdGVkOiBmYWxzZSxcblx0XHRfZGlzcG9zZUhhbmRsZXJzOiBbXSxcblx0XHRfbWFpbjogX21haW4sXG5cdFx0X3JlcXVpcmVTZWxmOiBmdW5jdGlvbiAoKSB7XG5cdFx0XHRjdXJyZW50UGFyZW50cyA9IG1lLnBhcmVudHMuc2xpY2UoKTtcblx0XHRcdGN1cnJlbnRDaGlsZE1vZHVsZSA9IF9tYWluID8gdW5kZWZpbmVkIDogbW9kdWxlSWQ7XG5cdFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKTtcblx0XHR9LFxuXG5cdFx0Ly8gTW9kdWxlIEFQSVxuXHRcdGFjdGl2ZTogdHJ1ZSxcblx0XHRhY2NlcHQ6IGZ1bmN0aW9uIChkZXAsIGNhbGxiYWNrLCBlcnJvckhhbmRsZXIpIHtcblx0XHRcdGlmIChkZXAgPT09IHVuZGVmaW5lZCkgaG90Ll9zZWxmQWNjZXB0ZWQgPSB0cnVlO1xuXHRcdFx0ZWxzZSBpZiAodHlwZW9mIGRlcCA9PT0gXCJmdW5jdGlvblwiKSBob3QuX3NlbGZBY2NlcHRlZCA9IGRlcDtcblx0XHRcdGVsc2UgaWYgKHR5cGVvZiBkZXAgPT09IFwib2JqZWN0XCIgJiYgZGVwICE9PSBudWxsKSB7XG5cdFx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgZGVwLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdFx0aG90Ll9hY2NlcHRlZERlcGVuZGVuY2llc1tkZXBbaV1dID0gY2FsbGJhY2sgfHwgZnVuY3Rpb24gKCkge307XG5cdFx0XHRcdFx0aG90Ll9hY2NlcHRlZEVycm9ySGFuZGxlcnNbZGVwW2ldXSA9IGVycm9ySGFuZGxlcjtcblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0aG90Ll9hY2NlcHRlZERlcGVuZGVuY2llc1tkZXBdID0gY2FsbGJhY2sgfHwgZnVuY3Rpb24gKCkge307XG5cdFx0XHRcdGhvdC5fYWNjZXB0ZWRFcnJvckhhbmRsZXJzW2RlcF0gPSBlcnJvckhhbmRsZXI7XG5cdFx0XHR9XG5cdFx0fSxcblx0XHRkZWNsaW5lOiBmdW5jdGlvbiAoZGVwKSB7XG5cdFx0XHRpZiAoZGVwID09PSB1bmRlZmluZWQpIGhvdC5fc2VsZkRlY2xpbmVkID0gdHJ1ZTtcblx0XHRcdGVsc2UgaWYgKHR5cGVvZiBkZXAgPT09IFwib2JqZWN0XCIgJiYgZGVwICE9PSBudWxsKVxuXHRcdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGRlcC5sZW5ndGg7IGkrKylcblx0XHRcdFx0XHRob3QuX2RlY2xpbmVkRGVwZW5kZW5jaWVzW2RlcFtpXV0gPSB0cnVlO1xuXHRcdFx0ZWxzZSBob3QuX2RlY2xpbmVkRGVwZW5kZW5jaWVzW2RlcF0gPSB0cnVlO1xuXHRcdH0sXG5cdFx0ZGlzcG9zZTogZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG5cdFx0XHRob3QuX2Rpc3Bvc2VIYW5kbGVycy5wdXNoKGNhbGxiYWNrKTtcblx0XHR9LFxuXHRcdGFkZERpc3Bvc2VIYW5kbGVyOiBmdW5jdGlvbiAoY2FsbGJhY2spIHtcblx0XHRcdGhvdC5fZGlzcG9zZUhhbmRsZXJzLnB1c2goY2FsbGJhY2spO1xuXHRcdH0sXG5cdFx0cmVtb3ZlRGlzcG9zZUhhbmRsZXI6IGZ1bmN0aW9uIChjYWxsYmFjaykge1xuXHRcdFx0dmFyIGlkeCA9IGhvdC5fZGlzcG9zZUhhbmRsZXJzLmluZGV4T2YoY2FsbGJhY2spO1xuXHRcdFx0aWYgKGlkeCA+PSAwKSBob3QuX2Rpc3Bvc2VIYW5kbGVycy5zcGxpY2UoaWR4LCAxKTtcblx0XHR9LFxuXHRcdGludmFsaWRhdGU6IGZ1bmN0aW9uICgpIHtcblx0XHRcdHRoaXMuX3NlbGZJbnZhbGlkYXRlZCA9IHRydWU7XG5cdFx0XHRzd2l0Y2ggKGN1cnJlbnRTdGF0dXMpIHtcblx0XHRcdFx0Y2FzZSBcImlkbGVcIjpcblx0XHRcdFx0XHRjdXJyZW50VXBkYXRlQXBwbHlIYW5kbGVycyA9IFtdO1xuXHRcdFx0XHRcdE9iamVjdC5rZXlzKF9fd2VicGFja19yZXF1aXJlX18uaG1ySSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG5cdFx0XHRcdFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmhtcklba2V5XShcblx0XHRcdFx0XHRcdFx0bW9kdWxlSWQsXG5cdFx0XHRcdFx0XHRcdGN1cnJlbnRVcGRhdGVBcHBseUhhbmRsZXJzXG5cdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdHNldFN0YXR1cyhcInJlYWR5XCIpO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRjYXNlIFwicmVhZHlcIjpcblx0XHRcdFx0XHRPYmplY3Qua2V5cyhfX3dlYnBhY2tfcmVxdWlyZV9fLmhtckkpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuXHRcdFx0XHRcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5obXJJW2tleV0oXG5cdFx0XHRcdFx0XHRcdG1vZHVsZUlkLFxuXHRcdFx0XHRcdFx0XHRjdXJyZW50VXBkYXRlQXBwbHlIYW5kbGVyc1xuXHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0Y2FzZSBcInByZXBhcmVcIjpcblx0XHRcdFx0Y2FzZSBcImNoZWNrXCI6XG5cdFx0XHRcdGNhc2UgXCJkaXNwb3NlXCI6XG5cdFx0XHRcdGNhc2UgXCJhcHBseVwiOlxuXHRcdFx0XHRcdChxdWV1ZWRJbnZhbGlkYXRlZE1vZHVsZXMgPSBxdWV1ZWRJbnZhbGlkYXRlZE1vZHVsZXMgfHwgW10pLnB1c2goXG5cdFx0XHRcdFx0XHRtb2R1bGVJZFxuXHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdFx0Ly8gaWdub3JlIHJlcXVlc3RzIGluIGVycm9yIHN0YXRlc1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0fVxuXHRcdH0sXG5cblx0XHQvLyBNYW5hZ2VtZW50IEFQSVxuXHRcdGNoZWNrOiBob3RDaGVjayxcblx0XHRhcHBseTogaG90QXBwbHksXG5cdFx0c3RhdHVzOiBmdW5jdGlvbiAobCkge1xuXHRcdFx0aWYgKCFsKSByZXR1cm4gY3VycmVudFN0YXR1cztcblx0XHRcdHJlZ2lzdGVyZWRTdGF0dXNIYW5kbGVycy5wdXNoKGwpO1xuXHRcdH0sXG5cdFx0YWRkU3RhdHVzSGFuZGxlcjogZnVuY3Rpb24gKGwpIHtcblx0XHRcdHJlZ2lzdGVyZWRTdGF0dXNIYW5kbGVycy5wdXNoKGwpO1xuXHRcdH0sXG5cdFx0cmVtb3ZlU3RhdHVzSGFuZGxlcjogZnVuY3Rpb24gKGwpIHtcblx0XHRcdHZhciBpZHggPSByZWdpc3RlcmVkU3RhdHVzSGFuZGxlcnMuaW5kZXhPZihsKTtcblx0XHRcdGlmIChpZHggPj0gMCkgcmVnaXN0ZXJlZFN0YXR1c0hhbmRsZXJzLnNwbGljZShpZHgsIDEpO1xuXHRcdH0sXG5cblx0XHQvL2luaGVyaXQgZnJvbSBwcmV2aW91cyBkaXNwb3NlIGNhbGxcblx0XHRkYXRhOiBjdXJyZW50TW9kdWxlRGF0YVttb2R1bGVJZF1cblx0fTtcblx0Y3VycmVudENoaWxkTW9kdWxlID0gdW5kZWZpbmVkO1xuXHRyZXR1cm4gaG90O1xufVxuXG5mdW5jdGlvbiBzZXRTdGF0dXMobmV3U3RhdHVzKSB7XG5cdGN1cnJlbnRTdGF0dXMgPSBuZXdTdGF0dXM7XG5cdHZhciByZXN1bHRzID0gW107XG5cblx0Zm9yICh2YXIgaSA9IDA7IGkgPCByZWdpc3RlcmVkU3RhdHVzSGFuZGxlcnMubGVuZ3RoOyBpKyspXG5cdFx0cmVzdWx0c1tpXSA9IHJlZ2lzdGVyZWRTdGF0dXNIYW5kbGVyc1tpXS5jYWxsKG51bGwsIG5ld1N0YXR1cyk7XG5cblx0cmV0dXJuIFByb21pc2UuYWxsKHJlc3VsdHMpO1xufVxuXG5mdW5jdGlvbiB1bmJsb2NrKCkge1xuXHRpZiAoLS1ibG9ja2luZ1Byb21pc2VzID09PSAwKSB7XG5cdFx0c2V0U3RhdHVzKFwicmVhZHlcIikudGhlbihmdW5jdGlvbiAoKSB7XG5cdFx0XHRpZiAoYmxvY2tpbmdQcm9taXNlcyA9PT0gMCkge1xuXHRcdFx0XHR2YXIgbGlzdCA9IGJsb2NraW5nUHJvbWlzZXNXYWl0aW5nO1xuXHRcdFx0XHRibG9ja2luZ1Byb21pc2VzV2FpdGluZyA9IFtdO1xuXHRcdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0XHRsaXN0W2ldKCk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9KTtcblx0fVxufVxuXG5mdW5jdGlvbiB0cmFja0Jsb2NraW5nUHJvbWlzZShwcm9taXNlKSB7XG5cdHN3aXRjaCAoY3VycmVudFN0YXR1cykge1xuXHRcdGNhc2UgXCJyZWFkeVwiOlxuXHRcdFx0c2V0U3RhdHVzKFwicHJlcGFyZVwiKTtcblx0XHQvKiBmYWxsdGhyb3VnaCAqL1xuXHRcdGNhc2UgXCJwcmVwYXJlXCI6XG5cdFx0XHRibG9ja2luZ1Byb21pc2VzKys7XG5cdFx0XHRwcm9taXNlLnRoZW4odW5ibG9jaywgdW5ibG9jayk7XG5cdFx0XHRyZXR1cm4gcHJvbWlzZTtcblx0XHRkZWZhdWx0OlxuXHRcdFx0cmV0dXJuIHByb21pc2U7XG5cdH1cbn1cblxuZnVuY3Rpb24gd2FpdEZvckJsb2NraW5nUHJvbWlzZXMoZm4pIHtcblx0aWYgKGJsb2NraW5nUHJvbWlzZXMgPT09IDApIHJldHVybiBmbigpO1xuXHRyZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHtcblx0XHRibG9ja2luZ1Byb21pc2VzV2FpdGluZy5wdXNoKGZ1bmN0aW9uICgpIHtcblx0XHRcdHJlc29sdmUoZm4oKSk7XG5cdFx0fSk7XG5cdH0pO1xufVxuXG5mdW5jdGlvbiBob3RDaGVjayhhcHBseU9uVXBkYXRlKSB7XG5cdGlmIChjdXJyZW50U3RhdHVzICE9PSBcImlkbGVcIikge1xuXHRcdHRocm93IG5ldyBFcnJvcihcImNoZWNrKCkgaXMgb25seSBhbGxvd2VkIGluIGlkbGUgc3RhdHVzXCIpO1xuXHR9XG5cdHJldHVybiBzZXRTdGF0dXMoXCJjaGVja1wiKVxuXHRcdC50aGVuKF9fd2VicGFja19yZXF1aXJlX18uaG1yTSlcblx0XHQudGhlbihmdW5jdGlvbiAodXBkYXRlKSB7XG5cdFx0XHRpZiAoIXVwZGF0ZSkge1xuXHRcdFx0XHRyZXR1cm4gc2V0U3RhdHVzKGFwcGx5SW52YWxpZGF0ZWRNb2R1bGVzKCkgPyBcInJlYWR5XCIgOiBcImlkbGVcIikudGhlbihcblx0XHRcdFx0XHRmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gbnVsbDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdCk7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBzZXRTdGF0dXMoXCJwcmVwYXJlXCIpLnRoZW4oZnVuY3Rpb24gKCkge1xuXHRcdFx0XHR2YXIgdXBkYXRlZE1vZHVsZXMgPSBbXTtcblx0XHRcdFx0Y3VycmVudFVwZGF0ZUFwcGx5SGFuZGxlcnMgPSBbXTtcblxuXHRcdFx0XHRyZXR1cm4gUHJvbWlzZS5hbGwoXG5cdFx0XHRcdFx0T2JqZWN0LmtleXMoX193ZWJwYWNrX3JlcXVpcmVfXy5obXJDKS5yZWR1Y2UoZnVuY3Rpb24gKFxuXHRcdFx0XHRcdFx0cHJvbWlzZXMsXG5cdFx0XHRcdFx0XHRrZXlcblx0XHRcdFx0XHQpIHtcblx0XHRcdFx0XHRcdF9fd2VicGFja19yZXF1aXJlX18uaG1yQ1trZXldKFxuXHRcdFx0XHRcdFx0XHR1cGRhdGUuYyxcblx0XHRcdFx0XHRcdFx0dXBkYXRlLnIsXG5cdFx0XHRcdFx0XHRcdHVwZGF0ZS5tLFxuXHRcdFx0XHRcdFx0XHRwcm9taXNlcyxcblx0XHRcdFx0XHRcdFx0Y3VycmVudFVwZGF0ZUFwcGx5SGFuZGxlcnMsXG5cdFx0XHRcdFx0XHRcdHVwZGF0ZWRNb2R1bGVzXG5cdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0cmV0dXJuIHByb21pc2VzO1xuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0W10pXG5cdFx0XHRcdCkudGhlbihmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHdhaXRGb3JCbG9ja2luZ1Byb21pc2VzKGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0XHRcdGlmIChhcHBseU9uVXBkYXRlKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiBpbnRlcm5hbEFwcGx5KGFwcGx5T25VcGRhdGUpO1xuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHNldFN0YXR1cyhcInJlYWR5XCIpLnRoZW4oZnVuY3Rpb24gKCkge1xuXHRcdFx0XHRcdFx0XHRcdHJldHVybiB1cGRhdGVkTW9kdWxlcztcblx0XHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdH0pO1xuXHRcdFx0fSk7XG5cdFx0fSk7XG59XG5cbmZ1bmN0aW9uIGhvdEFwcGx5KG9wdGlvbnMpIHtcblx0aWYgKGN1cnJlbnRTdGF0dXMgIT09IFwicmVhZHlcIikge1xuXHRcdHJldHVybiBQcm9taXNlLnJlc29sdmUoKS50aGVuKGZ1bmN0aW9uICgpIHtcblx0XHRcdHRocm93IG5ldyBFcnJvcihcblx0XHRcdFx0XCJhcHBseSgpIGlzIG9ubHkgYWxsb3dlZCBpbiByZWFkeSBzdGF0dXMgKHN0YXRlOiBcIiArXG5cdFx0XHRcdFx0Y3VycmVudFN0YXR1cyArXG5cdFx0XHRcdFx0XCIpXCJcblx0XHRcdCk7XG5cdFx0fSk7XG5cdH1cblx0cmV0dXJuIGludGVybmFsQXBwbHkob3B0aW9ucyk7XG59XG5cbmZ1bmN0aW9uIGludGVybmFsQXBwbHkob3B0aW9ucykge1xuXHRvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblxuXHRhcHBseUludmFsaWRhdGVkTW9kdWxlcygpO1xuXG5cdHZhciByZXN1bHRzID0gY3VycmVudFVwZGF0ZUFwcGx5SGFuZGxlcnMubWFwKGZ1bmN0aW9uIChoYW5kbGVyKSB7XG5cdFx0cmV0dXJuIGhhbmRsZXIob3B0aW9ucyk7XG5cdH0pO1xuXHRjdXJyZW50VXBkYXRlQXBwbHlIYW5kbGVycyA9IHVuZGVmaW5lZDtcblxuXHR2YXIgZXJyb3JzID0gcmVzdWx0c1xuXHRcdC5tYXAoZnVuY3Rpb24gKHIpIHtcblx0XHRcdHJldHVybiByLmVycm9yO1xuXHRcdH0pXG5cdFx0LmZpbHRlcihCb29sZWFuKTtcblxuXHRpZiAoZXJyb3JzLmxlbmd0aCA+IDApIHtcblx0XHRyZXR1cm4gc2V0U3RhdHVzKFwiYWJvcnRcIikudGhlbihmdW5jdGlvbiAoKSB7XG5cdFx0XHR0aHJvdyBlcnJvcnNbMF07XG5cdFx0fSk7XG5cdH1cblxuXHQvLyBOb3cgaW4gXCJkaXNwb3NlXCIgcGhhc2Vcblx0dmFyIGRpc3Bvc2VQcm9taXNlID0gc2V0U3RhdHVzKFwiZGlzcG9zZVwiKTtcblxuXHRyZXN1bHRzLmZvckVhY2goZnVuY3Rpb24gKHJlc3VsdCkge1xuXHRcdGlmIChyZXN1bHQuZGlzcG9zZSkgcmVzdWx0LmRpc3Bvc2UoKTtcblx0fSk7XG5cblx0Ly8gTm93IGluIFwiYXBwbHlcIiBwaGFzZVxuXHR2YXIgYXBwbHlQcm9taXNlID0gc2V0U3RhdHVzKFwiYXBwbHlcIik7XG5cblx0dmFyIGVycm9yO1xuXHR2YXIgcmVwb3J0RXJyb3IgPSBmdW5jdGlvbiAoZXJyKSB7XG5cdFx0aWYgKCFlcnJvcikgZXJyb3IgPSBlcnI7XG5cdH07XG5cblx0dmFyIG91dGRhdGVkTW9kdWxlcyA9IFtdO1xuXHRyZXN1bHRzLmZvckVhY2goZnVuY3Rpb24gKHJlc3VsdCkge1xuXHRcdGlmIChyZXN1bHQuYXBwbHkpIHtcblx0XHRcdHZhciBtb2R1bGVzID0gcmVzdWx0LmFwcGx5KHJlcG9ydEVycm9yKTtcblx0XHRcdGlmIChtb2R1bGVzKSB7XG5cdFx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgbW9kdWxlcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRcdG91dGRhdGVkTW9kdWxlcy5wdXNoKG1vZHVsZXNbaV0pO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9KTtcblxuXHRyZXR1cm4gUHJvbWlzZS5hbGwoW2Rpc3Bvc2VQcm9taXNlLCBhcHBseVByb21pc2VdKS50aGVuKGZ1bmN0aW9uICgpIHtcblx0XHQvLyBoYW5kbGUgZXJyb3JzIGluIGFjY2VwdCBoYW5kbGVycyBhbmQgc2VsZiBhY2NlcHRlZCBtb2R1bGUgbG9hZFxuXHRcdGlmIChlcnJvcikge1xuXHRcdFx0cmV0dXJuIHNldFN0YXR1cyhcImZhaWxcIikudGhlbihmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdHRocm93IGVycm9yO1xuXHRcdFx0fSk7XG5cdFx0fVxuXG5cdFx0aWYgKHF1ZXVlZEludmFsaWRhdGVkTW9kdWxlcykge1xuXHRcdFx0cmV0dXJuIGludGVybmFsQXBwbHkob3B0aW9ucykudGhlbihmdW5jdGlvbiAobGlzdCkge1xuXHRcdFx0XHRvdXRkYXRlZE1vZHVsZXMuZm9yRWFjaChmdW5jdGlvbiAobW9kdWxlSWQpIHtcblx0XHRcdFx0XHRpZiAobGlzdC5pbmRleE9mKG1vZHVsZUlkKSA8IDApIGxpc3QucHVzaChtb2R1bGVJZCk7XG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRyZXR1cm4gbGlzdDtcblx0XHRcdH0pO1xuXHRcdH1cblxuXHRcdHJldHVybiBzZXRTdGF0dXMoXCJpZGxlXCIpLnRoZW4oZnVuY3Rpb24gKCkge1xuXHRcdFx0cmV0dXJuIG91dGRhdGVkTW9kdWxlcztcblx0XHR9KTtcblx0fSk7XG59XG5cbmZ1bmN0aW9uIGFwcGx5SW52YWxpZGF0ZWRNb2R1bGVzKCkge1xuXHRpZiAocXVldWVkSW52YWxpZGF0ZWRNb2R1bGVzKSB7XG5cdFx0aWYgKCFjdXJyZW50VXBkYXRlQXBwbHlIYW5kbGVycykgY3VycmVudFVwZGF0ZUFwcGx5SGFuZGxlcnMgPSBbXTtcblx0XHRPYmplY3Qua2V5cyhfX3dlYnBhY2tfcmVxdWlyZV9fLmhtckkpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuXHRcdFx0cXVldWVkSW52YWxpZGF0ZWRNb2R1bGVzLmZvckVhY2goZnVuY3Rpb24gKG1vZHVsZUlkKSB7XG5cdFx0XHRcdF9fd2VicGFja19yZXF1aXJlX18uaG1ySVtrZXldKFxuXHRcdFx0XHRcdG1vZHVsZUlkLFxuXHRcdFx0XHRcdGN1cnJlbnRVcGRhdGVBcHBseUhhbmRsZXJzXG5cdFx0XHRcdCk7XG5cdFx0XHR9KTtcblx0XHR9KTtcblx0XHRxdWV1ZWRJbnZhbGlkYXRlZE1vZHVsZXMgPSB1bmRlZmluZWQ7XG5cdFx0cmV0dXJuIHRydWU7XG5cdH1cbn0iLCJ2YXIgc2NyaXB0VXJsO1xuaWYgKF9fd2VicGFja19yZXF1aXJlX18uZy5pbXBvcnRTY3JpcHRzKSBzY3JpcHRVcmwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcubG9jYXRpb24gKyBcIlwiO1xudmFyIGRvY3VtZW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmRvY3VtZW50O1xuaWYgKCFzY3JpcHRVcmwgJiYgZG9jdW1lbnQpIHtcblx0aWYgKGRvY3VtZW50LmN1cnJlbnRTY3JpcHQpXG5cdFx0c2NyaXB0VXJsID0gZG9jdW1lbnQuY3VycmVudFNjcmlwdC5zcmNcblx0aWYgKCFzY3JpcHRVcmwpIHtcblx0XHR2YXIgc2NyaXB0cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpO1xuXHRcdGlmKHNjcmlwdHMubGVuZ3RoKSBzY3JpcHRVcmwgPSBzY3JpcHRzW3NjcmlwdHMubGVuZ3RoIC0gMV0uc3JjXG5cdH1cbn1cbi8vIFdoZW4gc3VwcG9ydGluZyBicm93c2VycyB3aGVyZSBhbiBhdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIHlvdSBtdXN0IHNwZWNpZnkgYW4gb3V0cHV0LnB1YmxpY1BhdGggbWFudWFsbHkgdmlhIGNvbmZpZ3VyYXRpb25cbi8vIG9yIHBhc3MgYW4gZW1wdHkgc3RyaW5nIChcIlwiKSBhbmQgc2V0IHRoZSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyB2YXJpYWJsZSBmcm9tIHlvdXIgY29kZSB0byB1c2UgeW91ciBvd24gbG9naWMuXG5pZiAoIXNjcmlwdFVybCkgdGhyb3cgbmV3IEVycm9yKFwiQXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCBpbiB0aGlzIGJyb3dzZXJcIik7XG5zY3JpcHRVcmwgPSBzY3JpcHRVcmwucmVwbGFjZSgvIy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcPy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcL1teXFwvXSskLywgXCIvXCIpO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gc2NyaXB0VXJsOyIsIi8vIG5vIGJhc2VVUklcblxuLy8gb2JqZWN0IHRvIHN0b3JlIGxvYWRlZCBhbmQgbG9hZGluZyBjaHVua3Ncbi8vIHVuZGVmaW5lZCA9IGNodW5rIG5vdCBsb2FkZWQsIG51bGwgPSBjaHVuayBwcmVsb2FkZWQvcHJlZmV0Y2hlZFxuLy8gW3Jlc29sdmUsIHJlamVjdCwgUHJvbWlzZV0gPSBjaHVuayBsb2FkaW5nLCAwID0gY2h1bmsgbG9hZGVkXG52YXIgaW5zdGFsbGVkQ2h1bmtzID0gX193ZWJwYWNrX3JlcXVpcmVfXy5obXJTX2pzb25wID0gX193ZWJwYWNrX3JlcXVpcmVfXy5obXJTX2pzb25wIHx8IHtcblx0MTc5OiAwXG59O1xuXG4vLyBubyBjaHVuayBvbiBkZW1hbmQgbG9hZGluZ1xuXG4vLyBubyBwcmVmZXRjaGluZ1xuXG4vLyBubyBwcmVsb2FkZWRcblxudmFyIGN1cnJlbnRVcGRhdGVkTW9kdWxlc0xpc3Q7XG52YXIgd2FpdGluZ1VwZGF0ZVJlc29sdmVzID0ge307XG5mdW5jdGlvbiBsb2FkVXBkYXRlQ2h1bmsoY2h1bmtJZCwgdXBkYXRlZE1vZHVsZXNMaXN0KSB7XG5cdGN1cnJlbnRVcGRhdGVkTW9kdWxlc0xpc3QgPSB1cGRhdGVkTW9kdWxlc0xpc3Q7XG5cdHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG5cdFx0d2FpdGluZ1VwZGF0ZVJlc29sdmVzW2NodW5rSWRdID0gcmVzb2x2ZTtcblx0XHQvLyBzdGFydCB1cGRhdGUgY2h1bmsgbG9hZGluZ1xuXHRcdHZhciB1cmwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLnAgKyBfX3dlYnBhY2tfcmVxdWlyZV9fLmh1KGNodW5rSWQpO1xuXHRcdC8vIGNyZWF0ZSBlcnJvciBiZWZvcmUgc3RhY2sgdW53b3VuZCB0byBnZXQgdXNlZnVsIHN0YWNrdHJhY2UgbGF0ZXJcblx0XHR2YXIgZXJyb3IgPSBuZXcgRXJyb3IoKTtcblx0XHR2YXIgbG9hZGluZ0VuZGVkID0gKGV2ZW50KSA9PiB7XG5cdFx0XHRpZih3YWl0aW5nVXBkYXRlUmVzb2x2ZXNbY2h1bmtJZF0pIHtcblx0XHRcdFx0d2FpdGluZ1VwZGF0ZVJlc29sdmVzW2NodW5rSWRdID0gdW5kZWZpbmVkXG5cdFx0XHRcdHZhciBlcnJvclR5cGUgPSBldmVudCAmJiAoZXZlbnQudHlwZSA9PT0gJ2xvYWQnID8gJ21pc3NpbmcnIDogZXZlbnQudHlwZSk7XG5cdFx0XHRcdHZhciByZWFsU3JjID0gZXZlbnQgJiYgZXZlbnQudGFyZ2V0ICYmIGV2ZW50LnRhcmdldC5zcmM7XG5cdFx0XHRcdGVycm9yLm1lc3NhZ2UgPSAnTG9hZGluZyBob3QgdXBkYXRlIGNodW5rICcgKyBjaHVua0lkICsgJyBmYWlsZWQuXFxuKCcgKyBlcnJvclR5cGUgKyAnOiAnICsgcmVhbFNyYyArICcpJztcblx0XHRcdFx0ZXJyb3IubmFtZSA9ICdDaHVua0xvYWRFcnJvcic7XG5cdFx0XHRcdGVycm9yLnR5cGUgPSBlcnJvclR5cGU7XG5cdFx0XHRcdGVycm9yLnJlcXVlc3QgPSByZWFsU3JjO1xuXHRcdFx0XHRyZWplY3QoZXJyb3IpO1xuXHRcdFx0fVxuXHRcdH07XG5cdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5sKHVybCwgbG9hZGluZ0VuZGVkKTtcblx0fSk7XG59XG5cbnNlbGZbXCJ3ZWJwYWNrSG90VXBkYXRldmlydHVhbF9rZXlib2FyZFwiXSA9IChjaHVua0lkLCBtb3JlTW9kdWxlcywgcnVudGltZSkgPT4ge1xuXHRmb3IodmFyIG1vZHVsZUlkIGluIG1vcmVNb2R1bGVzKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKG1vcmVNb2R1bGVzLCBtb2R1bGVJZCkpIHtcblx0XHRcdGN1cnJlbnRVcGRhdGVbbW9kdWxlSWRdID0gbW9yZU1vZHVsZXNbbW9kdWxlSWRdO1xuXHRcdFx0aWYoY3VycmVudFVwZGF0ZWRNb2R1bGVzTGlzdCkgY3VycmVudFVwZGF0ZWRNb2R1bGVzTGlzdC5wdXNoKG1vZHVsZUlkKTtcblx0XHR9XG5cdH1cblx0aWYocnVudGltZSkgY3VycmVudFVwZGF0ZVJ1bnRpbWUucHVzaChydW50aW1lKTtcblx0aWYod2FpdGluZ1VwZGF0ZVJlc29sdmVzW2NodW5rSWRdKSB7XG5cdFx0d2FpdGluZ1VwZGF0ZVJlc29sdmVzW2NodW5rSWRdKCk7XG5cdFx0d2FpdGluZ1VwZGF0ZVJlc29sdmVzW2NodW5rSWRdID0gdW5kZWZpbmVkO1xuXHR9XG59O1xuXG52YXIgY3VycmVudFVwZGF0ZUNodW5rcztcbnZhciBjdXJyZW50VXBkYXRlO1xudmFyIGN1cnJlbnRVcGRhdGVSZW1vdmVkQ2h1bmtzO1xudmFyIGN1cnJlbnRVcGRhdGVSdW50aW1lO1xuZnVuY3Rpb24gYXBwbHlIYW5kbGVyKG9wdGlvbnMpIHtcblx0aWYgKF9fd2VicGFja19yZXF1aXJlX18uZikgZGVsZXRlIF9fd2VicGFja19yZXF1aXJlX18uZi5qc29ucEhtcjtcblx0Y3VycmVudFVwZGF0ZUNodW5rcyA9IHVuZGVmaW5lZDtcblx0ZnVuY3Rpb24gZ2V0QWZmZWN0ZWRNb2R1bGVFZmZlY3RzKHVwZGF0ZU1vZHVsZUlkKSB7XG5cdFx0dmFyIG91dGRhdGVkTW9kdWxlcyA9IFt1cGRhdGVNb2R1bGVJZF07XG5cdFx0dmFyIG91dGRhdGVkRGVwZW5kZW5jaWVzID0ge307XG5cblx0XHR2YXIgcXVldWUgPSBvdXRkYXRlZE1vZHVsZXMubWFwKGZ1bmN0aW9uIChpZCkge1xuXHRcdFx0cmV0dXJuIHtcblx0XHRcdFx0Y2hhaW46IFtpZF0sXG5cdFx0XHRcdGlkOiBpZFxuXHRcdFx0fTtcblx0XHR9KTtcblx0XHR3aGlsZSAocXVldWUubGVuZ3RoID4gMCkge1xuXHRcdFx0dmFyIHF1ZXVlSXRlbSA9IHF1ZXVlLnBvcCgpO1xuXHRcdFx0dmFyIG1vZHVsZUlkID0gcXVldWVJdGVtLmlkO1xuXHRcdFx0dmFyIGNoYWluID0gcXVldWVJdGVtLmNoYWluO1xuXHRcdFx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19yZXF1aXJlX18uY1ttb2R1bGVJZF07XG5cdFx0XHRpZiAoXG5cdFx0XHRcdCFtb2R1bGUgfHxcblx0XHRcdFx0KG1vZHVsZS5ob3QuX3NlbGZBY2NlcHRlZCAmJiAhbW9kdWxlLmhvdC5fc2VsZkludmFsaWRhdGVkKVxuXHRcdFx0KVxuXHRcdFx0XHRjb250aW51ZTtcblx0XHRcdGlmIChtb2R1bGUuaG90Ll9zZWxmRGVjbGluZWQpIHtcblx0XHRcdFx0cmV0dXJuIHtcblx0XHRcdFx0XHR0eXBlOiBcInNlbGYtZGVjbGluZWRcIixcblx0XHRcdFx0XHRjaGFpbjogY2hhaW4sXG5cdFx0XHRcdFx0bW9kdWxlSWQ6IG1vZHVsZUlkXG5cdFx0XHRcdH07XG5cdFx0XHR9XG5cdFx0XHRpZiAobW9kdWxlLmhvdC5fbWFpbikge1xuXHRcdFx0XHRyZXR1cm4ge1xuXHRcdFx0XHRcdHR5cGU6IFwidW5hY2NlcHRlZFwiLFxuXHRcdFx0XHRcdGNoYWluOiBjaGFpbixcblx0XHRcdFx0XHRtb2R1bGVJZDogbW9kdWxlSWRcblx0XHRcdFx0fTtcblx0XHRcdH1cblx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgbW9kdWxlLnBhcmVudHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0dmFyIHBhcmVudElkID0gbW9kdWxlLnBhcmVudHNbaV07XG5cdFx0XHRcdHZhciBwYXJlbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmNbcGFyZW50SWRdO1xuXHRcdFx0XHRpZiAoIXBhcmVudCkgY29udGludWU7XG5cdFx0XHRcdGlmIChwYXJlbnQuaG90Ll9kZWNsaW5lZERlcGVuZGVuY2llc1ttb2R1bGVJZF0pIHtcblx0XHRcdFx0XHRyZXR1cm4ge1xuXHRcdFx0XHRcdFx0dHlwZTogXCJkZWNsaW5lZFwiLFxuXHRcdFx0XHRcdFx0Y2hhaW46IGNoYWluLmNvbmNhdChbcGFyZW50SWRdKSxcblx0XHRcdFx0XHRcdG1vZHVsZUlkOiBtb2R1bGVJZCxcblx0XHRcdFx0XHRcdHBhcmVudElkOiBwYXJlbnRJZFxuXHRcdFx0XHRcdH07XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKG91dGRhdGVkTW9kdWxlcy5pbmRleE9mKHBhcmVudElkKSAhPT0gLTEpIGNvbnRpbnVlO1xuXHRcdFx0XHRpZiAocGFyZW50LmhvdC5fYWNjZXB0ZWREZXBlbmRlbmNpZXNbbW9kdWxlSWRdKSB7XG5cdFx0XHRcdFx0aWYgKCFvdXRkYXRlZERlcGVuZGVuY2llc1twYXJlbnRJZF0pXG5cdFx0XHRcdFx0XHRvdXRkYXRlZERlcGVuZGVuY2llc1twYXJlbnRJZF0gPSBbXTtcblx0XHRcdFx0XHRhZGRBbGxUb1NldChvdXRkYXRlZERlcGVuZGVuY2llc1twYXJlbnRJZF0sIFttb2R1bGVJZF0pO1xuXHRcdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGRlbGV0ZSBvdXRkYXRlZERlcGVuZGVuY2llc1twYXJlbnRJZF07XG5cdFx0XHRcdG91dGRhdGVkTW9kdWxlcy5wdXNoKHBhcmVudElkKTtcblx0XHRcdFx0cXVldWUucHVzaCh7XG5cdFx0XHRcdFx0Y2hhaW46IGNoYWluLmNvbmNhdChbcGFyZW50SWRdKSxcblx0XHRcdFx0XHRpZDogcGFyZW50SWRcblx0XHRcdFx0fSk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHtcblx0XHRcdHR5cGU6IFwiYWNjZXB0ZWRcIixcblx0XHRcdG1vZHVsZUlkOiB1cGRhdGVNb2R1bGVJZCxcblx0XHRcdG91dGRhdGVkTW9kdWxlczogb3V0ZGF0ZWRNb2R1bGVzLFxuXHRcdFx0b3V0ZGF0ZWREZXBlbmRlbmNpZXM6IG91dGRhdGVkRGVwZW5kZW5jaWVzXG5cdFx0fTtcblx0fVxuXG5cdGZ1bmN0aW9uIGFkZEFsbFRvU2V0KGEsIGIpIHtcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGIubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBpdGVtID0gYltpXTtcblx0XHRcdGlmIChhLmluZGV4T2YoaXRlbSkgPT09IC0xKSBhLnB1c2goaXRlbSk7XG5cdFx0fVxuXHR9XG5cblx0Ly8gYXQgYmVnaW4gYWxsIHVwZGF0ZXMgbW9kdWxlcyBhcmUgb3V0ZGF0ZWRcblx0Ly8gdGhlIFwib3V0ZGF0ZWRcIiBzdGF0dXMgY2FuIHByb3BhZ2F0ZSB0byBwYXJlbnRzIGlmIHRoZXkgZG9uJ3QgYWNjZXB0IHRoZSBjaGlsZHJlblxuXHR2YXIgb3V0ZGF0ZWREZXBlbmRlbmNpZXMgPSB7fTtcblx0dmFyIG91dGRhdGVkTW9kdWxlcyA9IFtdO1xuXHR2YXIgYXBwbGllZFVwZGF0ZSA9IHt9O1xuXG5cdHZhciB3YXJuVW5leHBlY3RlZFJlcXVpcmUgPSBmdW5jdGlvbiB3YXJuVW5leHBlY3RlZFJlcXVpcmUobW9kdWxlKSB7XG5cdFx0Y29uc29sZS53YXJuKFxuXHRcdFx0XCJbSE1SXSB1bmV4cGVjdGVkIHJlcXVpcmUoXCIgKyBtb2R1bGUuaWQgKyBcIikgdG8gZGlzcG9zZWQgbW9kdWxlXCJcblx0XHQpO1xuXHR9O1xuXG5cdGZvciAodmFyIG1vZHVsZUlkIGluIGN1cnJlbnRVcGRhdGUpIHtcblx0XHRpZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGN1cnJlbnRVcGRhdGUsIG1vZHVsZUlkKSkge1xuXHRcdFx0dmFyIG5ld01vZHVsZUZhY3RvcnkgPSBjdXJyZW50VXBkYXRlW21vZHVsZUlkXTtcblx0XHRcdC8qKiBAdHlwZSB7VE9ET30gKi9cblx0XHRcdHZhciByZXN1bHQ7XG5cdFx0XHRpZiAobmV3TW9kdWxlRmFjdG9yeSkge1xuXHRcdFx0XHRyZXN1bHQgPSBnZXRBZmZlY3RlZE1vZHVsZUVmZmVjdHMobW9kdWxlSWQpO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cmVzdWx0ID0ge1xuXHRcdFx0XHRcdHR5cGU6IFwiZGlzcG9zZWRcIixcblx0XHRcdFx0XHRtb2R1bGVJZDogbW9kdWxlSWRcblx0XHRcdFx0fTtcblx0XHRcdH1cblx0XHRcdC8qKiBAdHlwZSB7RXJyb3J8ZmFsc2V9ICovXG5cdFx0XHR2YXIgYWJvcnRFcnJvciA9IGZhbHNlO1xuXHRcdFx0dmFyIGRvQXBwbHkgPSBmYWxzZTtcblx0XHRcdHZhciBkb0Rpc3Bvc2UgPSBmYWxzZTtcblx0XHRcdHZhciBjaGFpbkluZm8gPSBcIlwiO1xuXHRcdFx0aWYgKHJlc3VsdC5jaGFpbikge1xuXHRcdFx0XHRjaGFpbkluZm8gPSBcIlxcblVwZGF0ZSBwcm9wYWdhdGlvbjogXCIgKyByZXN1bHQuY2hhaW4uam9pbihcIiAtPiBcIik7XG5cdFx0XHR9XG5cdFx0XHRzd2l0Y2ggKHJlc3VsdC50eXBlKSB7XG5cdFx0XHRcdGNhc2UgXCJzZWxmLWRlY2xpbmVkXCI6XG5cdFx0XHRcdFx0aWYgKG9wdGlvbnMub25EZWNsaW5lZCkgb3B0aW9ucy5vbkRlY2xpbmVkKHJlc3VsdCk7XG5cdFx0XHRcdFx0aWYgKCFvcHRpb25zLmlnbm9yZURlY2xpbmVkKVxuXHRcdFx0XHRcdFx0YWJvcnRFcnJvciA9IG5ldyBFcnJvcihcblx0XHRcdFx0XHRcdFx0XCJBYm9ydGVkIGJlY2F1c2Ugb2Ygc2VsZiBkZWNsaW5lOiBcIiArXG5cdFx0XHRcdFx0XHRcdFx0cmVzdWx0Lm1vZHVsZUlkICtcblx0XHRcdFx0XHRcdFx0XHRjaGFpbkluZm9cblx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGNhc2UgXCJkZWNsaW5lZFwiOlxuXHRcdFx0XHRcdGlmIChvcHRpb25zLm9uRGVjbGluZWQpIG9wdGlvbnMub25EZWNsaW5lZChyZXN1bHQpO1xuXHRcdFx0XHRcdGlmICghb3B0aW9ucy5pZ25vcmVEZWNsaW5lZClcblx0XHRcdFx0XHRcdGFib3J0RXJyb3IgPSBuZXcgRXJyb3IoXG5cdFx0XHRcdFx0XHRcdFwiQWJvcnRlZCBiZWNhdXNlIG9mIGRlY2xpbmVkIGRlcGVuZGVuY3k6IFwiICtcblx0XHRcdFx0XHRcdFx0XHRyZXN1bHQubW9kdWxlSWQgK1xuXHRcdFx0XHRcdFx0XHRcdFwiIGluIFwiICtcblx0XHRcdFx0XHRcdFx0XHRyZXN1bHQucGFyZW50SWQgK1xuXHRcdFx0XHRcdFx0XHRcdGNoYWluSW5mb1xuXHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0Y2FzZSBcInVuYWNjZXB0ZWRcIjpcblx0XHRcdFx0XHRpZiAob3B0aW9ucy5vblVuYWNjZXB0ZWQpIG9wdGlvbnMub25VbmFjY2VwdGVkKHJlc3VsdCk7XG5cdFx0XHRcdFx0aWYgKCFvcHRpb25zLmlnbm9yZVVuYWNjZXB0ZWQpXG5cdFx0XHRcdFx0XHRhYm9ydEVycm9yID0gbmV3IEVycm9yKFxuXHRcdFx0XHRcdFx0XHRcIkFib3J0ZWQgYmVjYXVzZSBcIiArIG1vZHVsZUlkICsgXCIgaXMgbm90IGFjY2VwdGVkXCIgKyBjaGFpbkluZm9cblx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGNhc2UgXCJhY2NlcHRlZFwiOlxuXHRcdFx0XHRcdGlmIChvcHRpb25zLm9uQWNjZXB0ZWQpIG9wdGlvbnMub25BY2NlcHRlZChyZXN1bHQpO1xuXHRcdFx0XHRcdGRvQXBwbHkgPSB0cnVlO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRjYXNlIFwiZGlzcG9zZWRcIjpcblx0XHRcdFx0XHRpZiAob3B0aW9ucy5vbkRpc3Bvc2VkKSBvcHRpb25zLm9uRGlzcG9zZWQocmVzdWx0KTtcblx0XHRcdFx0XHRkb0Rpc3Bvc2UgPSB0cnVlO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRkZWZhdWx0OlxuXHRcdFx0XHRcdHRocm93IG5ldyBFcnJvcihcIlVuZXhjZXB0aW9uIHR5cGUgXCIgKyByZXN1bHQudHlwZSk7XG5cdFx0XHR9XG5cdFx0XHRpZiAoYWJvcnRFcnJvcikge1xuXHRcdFx0XHRyZXR1cm4ge1xuXHRcdFx0XHRcdGVycm9yOiBhYm9ydEVycm9yXG5cdFx0XHRcdH07XG5cdFx0XHR9XG5cdFx0XHRpZiAoZG9BcHBseSkge1xuXHRcdFx0XHRhcHBsaWVkVXBkYXRlW21vZHVsZUlkXSA9IG5ld01vZHVsZUZhY3Rvcnk7XG5cdFx0XHRcdGFkZEFsbFRvU2V0KG91dGRhdGVkTW9kdWxlcywgcmVzdWx0Lm91dGRhdGVkTW9kdWxlcyk7XG5cdFx0XHRcdGZvciAobW9kdWxlSWQgaW4gcmVzdWx0Lm91dGRhdGVkRGVwZW5kZW5jaWVzKSB7XG5cdFx0XHRcdFx0aWYgKF9fd2VicGFja19yZXF1aXJlX18ubyhyZXN1bHQub3V0ZGF0ZWREZXBlbmRlbmNpZXMsIG1vZHVsZUlkKSkge1xuXHRcdFx0XHRcdFx0aWYgKCFvdXRkYXRlZERlcGVuZGVuY2llc1ttb2R1bGVJZF0pXG5cdFx0XHRcdFx0XHRcdG91dGRhdGVkRGVwZW5kZW5jaWVzW21vZHVsZUlkXSA9IFtdO1xuXHRcdFx0XHRcdFx0YWRkQWxsVG9TZXQoXG5cdFx0XHRcdFx0XHRcdG91dGRhdGVkRGVwZW5kZW5jaWVzW21vZHVsZUlkXSxcblx0XHRcdFx0XHRcdFx0cmVzdWx0Lm91dGRhdGVkRGVwZW5kZW5jaWVzW21vZHVsZUlkXVxuXHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdGlmIChkb0Rpc3Bvc2UpIHtcblx0XHRcdFx0YWRkQWxsVG9TZXQob3V0ZGF0ZWRNb2R1bGVzLCBbcmVzdWx0Lm1vZHVsZUlkXSk7XG5cdFx0XHRcdGFwcGxpZWRVcGRhdGVbbW9kdWxlSWRdID0gd2FyblVuZXhwZWN0ZWRSZXF1aXJlO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXHRjdXJyZW50VXBkYXRlID0gdW5kZWZpbmVkO1xuXG5cdC8vIFN0b3JlIHNlbGYgYWNjZXB0ZWQgb3V0ZGF0ZWQgbW9kdWxlcyB0byByZXF1aXJlIHRoZW0gbGF0ZXIgYnkgdGhlIG1vZHVsZSBzeXN0ZW1cblx0dmFyIG91dGRhdGVkU2VsZkFjY2VwdGVkTW9kdWxlcyA9IFtdO1xuXHRmb3IgKHZhciBqID0gMDsgaiA8IG91dGRhdGVkTW9kdWxlcy5sZW5ndGg7IGorKykge1xuXHRcdHZhciBvdXRkYXRlZE1vZHVsZUlkID0gb3V0ZGF0ZWRNb2R1bGVzW2pdO1xuXHRcdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmNbb3V0ZGF0ZWRNb2R1bGVJZF07XG5cdFx0aWYgKFxuXHRcdFx0bW9kdWxlICYmXG5cdFx0XHQobW9kdWxlLmhvdC5fc2VsZkFjY2VwdGVkIHx8IG1vZHVsZS5ob3QuX21haW4pICYmXG5cdFx0XHQvLyByZW1vdmVkIHNlbGYtYWNjZXB0ZWQgbW9kdWxlcyBzaG91bGQgbm90IGJlIHJlcXVpcmVkXG5cdFx0XHRhcHBsaWVkVXBkYXRlW291dGRhdGVkTW9kdWxlSWRdICE9PSB3YXJuVW5leHBlY3RlZFJlcXVpcmUgJiZcblx0XHRcdC8vIHdoZW4gY2FsbGVkIGludmFsaWRhdGUgc2VsZi1hY2NlcHRpbmcgaXMgbm90IHBvc3NpYmxlXG5cdFx0XHQhbW9kdWxlLmhvdC5fc2VsZkludmFsaWRhdGVkXG5cdFx0KSB7XG5cdFx0XHRvdXRkYXRlZFNlbGZBY2NlcHRlZE1vZHVsZXMucHVzaCh7XG5cdFx0XHRcdG1vZHVsZTogb3V0ZGF0ZWRNb2R1bGVJZCxcblx0XHRcdFx0cmVxdWlyZTogbW9kdWxlLmhvdC5fcmVxdWlyZVNlbGYsXG5cdFx0XHRcdGVycm9ySGFuZGxlcjogbW9kdWxlLmhvdC5fc2VsZkFjY2VwdGVkXG5cdFx0XHR9KTtcblx0XHR9XG5cdH1cblxuXHR2YXIgbW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXM7XG5cblx0cmV0dXJuIHtcblx0XHRkaXNwb3NlOiBmdW5jdGlvbiAoKSB7XG5cdFx0XHRjdXJyZW50VXBkYXRlUmVtb3ZlZENodW5rcy5mb3JFYWNoKGZ1bmN0aW9uIChjaHVua0lkKSB7XG5cdFx0XHRcdGRlbGV0ZSBpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF07XG5cdFx0XHR9KTtcblx0XHRcdGN1cnJlbnRVcGRhdGVSZW1vdmVkQ2h1bmtzID0gdW5kZWZpbmVkO1xuXG5cdFx0XHR2YXIgaWR4O1xuXHRcdFx0dmFyIHF1ZXVlID0gb3V0ZGF0ZWRNb2R1bGVzLnNsaWNlKCk7XG5cdFx0XHR3aGlsZSAocXVldWUubGVuZ3RoID4gMCkge1xuXHRcdFx0XHR2YXIgbW9kdWxlSWQgPSBxdWV1ZS5wb3AoKTtcblx0XHRcdFx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19yZXF1aXJlX18uY1ttb2R1bGVJZF07XG5cdFx0XHRcdGlmICghbW9kdWxlKSBjb250aW51ZTtcblxuXHRcdFx0XHR2YXIgZGF0YSA9IHt9O1xuXG5cdFx0XHRcdC8vIENhbGwgZGlzcG9zZSBoYW5kbGVyc1xuXHRcdFx0XHR2YXIgZGlzcG9zZUhhbmRsZXJzID0gbW9kdWxlLmhvdC5fZGlzcG9zZUhhbmRsZXJzO1xuXHRcdFx0XHRmb3IgKGogPSAwOyBqIDwgZGlzcG9zZUhhbmRsZXJzLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdFx0ZGlzcG9zZUhhbmRsZXJzW2pdLmNhbGwobnVsbCwgZGF0YSk7XG5cdFx0XHRcdH1cblx0XHRcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5obXJEW21vZHVsZUlkXSA9IGRhdGE7XG5cblx0XHRcdFx0Ly8gZGlzYWJsZSBtb2R1bGUgKHRoaXMgZGlzYWJsZXMgcmVxdWlyZXMgZnJvbSB0aGlzIG1vZHVsZSlcblx0XHRcdFx0bW9kdWxlLmhvdC5hY3RpdmUgPSBmYWxzZTtcblxuXHRcdFx0XHQvLyByZW1vdmUgbW9kdWxlIGZyb20gY2FjaGVcblx0XHRcdFx0ZGVsZXRlIF9fd2VicGFja19yZXF1aXJlX18uY1ttb2R1bGVJZF07XG5cblx0XHRcdFx0Ly8gd2hlbiBkaXNwb3NpbmcgdGhlcmUgaXMgbm8gbmVlZCB0byBjYWxsIGRpc3Bvc2UgaGFuZGxlclxuXHRcdFx0XHRkZWxldGUgb3V0ZGF0ZWREZXBlbmRlbmNpZXNbbW9kdWxlSWRdO1xuXG5cdFx0XHRcdC8vIHJlbW92ZSBcInBhcmVudHNcIiByZWZlcmVuY2VzIGZyb20gYWxsIGNoaWxkcmVuXG5cdFx0XHRcdGZvciAoaiA9IDA7IGogPCBtb2R1bGUuY2hpbGRyZW4ubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0XHR2YXIgY2hpbGQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmNbbW9kdWxlLmNoaWxkcmVuW2pdXTtcblx0XHRcdFx0XHRpZiAoIWNoaWxkKSBjb250aW51ZTtcblx0XHRcdFx0XHRpZHggPSBjaGlsZC5wYXJlbnRzLmluZGV4T2YobW9kdWxlSWQpO1xuXHRcdFx0XHRcdGlmIChpZHggPj0gMCkge1xuXHRcdFx0XHRcdFx0Y2hpbGQucGFyZW50cy5zcGxpY2UoaWR4LCAxKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gcmVtb3ZlIG91dGRhdGVkIGRlcGVuZGVuY3kgZnJvbSBtb2R1bGUgY2hpbGRyZW5cblx0XHRcdHZhciBkZXBlbmRlbmN5O1xuXHRcdFx0Zm9yICh2YXIgb3V0ZGF0ZWRNb2R1bGVJZCBpbiBvdXRkYXRlZERlcGVuZGVuY2llcykge1xuXHRcdFx0XHRpZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5vKG91dGRhdGVkRGVwZW5kZW5jaWVzLCBvdXRkYXRlZE1vZHVsZUlkKSkge1xuXHRcdFx0XHRcdG1vZHVsZSA9IF9fd2VicGFja19yZXF1aXJlX18uY1tvdXRkYXRlZE1vZHVsZUlkXTtcblx0XHRcdFx0XHRpZiAobW9kdWxlKSB7XG5cdFx0XHRcdFx0XHRtb2R1bGVPdXRkYXRlZERlcGVuZGVuY2llcyA9XG5cdFx0XHRcdFx0XHRcdG91dGRhdGVkRGVwZW5kZW5jaWVzW291dGRhdGVkTW9kdWxlSWRdO1xuXHRcdFx0XHRcdFx0Zm9yIChqID0gMDsgaiA8IG1vZHVsZU91dGRhdGVkRGVwZW5kZW5jaWVzLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdFx0XHRcdGRlcGVuZGVuY3kgPSBtb2R1bGVPdXRkYXRlZERlcGVuZGVuY2llc1tqXTtcblx0XHRcdFx0XHRcdFx0aWR4ID0gbW9kdWxlLmNoaWxkcmVuLmluZGV4T2YoZGVwZW5kZW5jeSk7XG5cdFx0XHRcdFx0XHRcdGlmIChpZHggPj0gMCkgbW9kdWxlLmNoaWxkcmVuLnNwbGljZShpZHgsIDEpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0sXG5cdFx0YXBwbHk6IGZ1bmN0aW9uIChyZXBvcnRFcnJvcikge1xuXHRcdFx0Ly8gaW5zZXJ0IG5ldyBjb2RlXG5cdFx0XHRmb3IgKHZhciB1cGRhdGVNb2R1bGVJZCBpbiBhcHBsaWVkVXBkYXRlKSB7XG5cdFx0XHRcdGlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLm8oYXBwbGllZFVwZGF0ZSwgdXBkYXRlTW9kdWxlSWQpKSB7XG5cdFx0XHRcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tW3VwZGF0ZU1vZHVsZUlkXSA9IGFwcGxpZWRVcGRhdGVbdXBkYXRlTW9kdWxlSWRdO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIHJ1biBuZXcgcnVudGltZSBtb2R1bGVzXG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGN1cnJlbnRVcGRhdGVSdW50aW1lLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdGN1cnJlbnRVcGRhdGVSdW50aW1lW2ldKF9fd2VicGFja19yZXF1aXJlX18pO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBjYWxsIGFjY2VwdCBoYW5kbGVyc1xuXHRcdFx0Zm9yICh2YXIgb3V0ZGF0ZWRNb2R1bGVJZCBpbiBvdXRkYXRlZERlcGVuZGVuY2llcykge1xuXHRcdFx0XHRpZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5vKG91dGRhdGVkRGVwZW5kZW5jaWVzLCBvdXRkYXRlZE1vZHVsZUlkKSkge1xuXHRcdFx0XHRcdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmNbb3V0ZGF0ZWRNb2R1bGVJZF07XG5cdFx0XHRcdFx0aWYgKG1vZHVsZSkge1xuXHRcdFx0XHRcdFx0bW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXMgPVxuXHRcdFx0XHRcdFx0XHRvdXRkYXRlZERlcGVuZGVuY2llc1tvdXRkYXRlZE1vZHVsZUlkXTtcblx0XHRcdFx0XHRcdHZhciBjYWxsYmFja3MgPSBbXTtcblx0XHRcdFx0XHRcdHZhciBlcnJvckhhbmRsZXJzID0gW107XG5cdFx0XHRcdFx0XHR2YXIgZGVwZW5kZW5jaWVzRm9yQ2FsbGJhY2tzID0gW107XG5cdFx0XHRcdFx0XHRmb3IgKHZhciBqID0gMDsgaiA8IG1vZHVsZU91dGRhdGVkRGVwZW5kZW5jaWVzLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdFx0XHRcdHZhciBkZXBlbmRlbmN5ID0gbW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXNbal07XG5cdFx0XHRcdFx0XHRcdHZhciBhY2NlcHRDYWxsYmFjayA9XG5cdFx0XHRcdFx0XHRcdFx0bW9kdWxlLmhvdC5fYWNjZXB0ZWREZXBlbmRlbmNpZXNbZGVwZW5kZW5jeV07XG5cdFx0XHRcdFx0XHRcdHZhciBlcnJvckhhbmRsZXIgPVxuXHRcdFx0XHRcdFx0XHRcdG1vZHVsZS5ob3QuX2FjY2VwdGVkRXJyb3JIYW5kbGVyc1tkZXBlbmRlbmN5XTtcblx0XHRcdFx0XHRcdFx0aWYgKGFjY2VwdENhbGxiYWNrKSB7XG5cdFx0XHRcdFx0XHRcdFx0aWYgKGNhbGxiYWNrcy5pbmRleE9mKGFjY2VwdENhbGxiYWNrKSAhPT0gLTEpIGNvbnRpbnVlO1xuXHRcdFx0XHRcdFx0XHRcdGNhbGxiYWNrcy5wdXNoKGFjY2VwdENhbGxiYWNrKTtcblx0XHRcdFx0XHRcdFx0XHRlcnJvckhhbmRsZXJzLnB1c2goZXJyb3JIYW5kbGVyKTtcblx0XHRcdFx0XHRcdFx0XHRkZXBlbmRlbmNpZXNGb3JDYWxsYmFja3MucHVzaChkZXBlbmRlbmN5KTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0Zm9yICh2YXIgayA9IDA7IGsgPCBjYWxsYmFja3MubGVuZ3RoOyBrKyspIHtcblx0XHRcdFx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHRcdFx0XHRjYWxsYmFja3Nba10uY2FsbChudWxsLCBtb2R1bGVPdXRkYXRlZERlcGVuZGVuY2llcyk7XG5cdFx0XHRcdFx0XHRcdH0gY2F0Y2ggKGVycikge1xuXHRcdFx0XHRcdFx0XHRcdGlmICh0eXBlb2YgZXJyb3JIYW5kbGVyc1trXSA9PT0gXCJmdW5jdGlvblwiKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRlcnJvckhhbmRsZXJzW2tdKGVyciwge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdG1vZHVsZUlkOiBvdXRkYXRlZE1vZHVsZUlkLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdGRlcGVuZGVuY3lJZDogZGVwZW5kZW5jaWVzRm9yQ2FsbGJhY2tzW2tdXG5cdFx0XHRcdFx0XHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdFx0XHRcdFx0fSBjYXRjaCAoZXJyMikge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRpZiAob3B0aW9ucy5vbkVycm9yZWQpIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRvcHRpb25zLm9uRXJyb3JlZCh7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHR0eXBlOiBcImFjY2VwdC1lcnJvci1oYW5kbGVyLWVycm9yZWRcIixcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdG1vZHVsZUlkOiBvdXRkYXRlZE1vZHVsZUlkLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0ZGVwZW5kZW5jeUlkOiBkZXBlbmRlbmNpZXNGb3JDYWxsYmFja3Nba10sXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRlcnJvcjogZXJyMixcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdG9yaWdpbmFsRXJyb3I6IGVyclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0XHRcdGlmICghb3B0aW9ucy5pZ25vcmVFcnJvcmVkKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0cmVwb3J0RXJyb3IoZXJyMik7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0cmVwb3J0RXJyb3IoZXJyKTtcblx0XHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRpZiAob3B0aW9ucy5vbkVycm9yZWQpIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0b3B0aW9ucy5vbkVycm9yZWQoe1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHR5cGU6IFwiYWNjZXB0LWVycm9yZWRcIixcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRtb2R1bGVJZDogb3V0ZGF0ZWRNb2R1bGVJZCxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRkZXBlbmRlbmN5SWQ6IGRlcGVuZGVuY2llc0ZvckNhbGxiYWNrc1trXSxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRlcnJvcjogZXJyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdFx0aWYgKCFvcHRpb25zLmlnbm9yZUVycm9yZWQpIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0cmVwb3J0RXJyb3IoZXJyKTtcblx0XHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gTG9hZCBzZWxmIGFjY2VwdGVkIG1vZHVsZXNcblx0XHRcdGZvciAodmFyIG8gPSAwOyBvIDwgb3V0ZGF0ZWRTZWxmQWNjZXB0ZWRNb2R1bGVzLmxlbmd0aDsgbysrKSB7XG5cdFx0XHRcdHZhciBpdGVtID0gb3V0ZGF0ZWRTZWxmQWNjZXB0ZWRNb2R1bGVzW29dO1xuXHRcdFx0XHR2YXIgbW9kdWxlSWQgPSBpdGVtLm1vZHVsZTtcblx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHRpdGVtLnJlcXVpcmUobW9kdWxlSWQpO1xuXHRcdFx0XHR9IGNhdGNoIChlcnIpIHtcblx0XHRcdFx0XHRpZiAodHlwZW9mIGl0ZW0uZXJyb3JIYW5kbGVyID09PSBcImZ1bmN0aW9uXCIpIHtcblx0XHRcdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0XHRcdGl0ZW0uZXJyb3JIYW5kbGVyKGVyciwge1xuXHRcdFx0XHRcdFx0XHRcdG1vZHVsZUlkOiBtb2R1bGVJZCxcblx0XHRcdFx0XHRcdFx0XHRtb2R1bGU6IF9fd2VicGFja19yZXF1aXJlX18uY1ttb2R1bGVJZF1cblx0XHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0XHR9IGNhdGNoIChlcnIyKSB7XG5cdFx0XHRcdFx0XHRcdGlmIChvcHRpb25zLm9uRXJyb3JlZCkge1xuXHRcdFx0XHRcdFx0XHRcdG9wdGlvbnMub25FcnJvcmVkKHtcblx0XHRcdFx0XHRcdFx0XHRcdHR5cGU6IFwic2VsZi1hY2NlcHQtZXJyb3ItaGFuZGxlci1lcnJvcmVkXCIsXG5cdFx0XHRcdFx0XHRcdFx0XHRtb2R1bGVJZDogbW9kdWxlSWQsXG5cdFx0XHRcdFx0XHRcdFx0XHRlcnJvcjogZXJyMixcblx0XHRcdFx0XHRcdFx0XHRcdG9yaWdpbmFsRXJyb3I6IGVyclxuXHRcdFx0XHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdGlmICghb3B0aW9ucy5pZ25vcmVFcnJvcmVkKSB7XG5cdFx0XHRcdFx0XHRcdFx0cmVwb3J0RXJyb3IoZXJyMik7XG5cdFx0XHRcdFx0XHRcdFx0cmVwb3J0RXJyb3IoZXJyKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRpZiAob3B0aW9ucy5vbkVycm9yZWQpIHtcblx0XHRcdFx0XHRcdFx0b3B0aW9ucy5vbkVycm9yZWQoe1xuXHRcdFx0XHRcdFx0XHRcdHR5cGU6IFwic2VsZi1hY2NlcHQtZXJyb3JlZFwiLFxuXHRcdFx0XHRcdFx0XHRcdG1vZHVsZUlkOiBtb2R1bGVJZCxcblx0XHRcdFx0XHRcdFx0XHRlcnJvcjogZXJyXG5cdFx0XHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0aWYgKCFvcHRpb25zLmlnbm9yZUVycm9yZWQpIHtcblx0XHRcdFx0XHRcdFx0cmVwb3J0RXJyb3IoZXJyKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIG91dGRhdGVkTW9kdWxlcztcblx0XHR9XG5cdH07XG59XG5fX3dlYnBhY2tfcmVxdWlyZV9fLmhtckkuanNvbnAgPSBmdW5jdGlvbiAobW9kdWxlSWQsIGFwcGx5SGFuZGxlcnMpIHtcblx0aWYgKCFjdXJyZW50VXBkYXRlKSB7XG5cdFx0Y3VycmVudFVwZGF0ZSA9IHt9O1xuXHRcdGN1cnJlbnRVcGRhdGVSdW50aW1lID0gW107XG5cdFx0Y3VycmVudFVwZGF0ZVJlbW92ZWRDaHVua3MgPSBbXTtcblx0XHRhcHBseUhhbmRsZXJzLnB1c2goYXBwbHlIYW5kbGVyKTtcblx0fVxuXHRpZiAoIV9fd2VicGFja19yZXF1aXJlX18ubyhjdXJyZW50VXBkYXRlLCBtb2R1bGVJZCkpIHtcblx0XHRjdXJyZW50VXBkYXRlW21vZHVsZUlkXSA9IF9fd2VicGFja19yZXF1aXJlX18ubVttb2R1bGVJZF07XG5cdH1cbn07XG5fX3dlYnBhY2tfcmVxdWlyZV9fLmhtckMuanNvbnAgPSBmdW5jdGlvbiAoXG5cdGNodW5rSWRzLFxuXHRyZW1vdmVkQ2h1bmtzLFxuXHRyZW1vdmVkTW9kdWxlcyxcblx0cHJvbWlzZXMsXG5cdGFwcGx5SGFuZGxlcnMsXG5cdHVwZGF0ZWRNb2R1bGVzTGlzdFxuKSB7XG5cdGFwcGx5SGFuZGxlcnMucHVzaChhcHBseUhhbmRsZXIpO1xuXHRjdXJyZW50VXBkYXRlQ2h1bmtzID0ge307XG5cdGN1cnJlbnRVcGRhdGVSZW1vdmVkQ2h1bmtzID0gcmVtb3ZlZENodW5rcztcblx0Y3VycmVudFVwZGF0ZSA9IHJlbW92ZWRNb2R1bGVzLnJlZHVjZShmdW5jdGlvbiAob2JqLCBrZXkpIHtcblx0XHRvYmpba2V5XSA9IGZhbHNlO1xuXHRcdHJldHVybiBvYmo7XG5cdH0sIHt9KTtcblx0Y3VycmVudFVwZGF0ZVJ1bnRpbWUgPSBbXTtcblx0Y2h1bmtJZHMuZm9yRWFjaChmdW5jdGlvbiAoY2h1bmtJZCkge1xuXHRcdGlmIChcblx0XHRcdF9fd2VicGFja19yZXF1aXJlX18ubyhpbnN0YWxsZWRDaHVua3MsIGNodW5rSWQpICYmXG5cdFx0XHRpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF0gIT09IHVuZGVmaW5lZFxuXHRcdCkge1xuXHRcdFx0cHJvbWlzZXMucHVzaChsb2FkVXBkYXRlQ2h1bmsoY2h1bmtJZCwgdXBkYXRlZE1vZHVsZXNMaXN0KSk7XG5cdFx0XHRjdXJyZW50VXBkYXRlQ2h1bmtzW2NodW5rSWRdID0gdHJ1ZTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0Y3VycmVudFVwZGF0ZUNodW5rc1tjaHVua0lkXSA9IGZhbHNlO1xuXHRcdH1cblx0fSk7XG5cdGlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLmYpIHtcblx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmYuanNvbnBIbXIgPSBmdW5jdGlvbiAoY2h1bmtJZCwgcHJvbWlzZXMpIHtcblx0XHRcdGlmIChcblx0XHRcdFx0Y3VycmVudFVwZGF0ZUNodW5rcyAmJlxuXHRcdFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8oY3VycmVudFVwZGF0ZUNodW5rcywgY2h1bmtJZCkgJiZcblx0XHRcdFx0IWN1cnJlbnRVcGRhdGVDaHVua3NbY2h1bmtJZF1cblx0XHRcdCkge1xuXHRcdFx0XHRwcm9taXNlcy5wdXNoKGxvYWRVcGRhdGVDaHVuayhjaHVua0lkKSk7XG5cdFx0XHRcdGN1cnJlbnRVcGRhdGVDaHVua3NbY2h1bmtJZF0gPSB0cnVlO1xuXHRcdFx0fVxuXHRcdH07XG5cdH1cbn07XG5cbl9fd2VicGFja19yZXF1aXJlX18uaG1yTSA9ICgpID0+IHtcblx0aWYgKHR5cGVvZiBmZXRjaCA9PT0gXCJ1bmRlZmluZWRcIikgdGhyb3cgbmV3IEVycm9yKFwiTm8gYnJvd3NlciBzdXBwb3J0OiBuZWVkIGZldGNoIEFQSVwiKTtcblx0cmV0dXJuIGZldGNoKF9fd2VicGFja19yZXF1aXJlX18ucCArIF9fd2VicGFja19yZXF1aXJlX18uaG1yRigpKS50aGVuKChyZXNwb25zZSkgPT4ge1xuXHRcdGlmKHJlc3BvbnNlLnN0YXR1cyA9PT0gNDA0KSByZXR1cm47IC8vIG5vIHVwZGF0ZSBhdmFpbGFibGVcblx0XHRpZighcmVzcG9uc2Uub2spIHRocm93IG5ldyBFcnJvcihcIkZhaWxlZCB0byBmZXRjaCB1cGRhdGUgbWFuaWZlc3QgXCIgKyByZXNwb25zZS5zdGF0dXNUZXh0KTtcblx0XHRyZXR1cm4gcmVzcG9uc2UuanNvbigpO1xuXHR9KTtcbn07XG5cbi8vIG5vIG9uIGNodW5rcyBsb2FkZWRcblxuLy8gbm8ganNvbnAgZnVuY3Rpb24iLCIvLyBtb2R1bGUgY2FjaGUgYXJlIHVzZWQgc28gZW50cnkgaW5saW5pbmcgaXMgZGlzYWJsZWRcbi8vIHN0YXJ0dXBcbi8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xudmFyIF9fd2VicGFja19leHBvcnRzX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEzMSk7XG4iXSwibmFtZXMiOlsiaW5Qcm9ncmVzcyIsImRhdGFXZWJwYWNrUHJlZml4IiwiY3JlYXRlU3R5bGVzaGVldCIsImZpbmRTdHlsZXNoZWV0Iiwib2xkVGFncyIsIm5ld1RhZ3MiLCJhcHBseUhhbmRsZXIiLCJub3JtYWxpemVVcmwiLCJzcmNCeU1vZHVsZUlkIiwiT2JqZWN0IiwiY3JlYXRlIiwibm9Eb2N1bWVudCIsImRvY3VtZW50IiwiZm9yRWFjaCIsIkFycmF5IiwicHJvdG90eXBlIiwibm9vcCIsInVwZGF0ZUNzcyIsImVsIiwidXJsIiwiaHJlZiIsInNwbGl0IiwiaXNVcmxSZXF1ZXN0IiwiaXNMb2FkZWQiLCJpbmRleE9mIiwidmlzaXRlZCIsIm5ld0VsIiwiY2xvbmVOb2RlIiwiYWRkRXZlbnRMaXN0ZW5lciIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsImNvbmNhdCIsIkRhdGUiLCJub3ciLCJuZXh0U2libGluZyIsImluc2VydEJlZm9yZSIsImFwcGVuZENoaWxkIiwicmVsb2FkQWxsIiwiZWxlbWVudHMiLCJxdWVyeVNlbGVjdG9yQWxsIiwiY2FsbCIsInRlc3QiLCJtb2R1bGUiLCJleHBvcnRzIiwibW9kdWxlSWQiLCJvcHRpb25zIiwiY29uc29sZSIsImxvZyIsImZuIiwidGltZW91dCIsImdldFNjcmlwdFNyYyIsInNyYyIsImN1cnJlbnRTY3JpcHQiLCJzY3JpcHRzIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJsYXN0U2NyaXB0VGFnIiwibGVuZ3RoIiwiZmlsZU1hcCIsInNwbGl0UmVzdWx0IiwiZmlsZW5hbWUiLCJtYXAiLCJtYXBSdWxlIiwicmVnIiwiUmVnRXhwIiwicmVwbGFjZSIsImdldEN1cnJlbnRTY3JpcHRVcmwiLCJyZWxvYWRlZCIsImxvYWRlZCIsInJldCIsInNvbWUiLCJnZXRSZWxvYWRVcmwiLCJyZWxvYWRTdHlsZSIsImxvY2FscyIsImpvaW4iLCJzZWxmIiwidGhpcyIsImFyZ3MiLCJhcmd1bWVudHMiLCJmdW5jdGlvbkNhbGwiLCJhcHBseSIsImNsZWFyVGltZW91dCIsInNldFRpbWVvdXQiLCJ1cmxTdHJpbmciLCJ0cmltIiwicHJvdG9jb2wiLCJjb21wb25lbnRzIiwiaG9zdCIsInRvTG93ZXJDYXNlIiwicmVkdWNlIiwiYWNjdW11bGF0b3IiLCJpdGVtIiwicG9wIiwicHVzaCIsImNzc1JlbG9hZCIsImlkIiwiaG90IiwiZGlzcG9zZSIsImFjY2VwdCIsInVuZGVmaW5lZCIsImVuIiwibG93IiwiaGlnaCIsInJ1Iiwia2V5Ym9hcmRXcmFwcGVyIiwiY3VyTGFuZyIsImxhbmciLCJyZWdpc3RyIiwiaXNDYXBzIiwiaXNTaGlmdCIsImlzQ3RybCIsImJ1dHRvbnNBcnJheSIsIndvcmtXaXRoVGV4dGFyZWEiLCJpbnN0IiwiYnV0dG9uQ29kZSIsInN5bWJvbCIsImxldHRlciIsIkV2ZW50Iiwia2V5IiwiY29kZSIsIm5hbWUiLCJidXR0b25WYWx1ZSIsInRleHRDb250ZW50Iiwic2VsZWN0aW9uU3RhcnQiLCJzZWxlY3Rpb25FbmQiLCJzZXRSYW5nZVRleHQiLCJLZXlib2FyZEJ1dHRvbiIsImJ1dHRvbiIsImNyZWF0ZUVsZW1lbnQiLCJ2YWx1ZSIsImNvbnN0cnVjdG9yIiwiY3JlYXRlQnV0dG9uIiwiY2xhc3NMaXN0IiwiYWRkIiwic2V0QnV0dG9uU3ltYm9sIiwiYXBwZW5kIiwicHJlc3NCdXR0b24iLCJzeW5jaHJvbml6ZVdpdGhLZXlib2FyZCIsImJvZHkiLCJzaGlmdEJ1dHRvbiIsImNhcHNMb2NrIiwiY2hhbmdlTGFuZ3VhZ2UiLCJyZW1vdmUiLCJjaGFuZ2VCdXR0b25zVmFsdWUiLCJzdWJzdHJpbmciLCJ0b0xvY2FsZVVwcGVyQ2FzZSIsImUiLCJwcmV2ZW50RGVmYXVsdCIsImluY2x1ZGVzIiwidGFyZ2V0Iiwid2luZG93IiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsIndyYXBwZXIiLCJtYWluIiwic2VjdGlvblRleHQiLCJ0ZXh0V3JhcHBlciIsImZvY3VzIiwiYXV0b2ZvY3VzIiwic2VjdGlvbktleWJvYXJkIiwiZm9vdGVyIiwiZ2l0aHViIiwibGFuZ1N3aXRjaCIsIlJTUyIsImJ0bkxlZnQiLCJzcGFuTGVmdCIsImJ0blVwIiwic3BhblVwIiwiYnRuRG93biIsInNwYW5Eb3duIiwiYnRuUmlnaHQiLCJzcGFuUmlnaHQiLCJzdHlsZSIsInBvaW50ZXJFdmVudHMiLCJyZXBlYXQiLCJmcmFnbWVudCIsImNyZWF0ZURvY3VtZW50RnJhZ21lbnQiLCJjZW50cmFsQnRuc1dyYXBwZXIiLCJzcGxpdFJvd3MiLCJyb3dzIiwic3ltYk51bSIsImFjYyIsImkiLCJzbGljZSIsImMiLCJNYXRoIiwicm91bmQiLCJjbGllbnRXaWR0aCIsImN1cnJlbnRSb3dMZW5ndGgiLCJ0YXJnZXRSb3dMZW5ndGgiLCJmaXJzdFJvdyIsInVuc2hpZnQiLCJyZXN0Q3VyUm93TGVuZ3RoIiwiY3JlYXRlS2V5Ym9hcmQiLCJzZXRJdGVtIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsImNhY2hlZE1vZHVsZSIsImVycm9yIiwiZXhlY09wdGlvbnMiLCJmYWN0b3J5IiwiX193ZWJwYWNrX21vZHVsZXNfXyIsInJlcXVpcmUiLCJoYW5kbGVyIiwibSIsImh1IiwiY2h1bmtJZCIsImgiLCJtaW5pQ3NzRiIsImhtckYiLCJnIiwiZ2xvYmFsVGhpcyIsIkZ1bmN0aW9uIiwibyIsIm9iaiIsInByb3AiLCJoYXNPd25Qcm9wZXJ0eSIsImwiLCJkb25lIiwic2NyaXB0IiwibmVlZEF0dGFjaCIsInMiLCJnZXRBdHRyaWJ1dGUiLCJjaGFyc2V0IiwibmMiLCJzZXRBdHRyaWJ1dGUiLCJvblNjcmlwdENvbXBsZXRlIiwicHJldiIsImV2ZW50Iiwib25lcnJvciIsIm9ubG9hZCIsImRvbmVGbnMiLCJiaW5kIiwidHlwZSIsImhlYWQiLCJjdXJyZW50Q2hpbGRNb2R1bGUiLCJjdXJyZW50VXBkYXRlQXBwbHlIYW5kbGVycyIsInF1ZXVlZEludmFsaWRhdGVkTW9kdWxlcyIsImN1cnJlbnRNb2R1bGVEYXRhIiwiaW5zdGFsbGVkTW9kdWxlcyIsImN1cnJlbnRQYXJlbnRzIiwicmVnaXN0ZXJlZFN0YXR1c0hhbmRsZXJzIiwiY3VycmVudFN0YXR1cyIsImJsb2NraW5nUHJvbWlzZXMiLCJibG9ja2luZ1Byb21pc2VzV2FpdGluZyIsInNldFN0YXR1cyIsIm5ld1N0YXR1cyIsInJlc3VsdHMiLCJQcm9taXNlIiwiYWxsIiwidW5ibG9jayIsInRoZW4iLCJsaXN0IiwiaG90Q2hlY2siLCJhcHBseU9uVXBkYXRlIiwiRXJyb3IiLCJobXJNIiwidXBkYXRlIiwidXBkYXRlZE1vZHVsZXMiLCJrZXlzIiwiaG1yQyIsInByb21pc2VzIiwiciIsImludGVybmFsQXBwbHkiLCJyZXNvbHZlIiwiYXBwbHlJbnZhbGlkYXRlZE1vZHVsZXMiLCJob3RBcHBseSIsImVycm9ycyIsImZpbHRlciIsIkJvb2xlYW4iLCJkaXNwb3NlUHJvbWlzZSIsInJlc3VsdCIsImFwcGx5UHJvbWlzZSIsInJlcG9ydEVycm9yIiwiZXJyIiwib3V0ZGF0ZWRNb2R1bGVzIiwibW9kdWxlcyIsImhtckkiLCJobXJEIiwibWUiLCJfbWFpbiIsInJlcXVlc3QiLCJhY3RpdmUiLCJwYXJlbnRzIiwiY2hpbGRyZW4iLCJ3YXJuIiwiY3JlYXRlUHJvcGVydHlEZXNjcmlwdG9yIiwiY29uZmlndXJhYmxlIiwiZW51bWVyYWJsZSIsImdldCIsInNldCIsImRlZmluZVByb3BlcnR5IiwicHJvbWlzZSIsInRyYWNrQmxvY2tpbmdQcm9taXNlIiwiY3JlYXRlUmVxdWlyZSIsIl9hY2NlcHRlZERlcGVuZGVuY2llcyIsIl9hY2NlcHRlZEVycm9ySGFuZGxlcnMiLCJfZGVjbGluZWREZXBlbmRlbmNpZXMiLCJfc2VsZkFjY2VwdGVkIiwiX3NlbGZEZWNsaW5lZCIsIl9zZWxmSW52YWxpZGF0ZWQiLCJfZGlzcG9zZUhhbmRsZXJzIiwiX3JlcXVpcmVTZWxmIiwiZGVwIiwiY2FsbGJhY2siLCJlcnJvckhhbmRsZXIiLCJkZWNsaW5lIiwiYWRkRGlzcG9zZUhhbmRsZXIiLCJyZW1vdmVEaXNwb3NlSGFuZGxlciIsImlkeCIsInNwbGljZSIsImludmFsaWRhdGUiLCJjaGVjayIsInN0YXR1cyIsImFkZFN0YXR1c0hhbmRsZXIiLCJyZW1vdmVTdGF0dXNIYW5kbGVyIiwiZGF0YSIsInNjcmlwdFVybCIsImltcG9ydFNjcmlwdHMiLCJsb2NhdGlvbiIsInAiLCJmdWxsaHJlZiIsInJlamVjdCIsImxpbmtUYWciLCJyZWwiLCJlcnJvclR5cGUiLCJyZWFsSHJlZiIsImV4aXN0aW5nTGlua1RhZ3MiLCJkYXRhSHJlZiIsInRhZyIsImV4aXN0aW5nU3R5bGVUYWdzIiwib2xkVGFnIiwibWluaUNzcyIsImNodW5rSWRzIiwicmVtb3ZlZENodW5rcyIsInJlbW92ZWRNb2R1bGVzIiwiYXBwbHlIYW5kbGVycyIsInVwZGF0ZWRNb2R1bGVzTGlzdCIsImFzIiwiY3VycmVudFVwZGF0ZWRNb2R1bGVzTGlzdCIsImN1cnJlbnRVcGRhdGVDaHVua3MiLCJjdXJyZW50VXBkYXRlIiwiY3VycmVudFVwZGF0ZVJlbW92ZWRDaHVua3MiLCJjdXJyZW50VXBkYXRlUnVudGltZSIsImluc3RhbGxlZENodW5rcyIsImhtclNfanNvbnAiLCJ3YWl0aW5nVXBkYXRlUmVzb2x2ZXMiLCJsb2FkVXBkYXRlQ2h1bmsiLCJyZWFsU3JjIiwibWVzc2FnZSIsImdldEFmZmVjdGVkTW9kdWxlRWZmZWN0cyIsInVwZGF0ZU1vZHVsZUlkIiwib3V0ZGF0ZWREZXBlbmRlbmNpZXMiLCJxdWV1ZSIsImNoYWluIiwicXVldWVJdGVtIiwicGFyZW50SWQiLCJwYXJlbnQiLCJhZGRBbGxUb1NldCIsImEiLCJiIiwiZiIsImpzb25wSG1yIiwiYXBwbGllZFVwZGF0ZSIsIndhcm5VbmV4cGVjdGVkUmVxdWlyZSIsIm5ld01vZHVsZUZhY3RvcnkiLCJhYm9ydEVycm9yIiwiZG9BcHBseSIsImRvRGlzcG9zZSIsImNoYWluSW5mbyIsIm9uRGVjbGluZWQiLCJpZ25vcmVEZWNsaW5lZCIsIm9uVW5hY2NlcHRlZCIsImlnbm9yZVVuYWNjZXB0ZWQiLCJvbkFjY2VwdGVkIiwib25EaXNwb3NlZCIsIm1vZHVsZU91dGRhdGVkRGVwZW5kZW5jaWVzIiwib3V0ZGF0ZWRTZWxmQWNjZXB0ZWRNb2R1bGVzIiwiaiIsIm91dGRhdGVkTW9kdWxlSWQiLCJkZXBlbmRlbmN5IiwiZGlzcG9zZUhhbmRsZXJzIiwiY2hpbGQiLCJjYWxsYmFja3MiLCJlcnJvckhhbmRsZXJzIiwiZGVwZW5kZW5jaWVzRm9yQ2FsbGJhY2tzIiwiYWNjZXB0Q2FsbGJhY2siLCJrIiwiZGVwZW5kZW5jeUlkIiwiZXJyMiIsIm9uRXJyb3JlZCIsIm9yaWdpbmFsRXJyb3IiLCJpZ25vcmVFcnJvcmVkIiwibW9yZU1vZHVsZXMiLCJydW50aW1lIiwianNvbnAiLCJmZXRjaCIsInJlc3BvbnNlIiwib2siLCJzdGF0dXNUZXh0IiwianNvbiJdLCJzb3VyY2VSb290IjoiIn0=