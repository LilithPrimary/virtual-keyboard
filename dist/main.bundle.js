(()=>{"use strict";var e,t,n,r,o,i,a,s={783:(e,t,n)=>{var r=n(618),o=Object.create(null),i="undefined"==typeof document,a=Array.prototype.forEach;function s(){}function c(e,t){if(!t){if(!e.href)return;t=e.href.split("?")[0]}if(d(t)&&!1!==e.isLoaded&&t&&t.indexOf(".css")>-1){e.visited=!0;var n=e.cloneNode();n.isLoaded=!1,n.addEventListener("load",(function(){n.isLoaded||(n.isLoaded=!0,e.parentNode.removeChild(e))})),n.addEventListener("error",(function(){n.isLoaded||(n.isLoaded=!0,e.parentNode.removeChild(e))})),n.href="".concat(t,"?").concat(Date.now()),e.nextSibling?e.parentNode.insertBefore(n,e.nextSibling):e.parentNode.appendChild(n)}}function l(){var e=document.querySelectorAll("link");a.call(e,(function(e){!0!==e.visited&&c(e)}))}function d(e){return!!/^[a-zA-Z][a-zA-Z\d+\-.]*:/.test(e)}e.exports=function(e,t){if(i)return console.log("no window.document found, will not HMR CSS"),s;var n,h,u=function(e){var t=o[e];if(!t){if(document.currentScript)t=document.currentScript.src;else{var n=document.getElementsByTagName("script"),i=n[n.length-1];i&&(t=i.src)}o[e]=t}return function(e){if(!t)return null;var n=t.split(/([^\\/]+)\.js$/),o=n&&n[1];return o&&e?e.split(",").map((function(e){var n=new RegExp("".concat(o,"\\.js$"),"g");return r(t.replace(n,"".concat(e.replace(/{fileName}/g,o),".css")))})):[t.replace(".js",".css")]}}(e);return n=function(){var e=u(t.filename),n=function(e){if(!e)return!1;var t=document.querySelectorAll("link"),n=!1;return a.call(t,(function(t){if(t.href){var o=function(e,t){var n;return e=r(e),t.some((function(r){e.indexOf(t)>-1&&(n=r)})),n}(t.href,e);d(o)&&!0!==t.visited&&o&&(c(t,o),n=!0)}})),n}(e);if(t.locals)return console.log("[HMR] Detected local css modules. Reload all css"),void l();n?console.log("[HMR] css reload %s",e.join(" ")):(console.log("[HMR] Reload all css"),l())},50,h=0,function(){var e=this,t=arguments,r=function(){return n.apply(e,t)};clearTimeout(h),h=setTimeout(r,50)}}},618:e=>{e.exports=function(e){if(e=e.trim(),/^data:/i.test(e))return e;var t=-1!==e.indexOf("//")?e.split("//")[0]+"//":"",n=e.replace(new RegExp(t,"i"),"").split("/"),r=n[0].toLowerCase().replace(/\.$/,"");return n[0]="",t+r+n.reduce((function(e,t){switch(t){case"..":e.pop();break;case".":break;default:e.push(t)}return e}),[]).join("/")}},663:(e,t,n)=>{var r=n(783)(e.id,{publicPath:"",locals:!1});e.hot.dispose(r),e.hot.accept(void 0,r)},131:(e,t,n)=>{n(663);const r=[{en:{low:"`",high:"~"},ru:{low:"ё",high:"Ё"},id:"Backquote"},{en:{low:"1",high:"!"},ru:{low:"1",high:"!"},id:"Digit1"},{en:{low:"2",high:"@"},ru:{low:"2",high:'"'},id:"Digit2"},{en:{low:"3",high:"#"},ru:{low:"3",high:"№"},id:"Digit3"},{en:{low:"4",high:"$"},ru:{low:"4",high:";"},id:"Digit4"},{en:{low:"5",high:"%"},ru:{low:"5",high:"%"},id:"Digit5"},{en:{low:"6",high:"^"},ru:{low:"6",high:":"},id:"Digit6"},{en:{low:"7",high:"&"},ru:{low:"7",high:"?"},id:"Digit7"},{en:{low:"8",high:"*"},ru:{low:"8",high:"*"},id:"Digit8"},{en:{low:"9",high:"("},ru:{low:"9",high:"("},id:"Digit9"},{en:{low:"0",high:")"},ru:{low:"0",high:")"},id:"Digit0"},{en:{low:"-",high:"_"},ru:{low:"-",high:"_"},id:"Minus"},{en:{low:"=",high:"+"},ru:{low:"=",high:"+"},id:"Equal"},{en:{low:"backspace",high:"backspace"},ru:{low:"backspace",high:"backspace"},id:"Backspace"},{en:{low:"Del",high:"Del"},ru:{low:"Del",high:"Del"},id:"Delete"},{en:{low:"keyboard_tab",high:"keyboard_tab"},ru:{low:"keyboard_tab",high:"keyboard_tab"},id:"Tab"},{en:{low:"q",high:"Q"},ru:{low:"й",high:"Й"},id:"KeyQ"},{en:{low:"w",high:"W"},ru:{low:"ц",high:"Ц"},id:"KeyW"},{en:{low:"e",high:"E"},ru:{low:"у",high:"У"},id:"KeyE"},{en:{low:"r",high:"R"},ru:{low:"к",high:"К"},id:"KeyR"},{en:{low:"t",high:"T"},ru:{low:"е",high:"Е"},id:"KeyT"},{en:{low:"y",high:"Y"},ru:{low:"н",high:"Н"},id:"KeyY"},{en:{low:"u",high:"U"},ru:{low:"г",high:"Г"},id:"KeyU"},{en:{low:"i",high:"I"},ru:{low:"ш",high:"Ш"},id:"KeyI"},{en:{low:"o",high:"O"},ru:{low:"щ",high:"Щ"},id:"KeyO"},{en:{low:"p",high:"P"},ru:{low:"з",high:"З"},id:"KeyP"},{en:{low:"[",high:"{"},ru:{low:"х",high:"Х"},id:"BracketLeft"},{en:{low:"]",high:"}"},ru:{low:"ъ",high:"Ъ"},id:"BracketRight"},{en:{low:"\\",high:"|"},ru:{low:"\\",high:"/"},id:"Backslash"},{en:{low:"capslock",high:"capslock"},ru:{low:"capslock",high:"capslock"},id:"CapsLock"},{en:{low:"a",high:"A"},ru:{low:"ф",high:"Ф"},id:"KeyA"},{en:{low:"s",high:"S"},ru:{low:"ы",high:"Ы"},id:"KeyS"},{en:{low:"d",high:"D"},ru:{low:"в",high:"В"},id:"KeyD"},{en:{low:"f",high:"F"},ru:{low:"а",high:"А"},id:"KeyF"},{en:{low:"g",high:"G"},ru:{low:"п",high:"П"},id:"KeyG"},{en:{low:"h",high:"H"},ru:{low:"р",high:"Р"},id:"KeyH"},{en:{low:"j",high:"J"},ru:{low:"о",high:"О"},id:"KeyJ"},{en:{low:"k",high:"K"},ru:{low:"л",high:"Л"},id:"KeyK"},{en:{low:"l",high:"L"},ru:{low:"д",high:"Д"},id:"KeyL"},{en:{low:";",high:":"},ru:{low:"ж",high:"Ж"},id:"Semicolon"},{en:{low:"'",high:'"'},ru:{low:"э",high:"Э"},id:"Quote"},{en:{low:"keyboard_return",high:"keyboard_return"},ru:{low:"keyboard_return",high:"keyboard_return"},id:"Enter"},{en:{low:"Shift",high:"Shift"},ru:{low:"Shift",high:"Shift"},id:"ShiftLeft"},{en:{low:"z",high:"Z"},ru:{low:"я",high:"Я"},id:"KeyZ"},{en:{low:"x",high:"X"},ru:{low:"ч",high:"Ч"},id:"KeyX"},{en:{low:"c",high:"C"},ru:{low:"с",high:"С"},id:"KeyC"},{en:{low:"v",high:"V"},ru:{low:"м",high:"М"},id:"KeyV"},{en:{low:"b",high:"B"},ru:{low:"и",high:"И"},id:"KeyB"},{en:{low:"n",high:"N"},ru:{low:"т",high:"Т"},id:"KeyN"},{en:{low:"m",high:"M"},ru:{low:"ь",high:"Ь"},id:"KeyM"},{en:{low:",",high:"<"},ru:{low:"б",high:"Б"},id:"Comma"},{en:{low:".",high:">"},ru:{low:"ю",high:"Ю"},id:"Period"},{en:{low:"/",high:"?"},ru:{low:".",high:","},id:"Slash"},{en:{low:"Shift",high:"Shift"},ru:{low:"Shift",high:"Shift"},id:"ShiftRight"},{en:{low:"Control",high:"Control"},ru:{low:"Control",high:"Control"},id:"ControlLeft"},{en:{low:"win",high:"win"},ru:{low:"win",high:"win"},id:"MetaLeft"},{en:{low:"Alt",high:"Alt"},ru:{low:"Alt",high:"Alt"},id:"AltLeft"},{en:{low:"space_bar",high:"space_bar"},ru:{low:"space_bar",high:"space_bar"},id:"Space"},{en:{low:"Alt",high:"Alt"},ru:{low:"Alt",high:"Alt"},id:"AltRight"},{en:{low:"Control",high:"Control"},ru:{low:"Control",high:"Control"},id:"ControlRight"}];let o,i,a,s="en",c="low",l=!1,d=!1,h=!1,u=[];function p(e){let t,n,r;if(e instanceof Event){if("Control"===e.key)return;t=e.code,u.forEach((e=>{e.name.id===t&&(n=e.buttonValue.textContent)}))}else t=e.name.id,n=e.buttonValue.textContent;if(u.some((e=>e.name.id===t))){switch(t){case"Backspace":return void(0===o.selectionStart&&0===o.selectionEnd||(o.selectionStart===o.selectionEnd?o.setRangeText("",o.selectionStart-1,o.selectionStart,"end"):o.setRangeText("",o.selectionStart,o.selectionEnd,"end")));case"Delete":return void(o.selectionStart===o.selectionEnd?o.setRangeText("",o.selectionStart,o.selectionStart+1,"end"):o.setRangeText("",o.selectionStart,o.selectionEnd,"end"));case"Enter":r="\n";break;case"Space":r=" ";break;case"Tab":r="    ";break;case"MetaLeft":case"AltRight":case"AltLeft":return;default:r=n}o.setRangeText(r,o.selectionStart,o.selectionEnd,"end")}}class f{button=document.createElement("button");buttonValue=document.createElement("span");value="";constructor(e){this.name=e}createButton(){switch(this.button.classList.add("key"),this.buttonValue.classList.add("key__value"),this.name.en.low){case"Control":this.button.classList.add("key__wide");break;case"backspace":this.button.classList.add("material-symbols-outlined");break;case"keyboard_tab":this.button.classList.add("key__wide","material-symbols-outlined");break;case"capslock":this.button.classList.add("key__wide","material-symbols-outlined","key__capslock");break;case"keyboard_return":this.button.classList.add("key__enter","material-symbols-outlined");break;case"Shift":this.button.classList.add("key__shift");break;case"space_bar":this.button.classList.add("key__space","material-symbols-outlined");break;default:this.button.classList.add("key")}this.setButtonSymbol(),this.button.append(this.buttonValue),this.pressButton(),this.synchronizeWithKeyboard(),document.body.append(this.button)}pressButton(){this.button.addEventListener("click",(()=>{switch(this.name.id){case"CapsLock":d&&this.shiftButton(),this.capsLock();break;case"ShiftLeft":case"ShiftRight":this.shiftButton();break;case"ControlRight":case"ControlLeft":d&&(this.shiftButton(),this.changeLanguage());break;default:p(this),d&&this.shiftButton()}}))}shiftButton(){d?u.forEach((e=>{"Shift"===e.name.en.low&&(e.button.classList.remove("active"),d=!1,l||(c="low",this.changeButtonsValue()))})):u.forEach((e=>{"Shift"===e.name.en.low&&(e.button.classList.add("active"),c="high",this.changeButtonsValue(),d=!0)})),d&&l&&(c="low",this.changeButtonsValue()),!d&&l&&(c="high",this.changeButtonsValue())}setButtonSymbol(){switch(this.buttonValue.textContent=this.name[s][c],this.name.en.low){case"Control":this.buttonValue.textContent="Ctrl";break;case"backspace":this.value=this.value.substring(0,this.value.length-1);break;case"keyboard_tab":this.value="    ";break;case"capslock":this.value=this.capsLock;break;case"keyboard_return":this.value="\n";break;case"shift":case"alt":break;case"space_bar":this.value=" ";break;default:this.value=this.name[s][c]}a.textContent=`Current language: ${s.toLocaleUpperCase()}`}capsLock(){l?(this.button.classList.remove("on"),c="low",l=!1,this.changeButtonsValue()):(this.button.classList.add("on"),c="high",l=!0,this.changeButtonsValue())}changeLanguage(){s="en"===s?"ru":"en",this.changeButtonsValue()}changeButtonsValue(){this.value=this.name.id,u.forEach((e=>e.setButtonSymbol()))}synchronizeWithKeyboard(){document.addEventListener("keydown",(e=>{e.code===this.name.id&&(e.preventDefault(),this.button.classList.add("active")),["ArrowUp","ArrowDown","ArrowLeft","ArrowRight"].includes(e.code)&&e.target.classList.add("active")})),document.addEventListener("keyup",(e=>{e.code===this.name.id&&this.button.classList.remove("active"),["ArrowUp","ArrowDown","ArrowLeft","ArrowRight"].includes(e.code)&&e.target.classList.remove("active")}))}}window.addEventListener("DOMContentLoaded",(function(){s=localStorage.getItem("lang")?localStorage.getItem("lang"):"en",function(){const e=document.createElement("div");e.classList.add("wrapper");const t=document.createElement("main");t.classList.add("main");const n=document.createElement("section");n.classList.add("section","text");const c=document.createElement("div");c.classList.add("text__wrapper"),o=document.createElement("textarea"),o.classList.add("text__input","text-input"),o.addEventListener("blur",(()=>o.focus())),o.autofocus=!0,c.append(o),n.append(c);const l=document.createElement("section");l.classList.add("section","keyboard"),i=document.createElement("div"),i.classList.add("keyboard__wrapper"),l.append(i),t.append(n,l);const g=document.createElement("footer");g.classList.add("footer");const m=document.createElement("a");m.classList.add("link","link__gh"),m.textContent="© Lilith Primary",m.href="https://github.com/LilithPrimary",a=document.createElement("span"),a.classList.add("text"),a.textContent=`Current language: ${s.toLocaleUpperCase()}`;const w=document.createElement("span");w.classList.add("text"),w.textContent="Switch: Shift + Ctrl";const v=document.createElement("a");v.classList.add("link","link__rss"),v.textContent="RSS",v.href="https://rs.school/js/",g.append(m,a,w,v),e.append(t,g),document.body.append(e);const y=document.createElement("button");y.classList.add("key","key__slim");const b=document.createElement("span");b.classList.add("key__value","material-symbols-outlined"),b.textContent="keyboard_arrow_left",y.append(b);const k=document.createElement("button");k.classList.add("key","key__slim");const _=document.createElement("span");_.classList.add("key__value","material-symbols-outlined"),_.textContent="keyboard_arrow_up",k.append(_);const E=document.createElement("button");E.classList.add("key","key__slim");const L=document.createElement("span");L.classList.add("key__value","material-symbols-outlined"),L.textContent="keyboard_arrow_down",E.append(L);const S=document.createElement("button");S.classList.add("key","key__slim");const C=document.createElement("span");C.classList.add("key__value","material-symbols-outlined"),C.textContent="keyboard_arrow_right",S.append(C),document.addEventListener("keydown",(e=>{if(document.body.style.pointerEvents="none","ShiftLeft"!==e.code&&"ShiftRight"!==e.code)if("Control"===e.key&&(h=!0),"CapsLock"!==e.code)switch(p(e),e.code){case"ArrowUp":k.classList.add("active");break;case"ArrowDown":E.classList.add("active");break;case"ArrowLeft":y.classList.add("active");break;case"ArrowRight":S.classList.add("active")}else u[29].capsLock();else{if(e.repeat)return;u[0].shiftButton()}})),document.addEventListener("keyup",(e=>{switch(document.body.style.pointerEvents="inherit",d&&h&&u[0].changeLanguage(),"ShiftLeft"!==e.code&&"ShiftRight"!==e.code||u[0].shiftButton(),"Control"===e.key&&(h=!1),e.code){case"ArrowUp":k.classList.remove("active");break;case"ArrowDown":E.classList.remove("active");break;case"ArrowLeft":y.classList.remove("active");break;case"ArrowRight":S.classList.remove("active")}}));const A=document.createDocumentFragment();u=r.map((e=>{const t=new f(e);return t.createButton(),A.append(t.button),t}));const D=document.createElement("div");function x(e,t){return e.reduce(((e,n)=>{if(n.length>t)for(let r=0;r<n.length;r+=t)e.push(n.slice(r,r+t-1));else e.push(n);return e}),[])}D.classList.add("central-btns-wrapper"),D.append(k,E),i.append(A,y,D,S),y.addEventListener("click",(()=>{o.selectionStart-=1,o.selectionEnd=o.selectionStart})),S.addEventListener("click",(()=>{o.selectionStart+=1,o.selectionEnd=o.selectionStart})),k.addEventListener("click",(()=>{let e=0;const t=Math.round((o.clientWidth-40)/8.783);let n=o.value.slice(0,o.selectionStart).split("\n");if(n=x(n,t),1===n.length&&n[0].length===t&&(n.push(""),e=1),n.length<2)return;const r=n[n.length-1].length,i=n[n.length-2].length;o.selectionStart=r<i?o.selectionStart-i-1+e:o.selectionStart-r-1+e,o.selectionEnd=o.selectionStart})),E.addEventListener("click",(()=>{const e=Math.round((o.clientWidth-40)/8.783);let t=o.value.slice(0,o.selectionStart).split("\n");t=x(t,e);const n=t[t.length-1].length;t=o.value.slice(o.selectionStart,o.value.length).split("\n");let r=0;if(t[0].length>e-n){const o=t[0].slice(0,e-n);t[0]=t[0].slice(e-n,t[0].length),t.unshift(o),r=-1}if(t=x(t,e),t.length<2)return;const i=t[0].length,a=t[1].length;o.selectionStart=n>a?o.selectionStart+(a+i)+1+r:o.selectionStart+(i+n)+1+r,o.selectionEnd=o.selectionStart}))}()})),window.addEventListener("beforeunload",(function(){localStorage.setItem("lang",s)}))}},c={};function l(e){var t=c[e];if(void 0!==t){if(void 0!==t.error)throw t.error;return t.exports}var n=c[e]={id:e,exports:{}};try{var r={id:e,module:n,factory:s[e],require:l};l.i.forEach((function(e){e(r)})),n=r.module,r.factory.call(n.exports,n,n.exports,r.require)}catch(e){throw n.error=e,e}return n.exports}l.m=s,l.c=c,l.i=[],l.hu=e=>e+"."+l.h()+".hot-update.js",l.miniCssF=e=>{},l.hmrF=()=>"main."+l.h()+".hot-update.json",l.h=()=>"3c4b018f1d15fe927e66",l.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),l.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),e={},t="virtual-keyboard:",l.l=(n,r,o,i)=>{if(e[n])e[n].push(r);else{var a,s;if(void 0!==o)for(var c=document.getElementsByTagName("script"),d=0;d<c.length;d++){var h=c[d];if(h.getAttribute("src")==n||h.getAttribute("data-webpack")==t+o){a=h;break}}a||(s=!0,(a=document.createElement("script")).charset="utf-8",a.timeout=120,l.nc&&a.setAttribute("nonce",l.nc),a.setAttribute("data-webpack",t+o),a.src=n),e[n]=[r];var u=(t,r)=>{a.onerror=a.onload=null,clearTimeout(p);var o=e[n];if(delete e[n],a.parentNode&&a.parentNode.removeChild(a),o&&o.forEach((e=>e(r))),t)return t(r)},p=setTimeout(u.bind(null,void 0,{type:"timeout",target:a}),12e4);a.onerror=u.bind(null,a.onerror),a.onload=u.bind(null,a.onload),s&&document.head.appendChild(a)}},(()=>{var e,t,n,r={},o=l.c,i=[],a=[],s="idle",c=0,d=[];function h(e){s=e;for(var t=[],n=0;n<a.length;n++)t[n]=a[n].call(null,e);return Promise.all(t)}function u(){0==--c&&h("ready").then((function(){if(0===c){var e=d;d=[];for(var t=0;t<e.length;t++)e[t]()}}))}function p(e){if("idle"!==s)throw new Error("check() is only allowed in idle status");return h("check").then(l.hmrM).then((function(n){return n?h("prepare").then((function(){var r=[];return t=[],Promise.all(Object.keys(l.hmrC).reduce((function(e,o){return l.hmrC[o](n.c,n.r,n.m,e,t,r),e}),[])).then((function(){return t=function(){return e?g(e):h("ready").then((function(){return r}))},0===c?t():new Promise((function(e){d.push((function(){e(t())}))}));var t}))})):h(m()?"ready":"idle").then((function(){return null}))}))}function f(e){return"ready"!==s?Promise.resolve().then((function(){throw new Error("apply() is only allowed in ready status (state: "+s+")")})):g(e)}function g(e){e=e||{},m();var r=t.map((function(t){return t(e)}));t=void 0;var o=r.map((function(e){return e.error})).filter(Boolean);if(o.length>0)return h("abort").then((function(){throw o[0]}));var i=h("dispose");r.forEach((function(e){e.dispose&&e.dispose()}));var a,s=h("apply"),c=function(e){a||(a=e)},l=[];return r.forEach((function(e){if(e.apply){var t=e.apply(c);if(t)for(var n=0;n<t.length;n++)l.push(t[n])}})),Promise.all([i,s]).then((function(){return a?h("fail").then((function(){throw a})):n?g(e).then((function(e){return l.forEach((function(t){e.indexOf(t)<0&&e.push(t)})),e})):h("idle").then((function(){return l}))}))}function m(){if(n)return t||(t=[]),Object.keys(l.hmrI).forEach((function(e){n.forEach((function(n){l.hmrI[e](n,t)}))})),n=void 0,!0}l.hmrD=r,l.i.push((function(d){var g,m,w,v,y=d.module,b=function(t,n){var r=o[n];if(!r)return t;var a=function(a){if(r.hot.active){if(o[a]){var s=o[a].parents;-1===s.indexOf(n)&&s.push(n)}else i=[n],e=a;-1===r.children.indexOf(a)&&r.children.push(a)}else console.warn("[HMR] unexpected require("+a+") from disposed module "+n),i=[];return t(a)},l=function(e){return{configurable:!0,enumerable:!0,get:function(){return t[e]},set:function(n){t[e]=n}}};for(var d in t)Object.prototype.hasOwnProperty.call(t,d)&&"e"!==d&&Object.defineProperty(a,d,l(d));return a.e=function(e){return function(e){switch(s){case"ready":h("prepare");case"prepare":return c++,e.then(u,u),e;default:return e}}(t.e(e))},a}(d.require,d.id);y.hot=(g=d.id,m=y,v={_acceptedDependencies:{},_acceptedErrorHandlers:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_selfInvalidated:!1,_disposeHandlers:[],_main:w=e!==g,_requireSelf:function(){i=m.parents.slice(),e=w?void 0:g,l(g)},active:!0,accept:function(e,t,n){if(void 0===e)v._selfAccepted=!0;else if("function"==typeof e)v._selfAccepted=e;else if("object"==typeof e&&null!==e)for(var r=0;r<e.length;r++)v._acceptedDependencies[e[r]]=t||function(){},v._acceptedErrorHandlers[e[r]]=n;else v._acceptedDependencies[e]=t||function(){},v._acceptedErrorHandlers[e]=n},decline:function(e){if(void 0===e)v._selfDeclined=!0;else if("object"==typeof e&&null!==e)for(var t=0;t<e.length;t++)v._declinedDependencies[e[t]]=!0;else v._declinedDependencies[e]=!0},dispose:function(e){v._disposeHandlers.push(e)},addDisposeHandler:function(e){v._disposeHandlers.push(e)},removeDisposeHandler:function(e){var t=v._disposeHandlers.indexOf(e);t>=0&&v._disposeHandlers.splice(t,1)},invalidate:function(){switch(this._selfInvalidated=!0,s){case"idle":t=[],Object.keys(l.hmrI).forEach((function(e){l.hmrI[e](g,t)})),h("ready");break;case"ready":Object.keys(l.hmrI).forEach((function(e){l.hmrI[e](g,t)}));break;case"prepare":case"check":case"dispose":case"apply":(n=n||[]).push(g)}},check:p,apply:f,status:function(e){if(!e)return s;a.push(e)},addStatusHandler:function(e){a.push(e)},removeStatusHandler:function(e){var t=a.indexOf(e);t>=0&&a.splice(t,1)},data:r[g]},e=void 0,v),y.parents=i,y.children=[],i=[],d.require=b})),l.hmrC={},l.hmrI={}})(),(()=>{var e;l.g.importScripts&&(e=l.g.location+"");var t=l.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var n=t.getElementsByTagName("script");n.length&&(e=n[n.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),l.p=e})(),n=(e,t,n,r)=>{var o=document.createElement("link");return o.rel="stylesheet",o.type="text/css",o.onerror=o.onload=i=>{if(o.onerror=o.onload=null,"load"===i.type)n();else{var a=i&&("load"===i.type?"missing":i.type),s=i&&i.target&&i.target.href||t,c=new Error("Loading CSS chunk "+e+" failed.\n("+s+")");c.code="CSS_CHUNK_LOAD_FAILED",c.type=a,c.request=s,o.parentNode.removeChild(o),r(c)}},o.href=t,document.head.appendChild(o),o},r=(e,t)=>{for(var n=document.getElementsByTagName("link"),r=0;r<n.length;r++){var o=(a=n[r]).getAttribute("data-href")||a.getAttribute("href");if("stylesheet"===a.rel&&(o===e||o===t))return a}var i=document.getElementsByTagName("style");for(r=0;r<i.length;r++){var a;if((o=(a=i[r]).getAttribute("data-href"))===e||o===t)return a}},o=[],i=[],a=e=>({dispose:()=>{for(var e=0;e<o.length;e++){var t=o[e];t.parentNode&&t.parentNode.removeChild(t)}o.length=0},apply:()=>{for(var e=0;e<i.length;e++)i[e].rel="stylesheet";i.length=0}}),l.hmrC.miniCss=(e,t,s,c,d,h)=>{d.push(a),e.forEach((e=>{var t=l.miniCssF(e),a=l.p+t,s=r(t,a);s&&c.push(new Promise(((t,r)=>{var c=n(e,a,(()=>{c.as="style",c.rel="preload",t()}),r);o.push(s),i.push(c)})))}))},(()=>{var e,t,n,r,o,i=l.hmrS_jsonp=l.hmrS_jsonp||{179:0},a={};function s(t,n){return e=n,new Promise(((e,n)=>{a[t]=e;var r=l.p+l.hu(t),o=new Error;l.l(r,(e=>{if(a[t]){a[t]=void 0;var r=e&&("load"===e.type?"missing":e.type),i=e&&e.target&&e.target.src;o.message="Loading hot update chunk "+t+" failed.\n("+r+": "+i+")",o.name="ChunkLoadError",o.type=r,o.request=i,n(o)}}))}))}function c(e){function a(e){for(var t=[e],n={},r=t.map((function(e){return{chain:[e],id:e}}));r.length>0;){var o=r.pop(),i=o.id,a=o.chain,c=l.c[i];if(c&&(!c.hot._selfAccepted||c.hot._selfInvalidated)){if(c.hot._selfDeclined)return{type:"self-declined",chain:a,moduleId:i};if(c.hot._main)return{type:"unaccepted",chain:a,moduleId:i};for(var d=0;d<c.parents.length;d++){var h=c.parents[d],u=l.c[h];if(u){if(u.hot._declinedDependencies[i])return{type:"declined",chain:a.concat([h]),moduleId:i,parentId:h};-1===t.indexOf(h)&&(u.hot._acceptedDependencies[i]?(n[h]||(n[h]=[]),s(n[h],[i])):(delete n[h],t.push(h),r.push({chain:a.concat([h]),id:h})))}}}}return{type:"accepted",moduleId:e,outdatedModules:t,outdatedDependencies:n}}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];-1===e.indexOf(r)&&e.push(r)}}l.f&&delete l.f.jsonpHmr,t=void 0;var c={},d=[],h={},u=function(e){console.warn("[HMR] unexpected require("+e.id+") to disposed module")};for(var p in n)if(l.o(n,p)){var f,g=n[p],m=!1,w=!1,v=!1,y="";switch((f=g?a(p):{type:"disposed",moduleId:p}).chain&&(y="\nUpdate propagation: "+f.chain.join(" -> ")),f.type){case"self-declined":e.onDeclined&&e.onDeclined(f),e.ignoreDeclined||(m=new Error("Aborted because of self decline: "+f.moduleId+y));break;case"declined":e.onDeclined&&e.onDeclined(f),e.ignoreDeclined||(m=new Error("Aborted because of declined dependency: "+f.moduleId+" in "+f.parentId+y));break;case"unaccepted":e.onUnaccepted&&e.onUnaccepted(f),e.ignoreUnaccepted||(m=new Error("Aborted because "+p+" is not accepted"+y));break;case"accepted":e.onAccepted&&e.onAccepted(f),w=!0;break;case"disposed":e.onDisposed&&e.onDisposed(f),v=!0;break;default:throw new Error("Unexception type "+f.type)}if(m)return{error:m};if(w)for(p in h[p]=g,s(d,f.outdatedModules),f.outdatedDependencies)l.o(f.outdatedDependencies,p)&&(c[p]||(c[p]=[]),s(c[p],f.outdatedDependencies[p]));v&&(s(d,[f.moduleId]),h[p]=u)}n=void 0;for(var b,k=[],_=0;_<d.length;_++){var E=d[_],L=l.c[E];L&&(L.hot._selfAccepted||L.hot._main)&&h[E]!==u&&!L.hot._selfInvalidated&&k.push({module:E,require:L.hot._requireSelf,errorHandler:L.hot._selfAccepted})}return{dispose:function(){var e;r.forEach((function(e){delete i[e]})),r=void 0;for(var t,n=d.slice();n.length>0;){var o=n.pop(),a=l.c[o];if(a){var s={},h=a.hot._disposeHandlers;for(_=0;_<h.length;_++)h[_].call(null,s);for(l.hmrD[o]=s,a.hot.active=!1,delete l.c[o],delete c[o],_=0;_<a.children.length;_++){var u=l.c[a.children[_]];u&&(e=u.parents.indexOf(o))>=0&&u.parents.splice(e,1)}}}for(var p in c)if(l.o(c,p)&&(a=l.c[p]))for(b=c[p],_=0;_<b.length;_++)t=b[_],(e=a.children.indexOf(t))>=0&&a.children.splice(e,1)},apply:function(t){for(var n in h)l.o(h,n)&&(l.m[n]=h[n]);for(var r=0;r<o.length;r++)o[r](l);for(var i in c)if(l.o(c,i)){var a=l.c[i];if(a){b=c[i];for(var s=[],u=[],p=[],f=0;f<b.length;f++){var g=b[f],m=a.hot._acceptedDependencies[g],w=a.hot._acceptedErrorHandlers[g];if(m){if(-1!==s.indexOf(m))continue;s.push(m),u.push(w),p.push(g)}}for(var v=0;v<s.length;v++)try{s[v].call(null,b)}catch(n){if("function"==typeof u[v])try{u[v](n,{moduleId:i,dependencyId:p[v]})}catch(r){e.onErrored&&e.onErrored({type:"accept-error-handler-errored",moduleId:i,dependencyId:p[v],error:r,originalError:n}),e.ignoreErrored||(t(r),t(n))}else e.onErrored&&e.onErrored({type:"accept-errored",moduleId:i,dependencyId:p[v],error:n}),e.ignoreErrored||t(n)}}}for(var y=0;y<k.length;y++){var _=k[y],E=_.module;try{_.require(E)}catch(n){if("function"==typeof _.errorHandler)try{_.errorHandler(n,{moduleId:E,module:l.c[E]})}catch(r){e.onErrored&&e.onErrored({type:"self-accept-error-handler-errored",moduleId:E,error:r,originalError:n}),e.ignoreErrored||(t(r),t(n))}else e.onErrored&&e.onErrored({type:"self-accept-errored",moduleId:E,error:n}),e.ignoreErrored||t(n)}}return d}}}self.webpackHotUpdatevirtual_keyboard=(t,r,i)=>{for(var s in r)l.o(r,s)&&(n[s]=r[s],e&&e.push(s));i&&o.push(i),a[t]&&(a[t](),a[t]=void 0)},l.hmrI.jsonp=function(e,t){n||(n={},o=[],r=[],t.push(c)),l.o(n,e)||(n[e]=l.m[e])},l.hmrC.jsonp=function(e,a,d,h,u,p){u.push(c),t={},r=a,n=d.reduce((function(e,t){return e[t]=!1,e}),{}),o=[],e.forEach((function(e){l.o(i,e)&&void 0!==i[e]?(h.push(s(e,p)),t[e]=!0):t[e]=!1})),l.f&&(l.f.jsonpHmr=function(e,n){t&&l.o(t,e)&&!t[e]&&(n.push(s(e)),t[e]=!0)})},l.hmrM=()=>{if("undefined"==typeof fetch)throw new Error("No browser support: need fetch API");return fetch(l.p+l.hmrF()).then((e=>{if(404!==e.status){if(!e.ok)throw new Error("Failed to fetch update manifest "+e.statusText);return e.json()}}))}})(),l(131)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,